// Package jamfproapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.9.1 DO NOT EDIT.
package jamfproapi

import (
	"encoding/json"
	"fmt"
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	BasicAuthScopes = "BasicAuth.Scopes"
	BearerScopes    = "Bearer.Scopes"
)

// Defines values for AccountAccessLevel.
const (
	AccountAccessLevelFullAccess AccountAccessLevel = "FullAccess"

	AccountAccessLevelGroupBasedAccess AccountAccessLevel = "GroupBasedAccess"

	AccountAccessLevelSiteAccess AccountAccessLevel = "SiteAccess"
)

// Defines values for AccountPrivilegeSet.
const (
	AccountPrivilegeSetADMINISTRATOR AccountPrivilegeSet = "ADMINISTRATOR"

	AccountPrivilegeSetAUDITOR AccountPrivilegeSet = "AUDITOR"

	AccountPrivilegeSetCUSTOM AccountPrivilegeSet = "CUSTOM"

	AccountPrivilegeSetENROLLMENT AccountPrivilegeSet = "ENROLLMENT"
)

// Defines values for AccountGroupAccessLevel.
const (
	AccountGroupAccessLevelFullAccess AccountGroupAccessLevel = "FullAccess"

	AccountGroupAccessLevelGroupBasedAccess AccountGroupAccessLevel = "GroupBasedAccess"

	AccountGroupAccessLevelSiteAccess AccountGroupAccessLevel = "SiteAccess"
)

// Defines values for AccountGroupPrivilegeSet.
const (
	AccountGroupPrivilegeSetADMINISTRATOR AccountGroupPrivilegeSet = "ADMINISTRATOR"

	AccountGroupPrivilegeSetAUDITOR AccountGroupPrivilegeSet = "AUDITOR"

	AccountGroupPrivilegeSetCUSTOM AccountGroupPrivilegeSet = "CUSTOM"

	AccountGroupPrivilegeSetENROLLMENT AccountGroupPrivilegeSet = "ENROLLMENT"
)

// Defines values for AppAnalyticsSetting.
const (
	AppAnalyticsSettingDISABLEAPPANALYTICS AppAnalyticsSetting = "DISABLE_APP_ANALYTICS"

	AppAnalyticsSettingENABLEAPPANALYTICS AppAnalyticsSetting = "ENABLE_APP_ANALYTICS"
)

// Defines values for AuthAccountAccessLevel.
const (
	AuthAccountAccessLevelFullAccess AuthAccountAccessLevel = "FullAccess"

	AuthAccountAccessLevelGroupBasedAccess AuthAccountAccessLevel = "GroupBasedAccess"

	AuthAccountAccessLevelSiteAccess AuthAccountAccessLevel = "SiteAccess"
)

// Defines values for AuthAccountPrivilegeSet.
const (
	AuthAccountPrivilegeSetADMINISTRATOR AuthAccountPrivilegeSet = "ADMINISTRATOR"

	AuthAccountPrivilegeSetAUDITOR AuthAccountPrivilegeSet = "AUDITOR"

	AuthAccountPrivilegeSetCUSTOM AuthAccountPrivilegeSet = "CUSTOM"

	AuthAccountPrivilegeSetENROLLMENT AuthAccountPrivilegeSet = "ENROLLMENT"
)

// Defines values for AuthAccountV1AccessLevel.
const (
	AuthAccountV1AccessLevelFullAccess AuthAccountV1AccessLevel = "FullAccess"

	AuthAccountV1AccessLevelGroupBasedAccess AuthAccountV1AccessLevel = "GroupBasedAccess"

	AuthAccountV1AccessLevelSiteAccess AuthAccountV1AccessLevel = "SiteAccess"
)

// Defines values for AuthAccountV1PrivilegeSet.
const (
	AuthAccountV1PrivilegeSetADMINISTRATOR AuthAccountV1PrivilegeSet = "ADMINISTRATOR"

	AuthAccountV1PrivilegeSetAUDITOR AuthAccountV1PrivilegeSet = "AUDITOR"

	AuthAccountV1PrivilegeSetCUSTOM AuthAccountV1PrivilegeSet = "CUSTOM"

	AuthAccountV1PrivilegeSetENROLLMENT AuthAccountV1PrivilegeSet = "ENROLLMENT"
)

// Defines values for AuthorizationAuthenticationType.
const (
	AuthorizationAuthenticationTypeCLOUDCONNECTOR AuthorizationAuthenticationType = "CLOUD_CONNECTOR"

	AuthorizationAuthenticationTypeDEVICESIGNATURE AuthorizationAuthenticationType = "DEVICE_SIGNATURE"

	AuthorizationAuthenticationTypeINVITE AuthorizationAuthenticationType = "INVITE"

	AuthorizationAuthenticationTypeJSS AuthorizationAuthenticationType = "JSS"

	AuthorizationAuthenticationTypeLDAP AuthorizationAuthenticationType = "LDAP"

	AuthorizationAuthenticationTypeOAUTH AuthorizationAuthenticationType = "OAUTH"

	AuthorizationAuthenticationTypeSAML AuthorizationAuthenticationType = "SAML"

	AuthorizationAuthenticationTypeSYSTEMACCOUNT AuthorizationAuthenticationType = "SYSTEM_ACCOUNT"
)

// Defines values for AuthorizationV1AuthenticationType.
const (
	AuthorizationV1AuthenticationTypeCLOUDCONNECTOR AuthorizationV1AuthenticationType = "CLOUD_CONNECTOR"

	AuthorizationV1AuthenticationTypeDEVICESIGNATURE AuthorizationV1AuthenticationType = "DEVICE_SIGNATURE"

	AuthorizationV1AuthenticationTypeINVITE AuthorizationV1AuthenticationType = "INVITE"

	AuthorizationV1AuthenticationTypeJSS AuthorizationV1AuthenticationType = "JSS"

	AuthorizationV1AuthenticationTypeLDAP AuthorizationV1AuthenticationType = "LDAP"

	AuthorizationV1AuthenticationTypeOAUTH AuthorizationV1AuthenticationType = "OAUTH"

	AuthorizationV1AuthenticationTypeSAML AuthorizationV1AuthenticationType = "SAML"

	AuthorizationV1AuthenticationTypeSYSTEMACCOUNT AuthorizationV1AuthenticationType = "SYSTEM_ACCOUNT"
)

// Defines values for AzureAdMigrationReportProcessStatusMigrationReportStatus.
const (
	AzureAdMigrationReportProcessStatusMigrationReportStatusABORTED AzureAdMigrationReportProcessStatusMigrationReportStatus = "ABORTED"

	AzureAdMigrationReportProcessStatusMigrationReportStatusFAILED AzureAdMigrationReportProcessStatusMigrationReportStatus = "FAILED"

	AzureAdMigrationReportProcessStatusMigrationReportStatusFINISHED AzureAdMigrationReportProcessStatusMigrationReportStatus = "FINISHED"

	AzureAdMigrationReportProcessStatusMigrationReportStatusPENDING AzureAdMigrationReportProcessStatusMigrationReportStatus = "PENDING"
)

// Defines values for CloudIdPCommonProviderName.
const (
	CloudIdPCommonProviderNameAZURE CloudIdPCommonProviderName = "AZURE"

	CloudIdPCommonProviderNameGOOGLE CloudIdPCommonProviderName = "GOOGLE"
)

// Defines values for CloudIdPCommonRequestProviderName.
const (
	CloudIdPCommonRequestProviderNameAZURE CloudIdPCommonRequestProviderName = "AZURE"

	CloudIdPCommonRequestProviderNameGOOGLE CloudIdPCommonRequestProviderName = "GOOGLE"
)

// Defines values for CloudIdPCommonResponseProviderName.
const (
	CloudIdPCommonResponseProviderNameAZURE CloudIdPCommonResponseProviderName = "AZURE"

	CloudIdPCommonResponseProviderNameGOOGLE CloudIdPCommonResponseProviderName = "GOOGLE"
)

// Defines values for CloudLdapServerRequestConnectionType.
const (
	CloudLdapServerRequestConnectionTypeLDAPS CloudLdapServerRequestConnectionType = "LDAPS"

	CloudLdapServerRequestConnectionTypeSTARTTLS CloudLdapServerRequestConnectionType = "START_TLS"
)

// Defines values for CloudLdapServerResponseConnectionType.
const (
	CloudLdapServerResponseConnectionTypeLDAPS CloudLdapServerResponseConnectionType = "LDAPS"

	CloudLdapServerResponseConnectionTypeSTARTTLS CloudLdapServerResponseConnectionType = "START_TLS"
)

// Defines values for CloudLdapServerUpdateConnectionType.
const (
	CloudLdapServerUpdateConnectionTypeLDAPS CloudLdapServerUpdateConnectionType = "LDAPS"

	CloudLdapServerUpdateConnectionTypeSTARTTLS CloudLdapServerUpdateConnectionType = "START_TLS"
)

// Defines values for ComputerCertificateCertificateStatus.
const (
	ComputerCertificateCertificateStatusEXPIRED ComputerCertificateCertificateStatus = "EXPIRED"

	ComputerCertificateCertificateStatusEXPIRING ComputerCertificateCertificateStatus = "EXPIRING"

	ComputerCertificateCertificateStatusISSUED ComputerCertificateCertificateStatus = "ISSUED"

	ComputerCertificateCertificateStatusPENDINGREVOKE ComputerCertificateCertificateStatus = "PENDING_REVOKE"

	ComputerCertificateCertificateStatusREVOKED ComputerCertificateCertificateStatus = "REVOKED"
)

// Defines values for ComputerCertificateLifecycleStatus.
const (
	ComputerCertificateLifecycleStatusACTIVE ComputerCertificateLifecycleStatus = "ACTIVE"

	ComputerCertificateLifecycleStatusINACTIVE ComputerCertificateLifecycleStatus = "INACTIVE"
)

// Defines values for ComputerContentCachingRegistrationStatus.
const (
	ComputerContentCachingRegistrationStatusCONTENTCACHINGFAILED ComputerContentCachingRegistrationStatus = "CONTENT_CACHING_FAILED"

	ComputerContentCachingRegistrationStatusCONTENTCACHINGPENDING ComputerContentCachingRegistrationStatus = "CONTENT_CACHING_PENDING"

	ComputerContentCachingRegistrationStatusCONTENTCACHINGSUCCEEDED ComputerContentCachingRegistrationStatus = "CONTENT_CACHING_SUCCEEDED"
)

// Defines values for ComputerContentCachingTetheratorStatus.
const (
	ComputerContentCachingTetheratorStatusCONTENTCACHINGDISABLED ComputerContentCachingTetheratorStatus = "CONTENT_CACHING_DISABLED"

	ComputerContentCachingTetheratorStatusCONTENTCACHINGENABLED ComputerContentCachingTetheratorStatus = "CONTENT_CACHING_ENABLED"

	ComputerContentCachingTetheratorStatusCONTENTCACHINGUNKNOWN ComputerContentCachingTetheratorStatus = "CONTENT_CACHING_UNKNOWN"
)

// Defines values for ComputerDiskEncryptionIndividualRecoveryKeyValidityStatus.
const (
	ComputerDiskEncryptionIndividualRecoveryKeyValidityStatusINVALID ComputerDiskEncryptionIndividualRecoveryKeyValidityStatus = "INVALID"

	ComputerDiskEncryptionIndividualRecoveryKeyValidityStatusNOTAPPLICABLE ComputerDiskEncryptionIndividualRecoveryKeyValidityStatus = "NOT_APPLICABLE"

	ComputerDiskEncryptionIndividualRecoveryKeyValidityStatusUNKNOWN ComputerDiskEncryptionIndividualRecoveryKeyValidityStatus = "UNKNOWN"

	ComputerDiskEncryptionIndividualRecoveryKeyValidityStatusVALID ComputerDiskEncryptionIndividualRecoveryKeyValidityStatus = "VALID"
)

// Defines values for ComputerExtensionAttributeDataType.
const (
	ComputerExtensionAttributeDataTypeDATETIME ComputerExtensionAttributeDataType = "DATE_TIME"

	ComputerExtensionAttributeDataTypeINTEGER ComputerExtensionAttributeDataType = "INTEGER"

	ComputerExtensionAttributeDataTypeSTRING ComputerExtensionAttributeDataType = "STRING"
)

// Defines values for ComputerExtensionAttributeInputType.
const (
	ComputerExtensionAttributeInputTypeLDAP ComputerExtensionAttributeInputType = "LDAP"

	ComputerExtensionAttributeInputTypePOPUP ComputerExtensionAttributeInputType = "POPUP"

	ComputerExtensionAttributeInputTypeSCRIPT ComputerExtensionAttributeInputType = "SCRIPT"

	ComputerExtensionAttributeInputTypeTEXT ComputerExtensionAttributeInputType = "TEXT"
)

// Defines values for ComputerLocalUserAccountAzureActiveDirectoryId.
const (
	ComputerLocalUserAccountAzureActiveDirectoryIdACTIVATED ComputerLocalUserAccountAzureActiveDirectoryId = "ACTIVATED"

	ComputerLocalUserAccountAzureActiveDirectoryIdDEACTIVATED ComputerLocalUserAccountAzureActiveDirectoryId = "DEACTIVATED"

	ComputerLocalUserAccountAzureActiveDirectoryIdUNKNOWN ComputerLocalUserAccountAzureActiveDirectoryId = "UNKNOWN"

	ComputerLocalUserAccountAzureActiveDirectoryIdUNRESPONSIVE ComputerLocalUserAccountAzureActiveDirectoryId = "UNRESPONSIVE"
)

// Defines values for ComputerLocalUserAccountUserAccountType.
const (
	ComputerLocalUserAccountUserAccountTypeLOCAL ComputerLocalUserAccountUserAccountType = "LOCAL"

	ComputerLocalUserAccountUserAccountTypeMOBILE ComputerLocalUserAccountUserAccountType = "MOBILE"

	ComputerLocalUserAccountUserAccountTypeUNKNOWN ComputerLocalUserAccountUserAccountType = "UNKNOWN"
)

// Defines values for ComputerOperatingSystemFileVault2Status.
const (
	ComputerOperatingSystemFileVault2StatusALLENCRYPTED ComputerOperatingSystemFileVault2Status = "ALL_ENCRYPTED"

	ComputerOperatingSystemFileVault2StatusBOOTENCRYPTED ComputerOperatingSystemFileVault2Status = "BOOT_ENCRYPTED"

	ComputerOperatingSystemFileVault2StatusNOTAPPLICABLE ComputerOperatingSystemFileVault2Status = "NOT_APPLICABLE"

	ComputerOperatingSystemFileVault2StatusNOTENCRYPTED ComputerOperatingSystemFileVault2Status = "NOT_ENCRYPTED"

	ComputerOperatingSystemFileVault2StatusSOMEENCRYPTED ComputerOperatingSystemFileVault2Status = "SOME_ENCRYPTED"
)

// Defines values for ComputerPartitionPartitionType.
const (
	ComputerPartitionPartitionTypeBOOT ComputerPartitionPartitionType = "BOOT"

	ComputerPartitionPartitionTypeOTHER ComputerPartitionPartitionType = "OTHER"

	ComputerPartitionPartitionTypeRECOVERY ComputerPartitionPartitionType = "RECOVERY"
)

// Defines values for ComputerPartitionFileVault2State.
const (
	ComputerPartitionFileVault2StateDECRYPTED ComputerPartitionFileVault2State = "DECRYPTED"

	ComputerPartitionFileVault2StateDECRYPTING ComputerPartitionFileVault2State = "DECRYPTING"

	ComputerPartitionFileVault2StateDECRYPTINGPAUSED ComputerPartitionFileVault2State = "DECRYPTING_PAUSED"

	ComputerPartitionFileVault2StateENCRYPTED ComputerPartitionFileVault2State = "ENCRYPTED"

	ComputerPartitionFileVault2StateENCRYPTING ComputerPartitionFileVault2State = "ENCRYPTING"

	ComputerPartitionFileVault2StateENCRYPTINGPAUSED ComputerPartitionFileVault2State = "ENCRYPTING_PAUSED"

	ComputerPartitionFileVault2StateINELIGIBLE ComputerPartitionFileVault2State = "INELIGIBLE"

	ComputerPartitionFileVault2StateOPTIMIZING ComputerPartitionFileVault2State = "OPTIMIZING"

	ComputerPartitionFileVault2StateRESTARTNEEDED ComputerPartitionFileVault2State = "RESTART_NEEDED"

	ComputerPartitionFileVault2StateUNENCRYPTED ComputerPartitionFileVault2State = "UNENCRYPTED"

	ComputerPartitionFileVault2StateUNKNOWN ComputerPartitionFileVault2State = "UNKNOWN"
)

// Defines values for ComputerPrestageV2RecoveryLockPasswordType.
const (
	ComputerPrestageV2RecoveryLockPasswordTypeMANUAL ComputerPrestageV2RecoveryLockPasswordType = "MANUAL"

	ComputerPrestageV2RecoveryLockPasswordTypeRANDOM ComputerPrestageV2RecoveryLockPasswordType = "RANDOM"
)

// Defines values for ComputerSection.
const (
	ComputerSectionAPPLICATIONS ComputerSection = "APPLICATIONS"

	ComputerSectionATTACHMENTS ComputerSection = "ATTACHMENTS"

	ComputerSectionCERTIFICATES ComputerSection = "CERTIFICATES"

	ComputerSectionCONFIGURATIONPROFILES ComputerSection = "CONFIGURATION_PROFILES"

	ComputerSectionCONTENTCACHING ComputerSection = "CONTENT_CACHING"

	ComputerSectionDISKENCRYPTION ComputerSection = "DISK_ENCRYPTION"

	ComputerSectionEXTENSIONATTRIBUTES ComputerSection = "EXTENSION_ATTRIBUTES"

	ComputerSectionFONTS ComputerSection = "FONTS"

	ComputerSectionGENERAL ComputerSection = "GENERAL"

	ComputerSectionGROUPMEMBERSHIPS ComputerSection = "GROUP_MEMBERSHIPS"

	ComputerSectionHARDWARE ComputerSection = "HARDWARE"

	ComputerSectionIBEACONS ComputerSection = "IBEACONS"

	ComputerSectionLICENSEDSOFTWARE ComputerSection = "LICENSED_SOFTWARE"

	ComputerSectionLOCALUSERACCOUNTS ComputerSection = "LOCAL_USER_ACCOUNTS"

	ComputerSectionOPERATINGSYSTEM ComputerSection = "OPERATING_SYSTEM"

	ComputerSectionPACKAGERECEIPTS ComputerSection = "PACKAGE_RECEIPTS"

	ComputerSectionPLUGINS ComputerSection = "PLUGINS"

	ComputerSectionPRINTERS ComputerSection = "PRINTERS"

	ComputerSectionPURCHASING ComputerSection = "PURCHASING"

	ComputerSectionSECURITY ComputerSection = "SECURITY"

	ComputerSectionSERVICES ComputerSection = "SERVICES"

	ComputerSectionSOFTWAREUPDATES ComputerSection = "SOFTWARE_UPDATES"

	ComputerSectionSTORAGE ComputerSection = "STORAGE"

	ComputerSectionUSERANDLOCATION ComputerSection = "USER_AND_LOCATION"
)

// Defines values for ComputerSecurityExternalBootLevel.
const (
	ComputerSecurityExternalBootLevelALLOWBOOTINGFROMEXTERNALMEDIA ComputerSecurityExternalBootLevel = "ALLOW_BOOTING_FROM_EXTERNAL_MEDIA"

	ComputerSecurityExternalBootLevelDISALLOWBOOTINGFROMEXTERNALMEDIA ComputerSecurityExternalBootLevel = "DISALLOW_BOOTING_FROM_EXTERNAL_MEDIA"

	ComputerSecurityExternalBootLevelNOTSUPPORTED ComputerSecurityExternalBootLevel = "NOT_SUPPORTED"

	ComputerSecurityExternalBootLevelUNKNOWN ComputerSecurityExternalBootLevel = "UNKNOWN"
)

// Defines values for ComputerSecurityGatekeeperStatus.
const (
	ComputerSecurityGatekeeperStatusAPPSTORE ComputerSecurityGatekeeperStatus = "APP_STORE"

	ComputerSecurityGatekeeperStatusAPPSTOREANDIDENTIFIEDDEVELOPERS ComputerSecurityGatekeeperStatus = "APP_STORE_AND_IDENTIFIED_DEVELOPERS"

	ComputerSecurityGatekeeperStatusDISABLED ComputerSecurityGatekeeperStatus = "DISABLED"

	ComputerSecurityGatekeeperStatusNOTCOLLECTED ComputerSecurityGatekeeperStatus = "NOT_COLLECTED"
)

// Defines values for ComputerSecuritySecureBootLevel.
const (
	ComputerSecuritySecureBootLevelFULLSECURITY ComputerSecuritySecureBootLevel = "FULL_SECURITY"

	ComputerSecuritySecureBootLevelMEDIUMSECURITY ComputerSecuritySecureBootLevel = "MEDIUM_SECURITY"

	ComputerSecuritySecureBootLevelNOSECURITY ComputerSecuritySecureBootLevel = "NO_SECURITY"

	ComputerSecuritySecureBootLevelNOTSUPPORTED ComputerSecuritySecureBootLevel = "NOT_SUPPORTED"

	ComputerSecuritySecureBootLevelUNKNOWN ComputerSecuritySecureBootLevel = "UNKNOWN"
)

// Defines values for ComputerSecuritySipStatus.
const (
	ComputerSecuritySipStatusDISABLED ComputerSecuritySipStatus = "DISABLED"

	ComputerSecuritySipStatusENABLED ComputerSecuritySipStatus = "ENABLED"

	ComputerSecuritySipStatusNOTAVAILABLE ComputerSecuritySipStatus = "NOT_AVAILABLE"

	ComputerSecuritySipStatusNOTCOLLECTED ComputerSecuritySipStatus = "NOT_COLLECTED"
)

// Defines values for CreatePathScope.
const (
	CreatePathScopeAPP CreatePathScope = "APP"

	CreatePathScopeFONT CreatePathScope = "FONT"

	CreatePathScopePLUGIN CreatePathScope = "PLUGIN"
)

// Defines values for CurrentAccountAccessLevel.
const (
	CurrentAccountAccessLevelFullAccess CurrentAccountAccessLevel = "FullAccess"

	CurrentAccountAccessLevelGroupBasedAccess CurrentAccountAccessLevel = "GroupBasedAccess"

	CurrentAccountAccessLevelSiteAccess CurrentAccountAccessLevel = "SiteAccess"
)

// Defines values for CurrentAccountPrivilegeSet.
const (
	CurrentAccountPrivilegeSetADMINISTRATOR CurrentAccountPrivilegeSet = "ADMINISTRATOR"

	CurrentAccountPrivilegeSetAUDITOR CurrentAccountPrivilegeSet = "AUDITOR"

	CurrentAccountPrivilegeSetCUSTOM CurrentAccountPrivilegeSet = "CUSTOM"

	CurrentAccountPrivilegeSetENROLLMENT CurrentAccountPrivilegeSet = "ENROLLMENT"
)

// Defines values for CurrentAuthorizationAuthenticationType.
const (
	CurrentAuthorizationAuthenticationTypeCLOUDCONNECTOR CurrentAuthorizationAuthenticationType = "CLOUD_CONNECTOR"

	CurrentAuthorizationAuthenticationTypeDEVICESIGNATURE CurrentAuthorizationAuthenticationType = "DEVICE_SIGNATURE"

	CurrentAuthorizationAuthenticationTypeINVITE CurrentAuthorizationAuthenticationType = "INVITE"

	CurrentAuthorizationAuthenticationTypeJSS CurrentAuthorizationAuthenticationType = "JSS"

	CurrentAuthorizationAuthenticationTypeLDAP CurrentAuthorizationAuthenticationType = "LDAP"

	CurrentAuthorizationAuthenticationTypeOAUTH CurrentAuthorizationAuthenticationType = "OAUTH"

	CurrentAuthorizationAuthenticationTypeSAML CurrentAuthorizationAuthenticationType = "SAML"

	CurrentAuthorizationAuthenticationTypeSYSTEMACCOUNT CurrentAuthorizationAuthenticationType = "SYSTEM_ACCOUNT"
)

// Defines values for DataRoamingSetting.
const (
	DataRoamingSettingDISABLEDATAROAMING DataRoamingSetting = "DISABLE_DATA_ROAMING"

	DataRoamingSettingENABLEDATAROAMING DataRoamingSetting = "ENABLE_DATA_ROAMING"
)

// Defines values for DayOfWeek.
const (
	DayOfWeekFRIDAY DayOfWeek = "FRIDAY"

	DayOfWeekMONDAY DayOfWeek = "MONDAY"

	DayOfWeekSATURDAY DayOfWeek = "SATURDAY"

	DayOfWeekSUNDAY DayOfWeek = "SUNDAY"

	DayOfWeekTHURSDAY DayOfWeek = "THURSDAY"

	DayOfWeekTUESDAY DayOfWeek = "TUESDAY"

	DayOfWeekWEDNESDAY DayOfWeek = "WEDNESDAY"
)

// Defines values for DeploymentTaskStatus.
const (
	DeploymentTaskStatusCOMMANDQUEUED DeploymentTaskStatus = "COMMAND_QUEUED"

	DeploymentTaskStatusCOMPLETE DeploymentTaskStatus = "COMPLETE"

	DeploymentTaskStatusGAVEUP DeploymentTaskStatus = "GAVE_UP"

	DeploymentTaskStatusNOCOMMAND DeploymentTaskStatus = "NO_COMMAND"

	DeploymentTaskStatusPENDINGMANIFEST DeploymentTaskStatus = "PENDING_MANIFEST"

	DeploymentTaskStatusUNKNOWN DeploymentTaskStatus = "UNKNOWN"
)

// Defines values for DeprecatedServerRequestConnectionType.
const (
	DeprecatedServerRequestConnectionTypeLDAPS DeprecatedServerRequestConnectionType = "LDAPS"

	DeprecatedServerRequestConnectionTypeSTARTTLS DeprecatedServerRequestConnectionType = "START_TLS"
)

// Defines values for DeprecatedServerResponseConnectionType.
const (
	DeprecatedServerResponseConnectionTypeLDAPS DeprecatedServerResponseConnectionType = "LDAPS"

	DeprecatedServerResponseConnectionTypeSTARTTLS DeprecatedServerResponseConnectionType = "START_TLS"
)

// Defines values for DeprecatedServerUpdateConnectionType.
const (
	DeprecatedServerUpdateConnectionTypeLDAPS DeprecatedServerUpdateConnectionType = "LDAPS"

	DeprecatedServerUpdateConnectionTypeSTARTTLS DeprecatedServerUpdateConnectionType = "START_TLS"
)

// Defines values for DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDays.
const (
	DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDaysN120 DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDays = 120

	DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDaysN180 DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDays = 180

	DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDaysN90 DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDays = 90
)

// Defines values for DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDays.
const (
	DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDaysN120 DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDays = 120

	DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDaysN180 DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDays = 180

	DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDaysN90 DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDays = 90
)

// Defines values for DeviceComplianceInformationComplianceState.
const (
	DeviceComplianceInformationComplianceStateCOMPLIANT DeviceComplianceInformationComplianceState = "COMPLIANT"

	DeviceComplianceInformationComplianceStateNONCOMPLIANT DeviceComplianceInformationComplianceState = "NON_COMPLIANT"

	DeviceComplianceInformationComplianceStateUNKNOWN DeviceComplianceInformationComplianceState = "UNKNOWN"
)

// Defines values for DeviceEnrollmentDeviceProfileStatus.
const (
	DeviceEnrollmentDeviceProfileStatusASSIGNED DeviceEnrollmentDeviceProfileStatus = "ASSIGNED"

	DeviceEnrollmentDeviceProfileStatusEMPTY DeviceEnrollmentDeviceProfileStatus = "EMPTY"

	DeviceEnrollmentDeviceProfileStatusPUSHED DeviceEnrollmentDeviceProfileStatus = "PUSHED"

	DeviceEnrollmentDeviceProfileStatusREMOVED DeviceEnrollmentDeviceProfileStatus = "REMOVED"
)

// Defines values for DiagnosticSubmissionSetting.
const (
	DiagnosticSubmissionSettingDISABLEDIAGNOSTICSUBMISSION DiagnosticSubmissionSetting = "DISABLE_DIAGNOSTIC_SUBMISSION"

	DiagnosticSubmissionSettingENABLEDIAGNOSTICSUBMISSION DiagnosticSubmissionSetting = "ENABLE_DIAGNOSTIC_SUBMISSION"
)

// Defines values for EbookKind.
const (
	EbookKindEPUB EbookKind = "EPUB"

	EbookKindIBOOKS EbookKind = "IBOOKS"

	EbookKindPDF EbookKind = "PDF"

	EbookKindUNKNOWN EbookKind = "UNKNOWN"
)

// Defines values for EnrollmentSettingsFlushMdmCommandsOnReenroll.
const (
	EnrollmentSettingsFlushMdmCommandsOnReenrollDELETEERRORS EnrollmentSettingsFlushMdmCommandsOnReenroll = "DELETE_ERRORS"

	EnrollmentSettingsFlushMdmCommandsOnReenrollDELETEEVERYTHING EnrollmentSettingsFlushMdmCommandsOnReenroll = "DELETE_EVERYTHING"

	EnrollmentSettingsFlushMdmCommandsOnReenrollDELETEEVERYTHINGEXCEPTACKNOWLEDGED EnrollmentSettingsFlushMdmCommandsOnReenroll = "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED"

	EnrollmentSettingsFlushMdmCommandsOnReenrollDELETENOTHING EnrollmentSettingsFlushMdmCommandsOnReenroll = "DELETE_NOTHING"
)

// Defines values for EnrollmentSettingsPasswordType.
const (
	EnrollmentSettingsPasswordTypeRANDOM EnrollmentSettingsPasswordType = "RANDOM"

	EnrollmentSettingsPasswordTypeSTATIC EnrollmentSettingsPasswordType = "STATIC"
)

// Defines values for EnrollmentSettingsPersonalDeviceEnrollmentType.
const (
	EnrollmentSettingsPersonalDeviceEnrollmentTypePERSONALDEVICEPROFILES EnrollmentSettingsPersonalDeviceEnrollmentType = "PERSONALDEVICEPROFILES"

	EnrollmentSettingsPersonalDeviceEnrollmentTypeUSERENROLLMENT EnrollmentSettingsPersonalDeviceEnrollmentType = "USERENROLLMENT"
)

// Defines values for EnrollmentSettingsV2FlushMdmCommandsOnReenroll.
const (
	EnrollmentSettingsV2FlushMdmCommandsOnReenrollDELETEERRORS EnrollmentSettingsV2FlushMdmCommandsOnReenroll = "DELETE_ERRORS"

	EnrollmentSettingsV2FlushMdmCommandsOnReenrollDELETEEVERYTHING EnrollmentSettingsV2FlushMdmCommandsOnReenroll = "DELETE_EVERYTHING"

	EnrollmentSettingsV2FlushMdmCommandsOnReenrollDELETEEVERYTHINGEXCEPTACKNOWLEDGED EnrollmentSettingsV2FlushMdmCommandsOnReenroll = "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED"

	EnrollmentSettingsV2FlushMdmCommandsOnReenrollDELETENOTHING EnrollmentSettingsV2FlushMdmCommandsOnReenroll = "DELETE_NOTHING"
)

// Defines values for EnrollmentSettingsV2PasswordType.
const (
	EnrollmentSettingsV2PasswordTypeRANDOM EnrollmentSettingsV2PasswordType = "RANDOM"

	EnrollmentSettingsV2PasswordTypeSTATIC EnrollmentSettingsV2PasswordType = "STATIC"
)

// Defines values for EnrollmentSettingsV2PersonalDeviceEnrollmentType.
const (
	EnrollmentSettingsV2PersonalDeviceEnrollmentTypePERSONALDEVICEPROFILES EnrollmentSettingsV2PersonalDeviceEnrollmentType = "PERSONALDEVICEPROFILES"

	EnrollmentSettingsV2PersonalDeviceEnrollmentTypeUSERENROLLMENT EnrollmentSettingsV2PersonalDeviceEnrollmentType = "USERENROLLMENT"
)

// Defines values for ExtensionAttributeType.
const (
	ExtensionAttributeTypeDATE ExtensionAttributeType = "DATE"

	ExtensionAttributeTypeINTEGER ExtensionAttributeType = "INTEGER"

	ExtensionAttributeTypeSTRING ExtensionAttributeType = "STRING"
)

// Defines values for ExtensionAttributeV2Type.
const (
	ExtensionAttributeV2TypeDATE ExtensionAttributeV2Type = "DATE"

	ExtensionAttributeV2TypeINTEGER ExtensionAttributeV2Type = "INTEGER"

	ExtensionAttributeV2TypeSTRING ExtensionAttributeV2Type = "STRING"
)

// Defines values for FilterOperator.
const (
	FilterOperatorEQUALS FilterOperator = "EQUALS"

	FilterOperatorGREATERTHAN FilterOperator = "GREATER_THAN"

	FilterOperatorGREATERTHANEQUAL FilterOperator = "GREATER_THAN_EQUAL"

	FilterOperatorLESSTHAN FilterOperator = "LESS_THAN"

	FilterOperatorLESSTHANEQUAL FilterOperator = "LESS_THAN_EQUAL"

	FilterOperatorNOTEQUALS FilterOperator = "NOT_EQUALS"
)

// Defines values for GroupMappingsObjectClassLimitation.
const (
	GroupMappingsObjectClassLimitationALLOBJECTCLASSES GroupMappingsObjectClassLimitation = "ALL_OBJECT_CLASSES"

	GroupMappingsObjectClassLimitationANYOBJECTCLASSES GroupMappingsObjectClassLimitation = "ANY_OBJECT_CLASSES"
)

// Defines values for GroupMappingsSearchScope.
const (
	GroupMappingsSearchScopeALLSUBTREES GroupMappingsSearchScope = "ALL_SUBTREES"

	GroupMappingsSearchScopeFIRSTLEVELONLY GroupMappingsSearchScope = "FIRST_LEVEL_ONLY"
)

// Defines values for InternalRecipientFrequency.
const (
	InternalRecipientFrequencyDAILY InternalRecipientFrequency = "DAILY"
)

// Defines values for InventoryPreloadRecordDeviceType.
const (
	InventoryPreloadRecordDeviceTypeComputer InventoryPreloadRecordDeviceType = "Computer"

	InventoryPreloadRecordDeviceTypeMobileDevice InventoryPreloadRecordDeviceType = "Mobile Device"

	InventoryPreloadRecordDeviceTypeUnknown InventoryPreloadRecordDeviceType = "Unknown"
)

// Defines values for InventoryPreloadRecordV2DeviceType.
const (
	InventoryPreloadRecordV2DeviceTypeComputer InventoryPreloadRecordV2DeviceType = "Computer"

	InventoryPreloadRecordV2DeviceTypeMobileDevice InventoryPreloadRecordV2DeviceType = "Mobile Device"

	InventoryPreloadRecordV2DeviceTypeUnknown InventoryPreloadRecordV2DeviceType = "Unknown"
)

// Defines values for LinkedConnectProfileAutoDeploymentType.
const (
	LinkedConnectProfileAutoDeploymentTypeINITIALINSTALLATIONONLY LinkedConnectProfileAutoDeploymentType = "INITIAL_INSTALLATION_ONLY"

	LinkedConnectProfileAutoDeploymentTypeMINORANDPATCHUPDATES LinkedConnectProfileAutoDeploymentType = "MINOR_AND_PATCH_UPDATES"

	LinkedConnectProfileAutoDeploymentTypeNONE LinkedConnectProfileAutoDeploymentType = "NONE"

	LinkedConnectProfileAutoDeploymentTypePATCHUPDATES LinkedConnectProfileAutoDeploymentType = "PATCH_UPDATES"
)

// Defines values for MacOsManagedSoftwareUpdateUpdateAction.
const (
	MacOsManagedSoftwareUpdateUpdateActionDOWNLOADANDINSTALL MacOsManagedSoftwareUpdateUpdateAction = "DOWNLOAD_AND_INSTALL"

	MacOsManagedSoftwareUpdateUpdateActionDOWNLOADONLY MacOsManagedSoftwareUpdateUpdateAction = "DOWNLOAD_ONLY"
)

// Defines values for MdmClientType.
const (
	MdmClientTypeCOMPUTER MdmClientType = "COMPUTER"

	MdmClientTypeCOMPUTERUSER MdmClientType = "COMPUTER_USER"

	MdmClientTypeMOBILEDEVICE MdmClientType = "MOBILE_DEVICE"

	MdmClientTypeMOBILEDEVICEUSER MdmClientType = "MOBILE_DEVICE_USER"

	MdmClientTypeTV MdmClientType = "TV"
)

// Defines values for MdmCommandState.
const (
	MdmCommandStateACKNOWLEDGED MdmCommandState = "ACKNOWLEDGED"

	MdmCommandStateERROR MdmCommandState = "ERROR"

	MdmCommandStateNOTNOW MdmCommandState = "NOT_NOW"

	MdmCommandStatePENDING MdmCommandState = "PENDING"
)

// Defines values for MdmCommandType.
const (
	MdmCommandTypeACCOUNTCONFIGURATION MdmCommandType = "ACCOUNT_CONFIGURATION"

	MdmCommandTypeACTIVATIONLOCKBYPASSCODE MdmCommandType = "ACTIVATION_LOCK_BYPASS_CODE"

	MdmCommandTypeAPPLYREDEMPTIONCODE MdmCommandType = "APPLY_REDEMPTION_CODE"

	MdmCommandTypeAVAILABLEOSUPDATES MdmCommandType = "AVAILABLE_OS_UPDATES"

	MdmCommandTypeBLANKPUSH MdmCommandType = "BLANK_PUSH"

	MdmCommandTypeCERTIFICATELIST MdmCommandType = "CERTIFICATE_LIST"

	MdmCommandTypeCLEARACTIVATIONLOCKBYPASSCODE MdmCommandType = "CLEAR_ACTIVATION_LOCK_BYPASS_CODE"

	MdmCommandTypeCLEARPASSCODE MdmCommandType = "CLEAR_PASSCODE"

	MdmCommandTypeCLEARRESTRICTIONSPASSWORD MdmCommandType = "CLEAR_RESTRICTIONS_PASSWORD"

	MdmCommandTypeCONTENTCACHINGINFORMATION MdmCommandType = "CONTENT_CACHING_INFORMATION"

	MdmCommandTypeCORPORATEWIPE MdmCommandType = "CORPORATE_WIPE"

	MdmCommandTypeDELETEUSER MdmCommandType = "DELETE_USER"

	MdmCommandTypeDEVICECONFIGURED MdmCommandType = "DEVICE_CONFIGURED"

	MdmCommandTypeDEVICEINFOACCOUNTHASH MdmCommandType = "DEVICE_INFO_ACCOUNT_HASH"

	MdmCommandTypeDEVICEINFOACTIVEMANAGEDUSERS MdmCommandType = "DEVICE_INFO_ACTIVE_MANAGED_USERS"

	MdmCommandTypeDEVICEINFOITUNESACTIVE MdmCommandType = "DEVICE_INFO_ITUNES_ACTIVE"

	MdmCommandTypeDEVICEINFOLASTCLOUDBACKUPDATE MdmCommandType = "DEVICE_INFO_LAST_CLOUD_BACKUP_DATE"

	MdmCommandTypeDEVICEINFORMATION MdmCommandType = "DEVICE_INFORMATION"

	MdmCommandTypeDEVICELOCATION MdmCommandType = "DEVICE_LOCATION"

	MdmCommandTypeDEVICELOCK MdmCommandType = "DEVICE_LOCK"

	MdmCommandTypeDEVICENAME MdmCommandType = "DEVICE_NAME"

	MdmCommandTypeDISABLEACTIVATIONLOCK MdmCommandType = "DISABLE_ACTIVATION_LOCK"

	MdmCommandTypeDISABLELOSTMODE MdmCommandType = "DISABLE_LOST_MODE"

	MdmCommandTypeDISABLEREMOTEDESKTOP MdmCommandType = "DISABLE_REMOTE_DESKTOP"

	MdmCommandTypeENABLEACTIVATIONLOCK MdmCommandType = "ENABLE_ACTIVATION_LOCK"

	MdmCommandTypeENABLELOSTMODE MdmCommandType = "ENABLE_LOST_MODE"

	MdmCommandTypeENABLEREMOTEDESKTOP MdmCommandType = "ENABLE_REMOTE_DESKTOP"

	MdmCommandTypeERASEDEVICE MdmCommandType = "ERASE_DEVICE"

	MdmCommandTypeINSTALLAPPLICATION MdmCommandType = "INSTALL_APPLICATION"

	MdmCommandTypeINSTALLBYOPROFILE MdmCommandType = "INSTALL_BYO_PROFILE"

	MdmCommandTypeINSTALLEDAPPLICATIONLIST MdmCommandType = "INSTALLED_APPLICATION_LIST"

	MdmCommandTypeINSTALLENTERPRISEAPPLICATION MdmCommandType = "INSTALL_ENTERPRISE_APPLICATION"

	MdmCommandTypeINSTALLMEDIA MdmCommandType = "INSTALL_MEDIA"

	MdmCommandTypeINSTALLPACKAGE MdmCommandType = "INSTALL_PACKAGE"

	MdmCommandTypeINSTALLPROFILE MdmCommandType = "INSTALL_PROFILE"

	MdmCommandTypeINSTALLPROVISIONINGPROFILE MdmCommandType = "INSTALL_PROVISIONING_PROFILE"

	MdmCommandTypeINVITETOPROGRAM MdmCommandType = "INVITE_TO_PROGRAM"

	MdmCommandTypeLASTCLOUDBACKUPDATE MdmCommandType = "LAST_CLOUD_BACKUP_DATE"

	MdmCommandTypeLOGOUTUSER MdmCommandType = "LOG_OUT_USER"

	MdmCommandTypeMANAGEDAPPLICATIONLIST MdmCommandType = "MANAGED_APPLICATION_LIST"

	MdmCommandTypeMANAGEDMEDIALIST MdmCommandType = "MANAGED_MEDIA_LIST"

	MdmCommandTypeMARKASCORPORATEWIPE MdmCommandType = "MARK_AS_CORPORATE_WIPE"

	MdmCommandTypeMARKASUNMANAGED MdmCommandType = "MARK_AS_UNMANAGED"

	MdmCommandTypeOSUPDATESTATUS MdmCommandType = "OS_UPDATE_STATUS"

	MdmCommandTypePASSCODELOCKGRACEPERIOD MdmCommandType = "PASSCODE_LOCK_GRACE_PERIOD"

	MdmCommandTypePLAYLOSTMODESOUND MdmCommandType = "PLAY_LOST_MODE_SOUND"

	MdmCommandTypePROFILELIST MdmCommandType = "PROFILE_LIST"

	MdmCommandTypePROVISIONINGPROFILELIST MdmCommandType = "PROVISIONING_PROFILE_LIST"

	MdmCommandTypePUSHTRIGGER MdmCommandType = "PUSH_TRIGGER"

	MdmCommandTypeQUERYRESPONSES MdmCommandType = "QUERY_RESPONSES"

	MdmCommandTypeREFRESHCELLULARPLANS MdmCommandType = "REFRESH_CELLULAR_PLANS"

	MdmCommandTypeREINSTALLPROFILE MdmCommandType = "REINSTALL_PROFILE"

	MdmCommandTypeREMOVEAPPLICATION MdmCommandType = "REMOVE_APPLICATION"

	MdmCommandTypeREMOVEMEDIA MdmCommandType = "REMOVE_MEDIA"

	MdmCommandTypeREMOVEPROFILE MdmCommandType = "REMOVE_PROFILE"

	MdmCommandTypeREMOVEPROVISIONINGPROFILE MdmCommandType = "REMOVE_PROVISIONING_PROFILE"

	MdmCommandTypeREQUESTMIRRORING MdmCommandType = "REQUEST_MIRRORING"

	MdmCommandTypeRESTARTDEVICE MdmCommandType = "RESTART_DEVICE"

	MdmCommandTypeRESTRICTIONS MdmCommandType = "RESTRICTIONS"

	MdmCommandTypeSCHEDULEOSUPDATE MdmCommandType = "SCHEDULE_OS_UPDATE"

	MdmCommandTypeSCHEDULEOSUPDATESCAN MdmCommandType = "SCHEDULE_OS_UPDATE_SCAN"

	MdmCommandTypeSECURITYINFO MdmCommandType = "SECURITY_INFO"

	MdmCommandTypeSETRECOVERYLOCK MdmCommandType = "SET_RECOVERY_LOCK"

	MdmCommandTypeSETTINGS MdmCommandType = "SETTINGS"

	MdmCommandTypeSETTINGSDISABLEAPPANALYTICS MdmCommandType = "SETTINGS_DISABLE_APP_ANALYTICS"

	MdmCommandTypeSETTINGSDISABLEBLUETOOTH MdmCommandType = "SETTINGS_DISABLE_BLUETOOTH"

	MdmCommandTypeSETTINGSDISABLEDATAROAMING MdmCommandType = "SETTINGS_DISABLE_DATA_ROAMING"

	MdmCommandTypeSETTINGSDISABLEDIAGNOSTICSUBMISSION MdmCommandType = "SETTINGS_DISABLE_DIAGNOSTIC_SUBMISSION"

	MdmCommandTypeSETTINGSDISABLEPERSONALHOTSPOT MdmCommandType = "SETTINGS_DISABLE_PERSONAL_HOTSPOT"

	MdmCommandTypeSETTINGSDISABLEVOICEROAMING MdmCommandType = "SETTINGS_DISABLE_VOICE_ROAMING"

	MdmCommandTypeSETTINGSENABLEAPPANALYTICS MdmCommandType = "SETTINGS_ENABLE_APP_ANALYTICS"

	MdmCommandTypeSETTINGSENABLEBLUETOOTH MdmCommandType = "SETTINGS_ENABLE_BLUETOOTH"

	MdmCommandTypeSETTINGSENABLEDATAROAMING MdmCommandType = "SETTINGS_ENABLE_DATA_ROAMING"

	MdmCommandTypeSETTINGSENABLEDIAGNOSTICSUBMISSION MdmCommandType = "SETTINGS_ENABLE_DIAGNOSTIC_SUBMISSION"

	MdmCommandTypeSETTINGSENABLEPERSONALHOTSPOT MdmCommandType = "SETTINGS_ENABLE_PERSONAL_HOTSPOT"

	MdmCommandTypeSETTINGSENABLEVOICEROAMING MdmCommandType = "SETTINGS_ENABLE_VOICE_ROAMING"

	MdmCommandTypeSETTINGSMOBILEDEVICEAPPLICATIONATTRIBUTES MdmCommandType = "SETTINGS_MOBILE_DEVICE_APPLICATION_ATTRIBUTES"

	MdmCommandTypeSETTINGSMOBILEDEVICEPERAPPVPN MdmCommandType = "SETTINGS_MOBILE_DEVICE_PER_APP_VPN"

	MdmCommandTypeSHUTDOWNDEVICE MdmCommandType = "SHUT_DOWN_DEVICE"

	MdmCommandTypeSTOPMIRRORING MdmCommandType = "STOP_MIRRORING"

	MdmCommandTypeUNKNOWN MdmCommandType = "UNKNOWN"

	MdmCommandTypeUNLOCKUSERACCOUNT MdmCommandType = "UNLOCK_USER_ACCOUNT"

	MdmCommandTypeUNMANAGEDEVICE MdmCommandType = "UNMANAGE_DEVICE"

	MdmCommandTypeUPDATEINVENTORY MdmCommandType = "UPDATE_INVENTORY"

	MdmCommandTypeUSERLIST MdmCommandType = "USER_LIST"

	MdmCommandTypeVALIDATEAPPLICATIONS MdmCommandType = "VALIDATE_APPLICATIONS"

	MdmCommandTypeWALLPAPER MdmCommandType = "WALLPAPER"
)

// Defines values for MobileDeviceType.
const (
	MobileDeviceTypeAndroid MobileDeviceType = "android"

	MobileDeviceTypeAppleTv MobileDeviceType = "appleTv"

	MobileDeviceTypeIos MobileDeviceType = "ios"

	MobileDeviceTypeUnknown MobileDeviceType = "unknown"
)

// Defines values for MobileDeviceDetailsType.
const (
	MobileDeviceDetailsTypeAndroid MobileDeviceDetailsType = "android"

	MobileDeviceDetailsTypeAppleTv MobileDeviceDetailsType = "appleTv"

	MobileDeviceDetailsTypeIos MobileDeviceDetailsType = "ios"

	MobileDeviceDetailsTypeUnknown MobileDeviceDetailsType = "unknown"
)

// Defines values for MobileDeviceDetailsV2Type.
const (
	MobileDeviceDetailsV2TypeIos MobileDeviceDetailsV2Type = "ios"

	MobileDeviceDetailsV2TypeTvos MobileDeviceDetailsV2Type = "tvos"

	MobileDeviceDetailsV2TypeUnknown MobileDeviceDetailsV2Type = "unknown"
)

// Defines values for MobileDeviceV2Type.
const (
	MobileDeviceV2TypeIos MobileDeviceV2Type = "ios"

	MobileDeviceV2TypeTvos MobileDeviceV2Type = "tvos"

	MobileDeviceV2TypeUnknown MobileDeviceV2Type = "unknown"
)

// Defines values for NotificationType.
const (
	NotificationTypeAPNSCERTREVOKED NotificationType = "APNS_CERT_REVOKED"

	NotificationTypeAPNSCONNECTIONFAILURE NotificationType = "APNS_CONNECTION_FAILURE"

	NotificationTypeAPPLESCHOOLMANAGERTCNOTSIGNED NotificationType = "APPLE_SCHOOL_MANAGER_T_C_NOT_SIGNED"

	NotificationTypeAZUREADMIGRATIONREPORTGENERATED NotificationType = "AZURE_AD_MIGRATION_REPORT_GENERATED"

	NotificationTypeBUILTINCAEXPIRED NotificationType = "BUILT_IN_CA_EXPIRED"

	NotificationTypeBUILTINCAEXPIRING NotificationType = "BUILT_IN_CA_EXPIRING"

	NotificationTypeBUILTINCARENEWALFAILED NotificationType = "BUILT_IN_CA_RENEWAL_FAILED"

	NotificationTypeBUILTINCARENEWALSUCCESS NotificationType = "BUILT_IN_CA_RENEWAL_SUCCESS"

	NotificationTypeCLOUDLDAPCERTEXPIRED NotificationType = "CLOUD_LDAP_CERT_EXPIRED"

	NotificationTypeCLOUDLDAPCERTWILLEXPIRE NotificationType = "CLOUD_LDAP_CERT_WILL_EXPIRE"

	NotificationTypeCOMPUTERSECURITYSSLDISABLED NotificationType = "COMPUTER_SECURITY_SSL_DISABLED"

	NotificationTypeCONDITIONALACCESSCONNECTIONERROR NotificationType = "CONDITIONAL_ACCESS_CONNECTION_ERROR"

	NotificationTypeDEPINSTANCEEXPIRED NotificationType = "DEP_INSTANCE_EXPIRED"

	NotificationTypeDEPINSTANCEWILLEXPIRE NotificationType = "DEP_INSTANCE_WILL_EXPIRE"

	NotificationTypeDEVICECOMPLIANCECONNECTIONERROR NotificationType = "DEVICE_COMPLIANCE_CONNECTION_ERROR"

	NotificationTypeDEVICEENROLLMENTPROGRAMTCNOTSIGNED NotificationType = "DEVICE_ENROLLMENT_PROGRAM_T_C_NOT_SIGNED"

	NotificationTypeEXCEEDEDLICENSECOUNT NotificationType = "EXCEEDED_LICENSE_COUNT"

	NotificationTypeFREQUENTINVENTORYCOLLECTIONPOLICY NotificationType = "FREQUENT_INVENTORY_COLLECTION_POLICY"

	NotificationTypeGSXCERTEXPIRED NotificationType = "GSX_CERT_EXPIRED"

	NotificationTypeGSXCERTWILLEXPIRE NotificationType = "GSX_CERT_WILL_EXPIRE"

	NotificationTypeHCLBINDERROR NotificationType = "HCL_BIND_ERROR"

	NotificationTypeHCLERROR NotificationType = "HCL_ERROR"

	NotificationTypeINSECURELDAP NotificationType = "INSECURE_LDAP"

	NotificationTypeINVALIDREFERENCESEXTATTR NotificationType = "INVALID_REFERENCES_EXT_ATTR"

	NotificationTypeINVALIDREFERENCESPOLICIES NotificationType = "INVALID_REFERENCES_POLICIES"

	NotificationTypeINVALIDREFERENCESSCRIPTS NotificationType = "INVALID_REFERENCES_SCRIPTS"

	NotificationTypeJAMFCONNECTUPDATE NotificationType = "JAMF_CONNECT_UPDATE"

	NotificationTypeJAMFPROTECTUPDATE NotificationType = "JAMF_PROTECT_UPDATE"

	NotificationTypeJIMERROR NotificationType = "JIM_ERROR"

	NotificationTypeLDAPCONNECTIONCHECKTHROUGHJIMFAILED NotificationType = "LDAP_CONNECTION_CHECK_THROUGH_JIM_FAILED"

	NotificationTypeLDAPCONNECTIONCHECKTHROUGHJIMSUCCESSFUL NotificationType = "LDAP_CONNECTION_CHECK_THROUGH_JIM_SUCCESSFUL"

	NotificationTypeMDMEXTERNALSIGNINGCERTIFICATEEXPIRED NotificationType = "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRED"

	NotificationTypeMDMEXTERNALSIGNINGCERTIFICATEEXPIRING NotificationType = "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING"

	NotificationTypeMDMEXTERNALSIGNINGCERTIFICATEEXPIRINGTODAY NotificationType = "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING_TODAY"

	NotificationTypeMIIHEARTBEATFAILEDNOTIFICATION NotificationType = "MII_HEARTBEAT_FAILED_NOTIFICATION"

	NotificationTypeMIIINVENTORYUPLOADFAILEDNOTIFICATION NotificationType = "MII_INVENTORY_UPLOAD_FAILED_NOTIFICATION"

	NotificationTypeMIIUNATHORIZEDRESPONSENOTIFICATION NotificationType = "MII_UNATHORIZED_RESPONSE_NOTIFICATION"

	NotificationTypePATCHEXTENTIONATTRIBUTE NotificationType = "PATCH_EXTENTION_ATTRIBUTE"

	NotificationTypePATCHUPDATE NotificationType = "PATCH_UPDATE"

	NotificationTypePOLICYMANAGEMENTACCOUNTPAYLOADSECURITYMULTIPLE NotificationType = "POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_MULTIPLE"

	NotificationTypePOLICYMANAGEMENTACCOUNTPAYLOADSECURITYSINGLE NotificationType = "POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_SINGLE"

	NotificationTypePUSHCERTEXPIRED NotificationType = "PUSH_CERT_EXPIRED"

	NotificationTypePUSHCERTWILLEXPIRE NotificationType = "PUSH_CERT_WILL_EXPIRE"

	NotificationTypePUSHPROXYCERTEXPIRED NotificationType = "PUSH_PROXY_CERT_EXPIRED"

	NotificationTypeSSOCERTEXPIRED NotificationType = "SSO_CERT_EXPIRED"

	NotificationTypeSSOCERTWILLEXPIRE NotificationType = "SSO_CERT_WILL_EXPIRE"

	NotificationTypeTOMCATSSLCERTEXPIRED NotificationType = "TOMCAT_SSL_CERT_EXPIRED"

	NotificationTypeTOMCATSSLCERTWILLEXPIRE NotificationType = "TOMCAT_SSL_CERT_WILL_EXPIRE"

	NotificationTypeUSERINITIATEDENROLLMENTMANAGEMENTACCOUNTSECURITYISSUE NotificationType = "USER_INITIATED_ENROLLMENT_MANAGEMENT_ACCOUNT_SECURITY_ISSUE"

	NotificationTypeUSERMAIDDUPLICATEERROR NotificationType = "USER_MAID_DUPLICATE_ERROR"

	NotificationTypeUSERMAIDMISMATCHERROR NotificationType = "USER_MAID_MISMATCH_ERROR"

	NotificationTypeUSERMAIDROSTERDUPLICATEERROR NotificationType = "USER_MAID_ROSTER_DUPLICATE_ERROR"

	NotificationTypeVPPACCOUNTEXPIRED NotificationType = "VPP_ACCOUNT_EXPIRED"

	NotificationTypeVPPACCOUNTWILLEXPIRE NotificationType = "VPP_ACCOUNT_WILL_EXPIRE"

	NotificationTypeVPPTOKENREVOKED NotificationType = "VPP_TOKEN_REVOKED"
)

// Defines values for OrderByDirection.
const (
	OrderByDirectionASC OrderByDirection = "ASC"

	OrderByDirectionDESC OrderByDirection = "DESC"
)

// Defines values for PackageManifestHashType.
const (
	PackageManifestHashTypeMD5 PackageManifestHashType = "MD5"

	PackageManifestHashTypeSHA256 PackageManifestHashType = "SHA256"
)

// Defines values for PersonalHotspotSetting.
const (
	PersonalHotspotSettingDISABLEPERSONALHOTSPOT PersonalHotspotSetting = "DISABLE_PERSONAL_HOTSPOT"

	PersonalHotspotSettingENABLEPERSONALHOTSPOT PersonalHotspotSetting = "ENABLE_PERSONAL_HOTSPOT"
)

// Defines values for ProtectSettingsResponseSyncStatus.
const (
	ProtectSettingsResponseSyncStatusCOMPLETED ProtectSettingsResponseSyncStatus = "COMPLETED"

	ProtectSettingsResponseSyncStatusERROR ProtectSettingsResponseSyncStatus = "ERROR"

	ProtectSettingsResponseSyncStatusINPROGRESS ProtectSettingsResponseSyncStatus = "IN_PROGRESS"

	ProtectSettingsResponseSyncStatusUNKNOWN ProtectSettingsResponseSyncStatus = "UNKNOWN"
)

// Defines values for ReenrollmentFlushMDMQueue.
const (
	ReenrollmentFlushMDMQueueDELETEERRORS ReenrollmentFlushMDMQueue = "DELETE_ERRORS"

	ReenrollmentFlushMDMQueueDELETEEVERYTHING ReenrollmentFlushMDMQueue = "DELETE_EVERYTHING"

	ReenrollmentFlushMDMQueueDELETEEVERYTHINGEXCEPTACKNOWLEDGED ReenrollmentFlushMDMQueue = "DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED"

	ReenrollmentFlushMDMQueueDELETENOTHING ReenrollmentFlushMDMQueue = "DELETE_NOTHING"
)

// Defines values for RemoteAdministrationResponseType.
const (
	RemoteAdministrationResponseTypeTeamViewer RemoteAdministrationResponseType = "team-viewer"
)

// Defines values for ScriptPriority.
const (
	ScriptPriorityAFTER ScriptPriority = "AFTER"

	ScriptPriorityATREBOOT ScriptPriority = "AT_REBOOT"

	ScriptPriorityBEFORE ScriptPriority = "BEFORE"
)

// Defines values for SelfServiceInteractionSettingsDefaultLandingPage.
const (
	SelfServiceInteractionSettingsDefaultLandingPageBROWSE SelfServiceInteractionSettingsDefaultLandingPage = "BROWSE"

	SelfServiceInteractionSettingsDefaultLandingPageHISTORY SelfServiceInteractionSettingsDefaultLandingPage = "HISTORY"

	SelfServiceInteractionSettingsDefaultLandingPageHOME SelfServiceInteractionSettingsDefaultLandingPage = "HOME"

	SelfServiceInteractionSettingsDefaultLandingPageNOTIFICATIONS SelfServiceInteractionSettingsDefaultLandingPage = "NOTIFICATIONS"
)

// Defines values for SelfServiceLoginSettingsAuthType.
const (
	SelfServiceLoginSettingsAuthTypeBasic SelfServiceLoginSettingsAuthType = "Basic"

	SelfServiceLoginSettingsAuthTypeSaml SelfServiceLoginSettingsAuthType = "Saml"
)

// Defines values for SelfServiceLoginSettingsUserLoginLevel.
const (
	SelfServiceLoginSettingsUserLoginLevelAnonymous SelfServiceLoginSettingsUserLoginLevel = "Anonymous"

	SelfServiceLoginSettingsUserLoginLevelNotRequired SelfServiceLoginSettingsUserLoginLevel = "NotRequired"

	SelfServiceLoginSettingsUserLoginLevelRequired SelfServiceLoginSettingsUserLoginLevel = "Required"
)

// Defines values for SessionCandidateRequestDeviceType.
const (
	SessionCandidateRequestDeviceTypeCOMPUTER SessionCandidateRequestDeviceType = "COMPUTER"
)

// Defines values for SessionDetailsDeviceType.
const (
	SessionDetailsDeviceTypeCOMPUTER SessionDetailsDeviceType = "COMPUTER"
)

// Defines values for SessionDetailsState.
const (
	SessionDetailsStateCLOSED SessionDetailsState = "CLOSED"

	SessionDetailsStateOPEN SessionDetailsState = "OPEN"

	SessionDetailsStateUNKNOWN SessionDetailsState = "UNKNOWN"
)

// Defines values for SessionStatusSessionState.
const (
	SessionStatusSessionStateCLOSED SessionStatusSessionState = "CLOSED"

	SessionStatusSessionStateOPEN SessionStatusSessionState = "OPEN"

	SessionStatusSessionStateUNKNOWN SessionStatusSessionState = "UNKNOWN"
)

// Defines values for SoftwareUpdateSettingsRecommendationCadence.
const (
	SoftwareUpdateSettingsRecommendationCadenceALLOWALLUPDATES SoftwareUpdateSettingsRecommendationCadence = "ALLOW_ALL_UPDATES"

	SoftwareUpdateSettingsRecommendationCadenceONLYALLOWLEASTCURRENTUPDATE SoftwareUpdateSettingsRecommendationCadence = "ONLY_ALLOW_LEAST_CURRENT_UPDATE"

	SoftwareUpdateSettingsRecommendationCadenceONLYALLOWMOSTCURRENTUPDATE SoftwareUpdateSettingsRecommendationCadence = "ONLY_ALLOW_MOST_CURRENT_UPDATE"
)

// Defines values for SsoKeystoreKeystoreSetupType.
const (
	SsoKeystoreKeystoreSetupTypeGENERATED SsoKeystoreKeystoreSetupType = "GENERATED"

	SsoKeystoreKeystoreSetupTypeNONE SsoKeystoreKeystoreSetupType = "NONE"

	SsoKeystoreKeystoreSetupTypeUPLOADED SsoKeystoreKeystoreSetupType = "UPLOADED"
)

// Defines values for SsoKeystoreType.
const (
	SsoKeystoreTypeJKS SsoKeystoreType = "JKS"

	SsoKeystoreTypeNONE SsoKeystoreType = "NONE"

	SsoKeystoreTypePKCS12 SsoKeystoreType = "PKCS12"
)

// Defines values for SsoKeystoreCertParseResponseKeystoreSetupType.
const (
	SsoKeystoreCertParseResponseKeystoreSetupTypeGENERATED SsoKeystoreCertParseResponseKeystoreSetupType = "GENERATED"

	SsoKeystoreCertParseResponseKeystoreSetupTypeNONE SsoKeystoreCertParseResponseKeystoreSetupType = "NONE"

	SsoKeystoreCertParseResponseKeystoreSetupTypeUPLOADED SsoKeystoreCertParseResponseKeystoreSetupType = "UPLOADED"
)

// Defines values for SsoKeystoreCertParseResponseType.
const (
	SsoKeystoreCertParseResponseTypeJKS SsoKeystoreCertParseResponseType = "JKS"

	SsoKeystoreCertParseResponseTypeNONE SsoKeystoreCertParseResponseType = "NONE"

	SsoKeystoreCertParseResponseTypePKCS12 SsoKeystoreCertParseResponseType = "PKCS12"
)

// Defines values for SsoKeystoreResponseKeystoreSetupType.
const (
	SsoKeystoreResponseKeystoreSetupTypeGENERATED SsoKeystoreResponseKeystoreSetupType = "GENERATED"

	SsoKeystoreResponseKeystoreSetupTypeNONE SsoKeystoreResponseKeystoreSetupType = "NONE"

	SsoKeystoreResponseKeystoreSetupTypeUPLOADED SsoKeystoreResponseKeystoreSetupType = "UPLOADED"
)

// Defines values for SsoKeystoreResponseType.
const (
	SsoKeystoreResponseTypeJKS SsoKeystoreResponseType = "JKS"

	SsoKeystoreResponseTypeNONE SsoKeystoreResponseType = "NONE"

	SsoKeystoreResponseTypePKCS12 SsoKeystoreResponseType = "PKCS12"
)

// Defines values for SsoSettingsIdpProviderType.
const (
	SsoSettingsIdpProviderTypeADFS SsoSettingsIdpProviderType = "ADFS"

	SsoSettingsIdpProviderTypeAZURE SsoSettingsIdpProviderType = "AZURE"

	SsoSettingsIdpProviderTypeCENTRIFY SsoSettingsIdpProviderType = "CENTRIFY"

	SsoSettingsIdpProviderTypeGOOGLE SsoSettingsIdpProviderType = "GOOGLE"

	SsoSettingsIdpProviderTypeOKTA SsoSettingsIdpProviderType = "OKTA"

	SsoSettingsIdpProviderTypeONELOGIN SsoSettingsIdpProviderType = "ONELOGIN"

	SsoSettingsIdpProviderTypeOTHER SsoSettingsIdpProviderType = "OTHER"

	SsoSettingsIdpProviderTypePING SsoSettingsIdpProviderType = "PING"

	SsoSettingsIdpProviderTypeSHIBBOLETH SsoSettingsIdpProviderType = "SHIBBOLETH"
)

// Defines values for SsoSettingsMetadataSource.
const (
	SsoSettingsMetadataSourceFILE SsoSettingsMetadataSource = "FILE"

	SsoSettingsMetadataSourceUNKNOWN SsoSettingsMetadataSource = "UNKNOWN"

	SsoSettingsMetadataSourceURL SsoSettingsMetadataSource = "URL"
)

// Defines values for SsoSettingsUserMapping.
const (
	SsoSettingsUserMappingEMAIL SsoSettingsUserMapping = "EMAIL"

	SsoSettingsUserMappingUSERNAME SsoSettingsUserMapping = "USERNAME"
)

// Defines values for StartupStatusErrorCode.
const (
	StartupStatusErrorCodeCACHECONFIGURATIONERROR StartupStatusErrorCode = "CACHE_CONFIGURATION_ERROR"

	StartupStatusErrorCodeDATABASEERROR StartupStatusErrorCode = "DATABASE_ERROR"

	StartupStatusErrorCodeDATABASEMYISAMERROR StartupStatusErrorCode = "DATABASE_MYISAM_ERROR"

	StartupStatusErrorCodeDATABASEPASSWORDMISSING StartupStatusErrorCode = "DATABASE_PASSWORD_MISSING"

	StartupStatusErrorCodeEHCACHEERROR StartupStatusErrorCode = "EHCACHE_ERROR"

	StartupStatusErrorCodeFLAGINITIALIZATIONFAILED StartupStatusErrorCode = "FLAG_INITIALIZATION_FAILED"

	StartupStatusErrorCodeMEMCACHEDERROR StartupStatusErrorCode = "MEMCACHED_ERROR"

	StartupStatusErrorCodeMORETHANONECLUSTERSETTINGSERROR StartupStatusErrorCode = "MORE_THAN_ONE_CLUSTER_SETTINGS_ERROR"

	StartupStatusErrorCodeOLDVERSIONERROR StartupStatusErrorCode = "OLD_VERSION_ERROR"

	StartupStatusErrorCodePRIMARYNODENOTSETERROR StartupStatusErrorCode = "PRIMARY_NODE_NOT_SET_ERROR"

	StartupStatusErrorCodeSECONDARYNODESTARTUPERROR StartupStatusErrorCode = "SECONDARY_NODE_STARTUP_ERROR"
)

// Defines values for StartupStatusStepCode.
const (
	StartupStatusStepCodeSERVERINITANALYZINGWEBAPP StartupStatusStepCode = "SERVER_INIT_ANALYZING_WEBAPP"

	StartupStatusStepCodeSERVERINITCACHEFLUSHING StartupStatusStepCode = "SERVER_INIT_CACHE_FLUSHING"

	StartupStatusStepCodeSERVERINITCALCULATINGSMARTGROUPS StartupStatusStepCode = "SERVER_INIT_CALCULATING_SMART_GROUPS"

	StartupStatusStepCodeSERVERINITCOMPLETE StartupStatusStepCode = "SERVER_INIT_COMPLETE"

	StartupStatusStepCodeSERVERINITDBCOLUMNENCODINGCHANGESTEP1 StartupStatusStepCode = "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_1"

	StartupStatusStepCodeSERVERINITDBCOLUMNENCODINGCHANGESTEP2 StartupStatusStepCode = "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_2"

	StartupStatusStepCodeSERVERINITDBCOLUMNENCODINGCHANGESTEP3 StartupStatusStepCode = "SERVER_INIT_DB_COLUMN_ENCODING_CHANGE_STEP_3"

	StartupStatusStepCodeSERVERINITDBCOLUMNRENAME StartupStatusStepCode = "SERVER_INIT_DB_COLUMN_RENAME"

	StartupStatusStepCodeSERVERINITDBSCHEMACOMPARE StartupStatusStepCode = "SERVER_INIT_DB_SCHEMA_COMPARE"

	StartupStatusStepCodeSERVERINITDBTABLEALTER StartupStatusStepCode = "SERVER_INIT_DB_TABLE_ALTER"

	StartupStatusStepCodeSERVERINITDBTABLEANALYZING StartupStatusStepCode = "SERVER_INIT_DB_TABLE_ANALYZING"

	StartupStatusStepCodeSERVERINITDBTABLECHECKFORRENAME StartupStatusStepCode = "SERVER_INIT_DB_TABLE_CHECK_FOR_RENAME"

	StartupStatusStepCodeSERVERINITDBTABLECREATE StartupStatusStepCode = "SERVER_INIT_DB_TABLE_CREATE"

	StartupStatusStepCodeSERVERINITDBTABLEDROP StartupStatusStepCode = "SERVER_INIT_DB_TABLE_DROP"

	StartupStatusStepCodeSERVERINITDBTABLERENAME StartupStatusStepCode = "SERVER_INIT_DB_TABLE_RENAME"

	StartupStatusStepCodeSERVERINITDBUPGRADECHECK StartupStatusStepCode = "SERVER_INIT_DB_UPGRADE_CHECK"

	StartupStatusStepCodeSERVERINITDBUPGRADECOMPLETE StartupStatusStepCode = "SERVER_INIT_DB_UPGRADE_COMPLETE"

	StartupStatusStepCodeSERVERINITINITIALIZINGCHANGEMANAGEMENT StartupStatusStepCode = "SERVER_INIT_INITIALIZING_CHANGE_MANAGEMENT"

	StartupStatusStepCodeSERVERINITINITIALIZINGCOMMUNICATIONSYSTEM StartupStatusStepCode = "SERVER_INIT_INITIALIZING_COMMUNICATION_SYSTEM"

	StartupStatusStepCodeSERVERINITINITIALIZINGMDMQUEUEMONITOR StartupStatusStepCode = "SERVER_INIT_INITIALIZING_MDM_QUEUE_MONITOR"

	StartupStatusStepCodeSERVERINITINITIALIZINGOBJ StartupStatusStepCode = "SERVER_INIT_INITIALIZING_OBJ"

	StartupStatusStepCodeSERVERINITMEMCACHEDENDPOINTSCHECK StartupStatusStepCode = "SERVER_INIT_MEMCACHED_ENDPOINTS_CHECK"

	StartupStatusStepCodeSERVERINITPKIMIGRATIONDONE StartupStatusStepCode = "SERVER_INIT_PKI_MIGRATION_DONE"

	StartupStatusStepCodeSERVERINITPKIMIGRATIONSTATUS StartupStatusStepCode = "SERVER_INIT_PKI_MIGRATION_STATUS"

	StartupStatusStepCodeSERVERINITPOPULATINGNAVIGATION StartupStatusStepCode = "SERVER_INIT_POPULATING_NAVIGATION"

	StartupStatusStepCodeSERVERINITPOPULATINGOBJECTS StartupStatusStepCode = "SERVER_INIT_POPULATING_OBJECTS"

	StartupStatusStepCodeSERVERINITSSGENERATENOTIFICATIONS StartupStatusStepCode = "SERVER_INIT_SS_GENERATE_NOTIFICATIONS"

	StartupStatusStepCodeSERVERINITSSGENERATENOTIFICATIONSFINALIZE StartupStatusStepCode = "SERVER_INIT_SS_GENERATE_NOTIFICATIONS_FINALIZE"

	StartupStatusStepCodeSERVERINITSSGENERATENOTIFICATIONSSTATUS StartupStatusStepCode = "SERVER_INIT_SS_GENERATE_NOTIFICATIONS_STATUS"

	StartupStatusStepCodeSERVERINITSTART StartupStatusStepCode = "SERVER_INIT_START"

	StartupStatusStepCodeSERVERINITVERIFYINGCACHE StartupStatusStepCode = "SERVER_INIT_VERIFYING_CACHE"
)

// Defines values for StartupStatusWarningCode.
const (
	StartupStatusWarningCodeSERVERINITWARNINGDBTABLEENCODING StartupStatusWarningCode = "SERVER_INIT_WARNING_DB_TABLE_ENCODING"
)

// Defines values for TimeZoneRegion.
const (
	TimeZoneRegionAfrica TimeZoneRegion = "Africa"

	TimeZoneRegionAmerica TimeZoneRegion = "America"

	TimeZoneRegionAsia TimeZoneRegion = "Asia"

	TimeZoneRegionAtlantic TimeZoneRegion = "Atlantic"

	TimeZoneRegionAustralia TimeZoneRegion = "Australia"

	TimeZoneRegionEurope TimeZoneRegion = "Europe"

	TimeZoneRegionIndian TimeZoneRegion = "Indian"

	TimeZoneRegionNone TimeZoneRegion = "None"

	TimeZoneRegionPacific TimeZoneRegion = "Pacific"
)

// Defines values for UserMappingsObjectClassLimitation.
const (
	UserMappingsObjectClassLimitationALLOBJECTCLASSES UserMappingsObjectClassLimitation = "ALL_OBJECT_CLASSES"

	UserMappingsObjectClassLimitationANYOBJECTCLASSES UserMappingsObjectClassLimitation = "ANY_OBJECT_CLASSES"
)

// Defines values for UserMappingsSearchScope.
const (
	UserMappingsSearchScopeALLSUBTREES UserMappingsSearchScope = "ALL_SUBTREES"

	UserMappingsSearchScopeFIRSTLEVELONLY UserMappingsSearchScope = "FIRST_LEVEL_ONLY"
)

// Defines values for VoiceRoamingSetting.
const (
	VoiceRoamingSettingDISABLEVOICEROAMING VoiceRoamingSetting = "DISABLE_VOICE_ROAMING"

	VoiceRoamingSettingENABLEVOICEROAMING VoiceRoamingSetting = "ENABLE_VOICE_ROAMING"
)

// Defines values for VolumePurchasingContentContentType.
const (
	VolumePurchasingContentContentTypeBOOK VolumePurchasingContentContentType = "BOOK"

	VolumePurchasingContentContentTypeIOSAPP VolumePurchasingContentContentType = "IOS_APP"

	VolumePurchasingContentContentTypeMACAPP VolumePurchasingContentContentType = "MAC_APP"
)

// Defines values for VolumePurchasingContentDeviceTypes.
const (
	VolumePurchasingContentDeviceTypesIOS VolumePurchasingContentDeviceTypes = "IOS"

	VolumePurchasingContentDeviceTypesMACOS VolumePurchasingContentDeviceTypes = "MACOS"

	VolumePurchasingContentDeviceTypesTVOS VolumePurchasingContentDeviceTypes = "TVOS"
)

// Defines values for VolumePurchasingContentPricingParam.
const (
	VolumePurchasingContentPricingParamPLUS VolumePurchasingContentPricingParam = "PLUS"

	VolumePurchasingContentPricingParamSTDQ VolumePurchasingContentPricingParam = "STDQ"

	VolumePurchasingContentPricingParamUnknown VolumePurchasingContentPricingParam = "Unknown"
)

// Defines values for VolumePurchasingSubscriptionBaseTriggers.
const (
	VolumePurchasingSubscriptionBaseTriggersNOMORELICENSES VolumePurchasingSubscriptionBaseTriggers = "NO_MORE_LICENSES"

	VolumePurchasingSubscriptionBaseTriggersREMOVEDFROMAPPSTORE VolumePurchasingSubscriptionBaseTriggers = "REMOVED_FROM_APP_STORE"
)

// AccessGroupsPreviewSearchResults defines model for AccessGroupsPreviewSearchResults.
type AccessGroupsPreviewSearchResults struct {
	Results    *[]EnrollmentAccessGroupPreview `json:"results,omitempty"`
	TotalCount *int                            `json:"totalCount,omitempty"`
}

// AccessGroupsSearchResults defines model for AccessGroupsSearchResults.
type AccessGroupsSearchResults struct {
	Results    *[]EnrollmentAccessGroup `json:"results,omitempty"`
	TotalCount *int                     `json:"totalCount,omitempty"`
}

// AccessGroupsV2SearchResults defines model for AccessGroupsV2SearchResults.
type AccessGroupsV2SearchResults struct {
	Results    *[]EnrollmentAccessGroupV2 `json:"results,omitempty"`
	TotalCount *int                       `json:"totalCount,omitempty"`
}

// Account defines model for Account.
type Account struct {
	AccessLevel      *AccountAccessLevel       `json:"accessLevel,omitempty"`
	CurrentSiteId    *int                      `json:"currentSiteId,omitempty"`
	Email            *string                   `json:"email,omitempty"`
	GroupIds         *[]int                    `json:"groupIds,omitempty"`
	Id               *int                      `json:"id,omitempty"`
	IsMultiSiteAdmin *bool                     `json:"isMultiSiteAdmin,omitempty"`
	Preferences      *AccountPreferences       `json:"preferences,omitempty"`
	PrivilegeSet     *AccountPrivilegeSet      `json:"privilegeSet,omitempty"`
	PrivilegesBySite *Account_PrivilegesBySite `json:"privilegesBySite,omitempty"`
	RealName         *string                   `json:"realName,omitempty"`
	Username         *string                   `json:"username,omitempty"`
}

// AccountAccessLevel defines model for Account.AccessLevel.
type AccountAccessLevel string

// AccountPrivilegeSet defines model for Account.PrivilegeSet.
type AccountPrivilegeSet string

// Account_PrivilegesBySite defines model for Account.PrivilegesBySite.
type Account_PrivilegesBySite struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// AccountGroup defines model for AccountGroup.
type AccountGroup struct {
	AccessLevel   *AccountGroupAccessLevel  `json:"accessLevel,omitempty"`
	MemberUserIds *[]int                    `json:"memberUserIds,omitempty"`
	PrivilegeSet  *AccountGroupPrivilegeSet `json:"privilegeSet,omitempty"`
	Privileges    *[]string                 `json:"privileges,omitempty"`
	SiteId        *int                      `json:"siteId,omitempty"`
}

// AccountGroupAccessLevel defines model for AccountGroup.AccessLevel.
type AccountGroupAccessLevel string

// AccountGroupPrivilegeSet defines model for AccountGroup.PrivilegeSet.
type AccountGroupPrivilegeSet string

// AccountPreferences defines model for AccountPreferences.
type AccountPreferences struct {
	DateFormat             *string `json:"dateFormat,omitempty"`
	IsDisableRelativeDates *bool   `json:"isDisableRelativeDates,omitempty"`
	Language               *string `json:"language,omitempty"`
	Region                 *string `json:"region,omitempty"`
	Timezone               *string `json:"timezone,omitempty"`
}

// AccountPreferencesV1 defines model for AccountPreferencesV1.
type AccountPreferencesV1 struct {
	DateFormat           *string `json:"dateFormat,omitempty"`
	DisableRelativeDates *bool   `json:"disableRelativeDates,omitempty"`
	Language             *string `json:"language,omitempty"`
	Region               *string `json:"region,omitempty"`
	Timezone             *string `json:"timezone,omitempty"`
}

// ActivePatchHistory defines model for ActivePatchHistory.
type ActivePatchHistory struct {
	BuildingId       *int       `json:"buildingId,omitempty"`
	BuildingName     *string    `json:"buildingName,omitempty"`
	DepartmentId     *int       `json:"departmentId,omitempty"`
	DepartmentName   *string    `json:"departmentName,omitempty"`
	DeviceId         *int       `json:"deviceId,omitempty"`
	DeviceName       *string    `json:"deviceName,omitempty"`
	InstalledVersion *string    `json:"installedVersion,omitempty"`
	LastCheckIn      *time.Time `json:"lastCheckIn,omitempty"`
	OsVersion        *string    `json:"osVersion,omitempty"`
	PatchHistoryId   *int       `json:"patchHistoryId,omitempty"`
	PatchId          *int       `json:"patchId,omitempty"`
	SiteId           *int       `json:"siteId,omitempty"`
	SiteName         *string    `json:"siteName,omitempty"`
	Username         *string    `json:"username,omitempty"`
}

// ActivePatchHistorySearchResults defines model for ActivePatchHistorySearchResults.
type ActivePatchHistorySearchResults struct {
	Results    *[]ActivePatchHistory `json:"results,omitempty"`
	TotalCount *int                  `json:"totalCount,omitempty"`
}

// ActivePatchSummary defines model for ActivePatchSummary.
type ActivePatchSummary struct {
	IsOnDashboard                *bool      `json:"isOnDashboard,omitempty"`
	LatestVersion                *string    `json:"latestVersion,omitempty"`
	OutOfDate                    *int       `json:"outOfDate,omitempty"`
	ReleaseDate                  *time.Time `json:"releaseDate,omitempty"`
	SoftwareTitleConfigurationID *int       `json:"softwareTitleConfigurationID,omitempty"`
	SoftwareTitleID              *int       `json:"softwareTitleID,omitempty"`
	Title                        *string    `json:"title,omitempty"`
	UpToDate                     *int       `json:"upToDate,omitempty"`
}

// AdminAccount defines model for AdminAccount.
type AdminAccount struct {
	Id *int `json:"id,omitempty"`
}

// AdvancedSearch defines model for AdvancedSearch.
type AdvancedSearch struct {
	Criteria      *[]SmartSearchCriterion `json:"criteria,omitempty"`
	DisplayFields *[]string               `json:"displayFields,omitempty"`
	Id            *string                 `json:"id,omitempty"`
	Name          string                  `json:"name"`
	SiteId        *string                 `json:"siteId"`
}

// AdvancedSearchCriteriaChoices defines model for AdvancedSearchCriteriaChoices.
type AdvancedSearchCriteriaChoices struct {
	Choices *[]string `json:"choices,omitempty"`
}

// AdvancedSearchSearchResults defines model for AdvancedSearchSearchResults.
type AdvancedSearchSearchResults struct {
	Results    *[]AdvancedSearch `json:"results,omitempty"`
	TotalCount *int              `json:"totalCount,omitempty"`
}

// AdvancedUserContentSearch defines model for AdvancedUserContentSearch.
type AdvancedUserContentSearch struct {
	Criteria      *[]SmartSearchCriterion `json:"criteria,omitempty"`
	DisplayFields *[]string               `json:"displayFields,omitempty"`
	Id            *string                 `json:"id,omitempty"`
	Name          string                  `json:"name"`
	SiteId        *string                 `json:"siteId"`
}

// AdvancedUserContentSearchSearchResults defines model for AdvancedUserContentSearchSearchResults.
type AdvancedUserContentSearchSearchResults struct {
	Results    *[]AdvancedUserContentSearch `json:"results,omitempty"`
	TotalCount *int                         `json:"totalCount,omitempty"`
}

// will be populated if the type is android.
type AndroidDetails struct {
	ApiVersion          *int       `json:"apiVersion,omitempty"`
	BatteryLevel        *int       `json:"batteryLevel,omitempty"`
	Computer            *IdAndName `json:"computer,omitempty"`
	ExternalAvailableMb *int       `json:"externalAvailableMb,omitempty"`
	ExternalCapacityMb  *int       `json:"externalCapacityMb,omitempty"`
	ExternalPercentUsed *int       `json:"externalPercentUsed,omitempty"`
	InternalAvailableMb *int       `json:"internalAvailableMb,omitempty"`
	InternalCapacityMb  *int       `json:"internalCapacityMb,omitempty"`
	InternalPercentUsed *int       `json:"internalPercentUsed,omitempty"`
	LastBackupTimestamp *time.Time `json:"lastBackupTimestamp,omitempty"`
	Manufacturer        *string    `json:"manufacturer,omitempty"`
	Model               *string    `json:"model,omitempty"`
	OsName              *string    `json:"osName,omitempty"`
	Security            *Security  `json:"security,omitempty"`
}

// ApiError defines model for ApiError.
type ApiError struct {
	Errors *[]ApiErrorCause `json:"errors,omitempty"`

	// HTTP status of the response
	HttpStatus *int `json:"httpStatus,omitempty"`
}

// ApiErrorCause defines model for ApiErrorCause.
type ApiErrorCause struct {
	// Error-specific code that can be used to identify localization string, etc.
	Code *string `json:"code,omitempty"`

	// A general description of error for troubleshooting/debugging. Generally this text should not be displayed to a user; instead refer to errorCode and it's localized text
	Description *string `json:"description,omitempty"`

	// Name of the field that caused the error.
	Field string `json:"field"`

	// id of object with error. Optional.
	Id *string `json:"id,omitempty"`
}

// AppAnalyticsSetting defines model for AppAnalyticsSetting.
type AppAnalyticsSetting string

// Configuration parameters needed for AppDynamics script initialization.
type AppDynamicsConfig struct {
	AdrumExtUrlHttp  string `json:"adrumExtUrlHttp"`
	AdrumExtUrlHttps string `json:"adrumExtUrlHttps"`
	AdrumScriptHttp  string `json:"adrumScriptHttp"`
	AdrumScriptHttps string `json:"adrumScriptHttps"`
	AppKey           string `json:"appKey"`
	BeaconUrlHttp    string `json:"beaconUrlHttp"`
	BeaconUrlHttps   string `json:"beaconUrlHttps"`
	EnableEum        bool   `json:"enableEum"`
}

// AppPath defines model for AppPath.
type AppPath struct {
	Id   string `json:"id"`
	Path string `json:"path"`
}

// AppRequestFormInputField defines model for AppRequestFormInputField.
type AppRequestFormInputField struct {
	Description *string `json:"description"`
	Id          *int    `json:"id,omitempty"`

	// Highest priority is 1, lowest is 255
	Priority int    `json:"priority"`
	Title    string `json:"title"`
}

// AppRequestFormInputFieldSearchResults defines model for AppRequestFormInputFieldSearchResults.
type AppRequestFormInputFieldSearchResults struct {
	Results    *[]AppRequestFormInputField `json:"results,omitempty"`
	TotalCount *int                        `json:"totalCount,omitempty"`
}

// AppRequestSettings defines model for AppRequestSettings.
type AppRequestSettings struct {
	// Can be any of the country codes from /v1/app-store-country-codes or "deviceLocale" to use each individual device's locale
	AppStoreLocale       *string   `json:"appStoreLocale,omitempty"`
	ApproverEmails       *[]string `json:"approverEmails,omitempty"`
	IsEnabled            *bool     `json:"isEnabled,omitempty"`
	RequesterUserGroupId *int      `json:"requesterUserGroupId,omitempty"`
}

// will be populated if the type is appleTv.
type AppleTvDetails struct {
	AirplayPassword       *string                 `json:"airplayPassword,omitempty"`
	ConfigurationProfiles *[]ConfigurationProfile `json:"configurationProfiles,omitempty"`
	DeviceId              *string                 `json:"deviceId,omitempty"`
	IsSupervised          *bool                   `json:"isSupervised,omitempty"`
	Locales               *string                 `json:"locales,omitempty"`
	Model                 *string                 `json:"model,omitempty"`
	ModelIdentifier       *string                 `json:"modelIdentifier,omitempty"`
	ModelNumber           *string                 `json:"modelNumber,omitempty"`
	Purchasing            *Purchasing             `json:"purchasing,omitempty"`
}

// ApplicationAttributes defines model for ApplicationAttributes.
type ApplicationAttributes struct {
	Attributes *Attributes `json:"attributes,omitempty"`
	Identifier *string     `json:"identifier,omitempty"`
}

// ApplicationConfiguration defines model for ApplicationConfiguration.
type ApplicationConfiguration struct {
	Configuration *string `json:"configuration,omitempty"`
	Identifier    *string `json:"identifier,omitempty"`
}

// AssignRemoveProfileResponseSyncState defines model for AssignRemoveProfileResponseSyncState.
type AssignRemoveProfileResponseSyncState struct {
	FailureCount *int    `json:"failureCount,omitempty"`
	Id           *int    `json:"id,omitempty"`
	ProfileUUID  *string `json:"profileUUID,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	SyncStatus   *string `json:"syncStatus,omitempty"`
	Timestamp    *int    `json:"timestamp,omitempty"`
}

// Attributes defines model for Attributes.
type Attributes struct {
	AssociatedDomains     *[]string `json:"associatedDomains,omitempty"`
	EnableDirectDownloads *bool     `json:"enableDirectDownloads,omitempty"`
	Removable             *bool     `json:"removable,omitempty"`
	VpnUuid               *string   `json:"vpnUuid,omitempty"`
}

// AuthAccount defines model for AuthAccount.
type AuthAccount struct {
	AccessLevel      *AuthAccountAccessLevel       `json:"accessLevel,omitempty"`
	CurrentSiteId    *int                          `json:"currentSiteId,omitempty"`
	Email            *string                       `json:"email,omitempty"`
	GroupIds         *[]int                        `json:"groupIds,omitempty"`
	Id               *int                          `json:"id,omitempty"`
	IsMultiSiteAdmin *bool                         `json:"isMultiSiteAdmin,omitempty"`
	Preferences      *AccountPreferences           `json:"preferences,omitempty"`
	PrivilegeSet     *AuthAccountPrivilegeSet      `json:"privilegeSet,omitempty"`
	PrivilegesBySite *AuthAccount_PrivilegesBySite `json:"privilegesBySite,omitempty"`
	RealName         *string                       `json:"realName,omitempty"`
	Username         *string                       `json:"username,omitempty"`
}

// AuthAccountAccessLevel defines model for AuthAccount.AccessLevel.
type AuthAccountAccessLevel string

// AuthAccountPrivilegeSet defines model for AuthAccount.PrivilegeSet.
type AuthAccountPrivilegeSet string

// AuthAccount_PrivilegesBySite defines model for AuthAccount.PrivilegesBySite.
type AuthAccount_PrivilegesBySite struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// AuthAccountV1 defines model for AuthAccountV1.
type AuthAccountV1 struct {
	AccessLevel      *AuthAccountV1AccessLevel       `json:"accessLevel,omitempty"`
	CurrentSiteId    *string                         `json:"currentSiteId,omitempty"`
	Email            *string                         `json:"email,omitempty"`
	GroupIds         *[]string                       `json:"groupIds,omitempty"`
	Id               *string                         `json:"id,omitempty"`
	MultiSiteAdmin   *bool                           `json:"multiSiteAdmin,omitempty"`
	Preferences      *AccountPreferencesV1           `json:"preferences,omitempty"`
	PrivilegeSet     *AuthAccountV1PrivilegeSet      `json:"privilegeSet,omitempty"`
	PrivilegesBySite *AuthAccountV1_PrivilegesBySite `json:"privilegesBySite,omitempty"`
	RealName         *string                         `json:"realName,omitempty"`
	Username         *string                         `json:"username,omitempty"`
}

// AuthAccountV1AccessLevel defines model for AuthAccountV1.AccessLevel.
type AuthAccountV1AccessLevel string

// AuthAccountV1PrivilegeSet defines model for AuthAccountV1.PrivilegeSet.
type AuthAccountV1PrivilegeSet string

// AuthAccountV1_PrivilegesBySite defines model for AuthAccountV1.PrivilegesBySite.
type AuthAccountV1_PrivilegesBySite struct {
	AdditionalProperties map[string][]string `json:"-"`
}

// AuthToken defines model for AuthToken.
type AuthToken struct {
	Expires *int    `json:"expires,omitempty"`
	Token   *string `json:"token,omitempty"`
}

// AuthTokenV1 defines model for AuthTokenV1.
type AuthTokenV1 struct {
	Expires *string `json:"expires,omitempty"`
	Token   *string `json:"token,omitempty"`
}

// Authorization defines model for Authorization.
type Authorization struct {
	Account            *AuthAccount                     `json:"account,omitempty"`
	AccountGroups      *[]AccountGroup                  `json:"accountGroups,omitempty"`
	AuthenticationType *AuthorizationAuthenticationType `json:"authenticationType,omitempty"`
	Sites              *[]Site                          `json:"sites,omitempty"`
}

// AuthorizationAuthenticationType defines model for Authorization.AuthenticationType.
type AuthorizationAuthenticationType string

// AuthorizationV1 defines model for AuthorizationV1.
type AuthorizationV1 struct {
	Account            *AuthAccountV1                     `json:"account,omitempty"`
	AccountGroups      *[]AccountGroup                    `json:"accountGroups,omitempty"`
	AuthenticationType *AuthorizationV1AuthenticationType `json:"authenticationType,omitempty"`
	Sites              *[]V1Site                          `json:"sites,omitempty"`
}

// AuthorizationV1AuthenticationType defines model for AuthorizationV1.AuthenticationType.
type AuthorizationV1AuthenticationType string

// Request that start report generation
type AzureAdMigrationReportProcessStatus struct {
	MigrationReportFinishedEpoch int                                                      `json:"migrationReportFinishedEpoch"`
	MigrationReportStartedEpoch  int                                                      `json:"migrationReportStartedEpoch"`
	MigrationReportStatus        AzureAdMigrationReportProcessStatusMigrationReportStatus `json:"migrationReportStatus"`
	ReportId                     int                                                      `json:"reportId"`
}

// AzureAdMigrationReportProcessStatusMigrationReportStatus defines model for AzureAdMigrationReportProcessStatus.MigrationReportStatus.
type AzureAdMigrationReportProcessStatusMigrationReportStatus string

// Request that start report generation
type AzureAdMigrationReportRequest struct {
	// Azure Cloud Identity Provider mappings
	AzureMappings AzureMappings `json:"azureMappings"`
	AzureServerId int           `json:"azureServerId"`
	LdapServerId  int           `json:"ldapServerId"`
}

// A Cloud Identity Provider Azure configuration for responses
type AzureConfiguration struct {
	// A Cloud Identity Provider information
	CloudIdPCommon CloudIdPCommon `json:"cloudIdPCommon"`

	// Azure Cloud Identity Provider configuration
	Server AzureServerConfiguration `json:"server"`
}

// A Cloud Identity Provider Azure configuration for responses
type AzureConfigurationRequest struct {
	// A Cloud Identity Provider information for request
	CloudIdPCommon CloudIdPCommonRequest `json:"cloudIdPCommon"`

	// Azure Cloud Identity Provider configuration request
	Server AzureServerConfigurationRequest `json:"server"`
}

// A Cloud Identity Provider Azure configuration for update
type AzureConfigurationUpdate struct {
	// A Cloud Identity Provider information
	CloudIdPCommon CloudIdPCommon `json:"cloudIdPCommon"`

	// Azure Cloud Identity Provider configuration update
	Server AzureServerConfigurationUpdate `json:"server"`
}

// Azure Cloud Identity Provider mappings
type AzureMappings struct {
	Building   string `json:"building"`
	Department string `json:"department"`
	Email      string `json:"email"`
	GroupId    string `json:"groupId"`
	GroupName  string `json:"groupName"`
	Phone      string `json:"phone"`
	Position   string `json:"position"`
	RealName   string `json:"realName"`
	Room       string `json:"room"`
	UserId     string `json:"userId"`
	UserName   string `json:"userName"`
}

// Azure Cloud Identity Provider configuration
type AzureServerConfiguration struct {
	Enabled bool   `json:"enabled"`
	Id      string `json:"id"`

	// Azure Cloud Identity Provider mappings
	Mappings      AzureMappings `json:"mappings"`
	Migrated      bool          `json:"migrated"`
	SearchTimeout int           `json:"searchTimeout"`
	TenantId      string        `json:"tenantId"`

	// Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On
	TransitiveDirectoryMembershipEnabled bool `json:"transitiveDirectoryMembershipEnabled"`

	// Use this field to enable transitive membership lookup with Single Sign On
	TransitiveMembershipEnabled bool `json:"transitiveMembershipEnabled"`

	// Use this field to set user field mapping for transitive membership lookup with Single Sign On
	TransitiveMembershipUserField string `json:"transitiveMembershipUserField"`
}

// Azure Cloud Identity Provider configuration request
type AzureServerConfigurationRequest struct {
	Code    string  `json:"code"`
	Enabled bool    `json:"enabled"`
	Id      *string `json:"id,omitempty"`

	// Azure Cloud Identity Provider mappings
	Mappings      AzureMappings `json:"mappings"`
	SearchTimeout int           `json:"searchTimeout"`
	TenantId      string        `json:"tenantId"`

	// Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On
	TransitiveDirectoryMembershipEnabled bool `json:"transitiveDirectoryMembershipEnabled"`

	// Use this field to enable transitive membership lookup with Single Sign On
	TransitiveMembershipEnabled bool `json:"transitiveMembershipEnabled"`

	// Use this field to set user field mapping for transitive membership lookup with Single Sign On
	TransitiveMembershipUserField string `json:"transitiveMembershipUserField"`
}

// Azure Cloud Identity Provider configuration update
type AzureServerConfigurationUpdate struct {
	Enabled bool   `json:"enabled"`
	Id      string `json:"id"`

	// Azure Cloud Identity Provider mappings
	Mappings      AzureMappings `json:"mappings"`
	SearchTimeout int           `json:"searchTimeout"`

	// Use this field to enable transitive membership lookup. This setting would not apply to Single Sign On
	TransitiveDirectoryMembershipEnabled bool `json:"transitiveDirectoryMembershipEnabled"`

	// Use this field to enable transitive membership lookup with Single Sign On
	TransitiveMembershipEnabled bool `json:"transitiveMembershipEnabled"`

	// Use this field to set user field mapping for transitive membership lookup with Single Sign On
	TransitiveMembershipUserField string `json:"transitiveMembershipUserField"`
}

// BrandingImageUrl defines model for BrandingImageUrl.
type BrandingImageUrl struct {
	Url *string `json:"url,omitempty"`
}

// Building defines model for Building.
type Building struct {
	City           *string `json:"city"`
	Country        *string `json:"country"`
	Id             *string `json:"id,omitempty"`
	Name           string  `json:"name"`
	StateProvince  *string `json:"stateProvince"`
	StreetAddress1 *string `json:"streetAddress1"`
	StreetAddress2 *string `json:"streetAddress2"`
	ZipPostalCode  *string `json:"zipPostalCode"`
}

// BuildingSearchResults defines model for BuildingSearchResults.
type BuildingSearchResults struct {
	Results    *[]Building `json:"results,omitempty"`
	TotalCount *int        `json:"totalCount,omitempty"`
}

// CacheSettings defines model for CacheSettings.
type CacheSettings struct {
	CacheType string `json:"cacheType"`

	// The default is for Jamf Pro to generate a UUID, so we can only give an example instead.
	CacheUniqueId              string               `json:"cacheUniqueId"`
	DirectoryTimeToLiveSeconds *int32               `json:"directoryTimeToLiveSeconds,omitempty"`
	EhcacheMaxBytesLocalHeap   *string              `json:"ehcacheMaxBytesLocalHeap,omitempty"`
	Elasticache                *bool                `json:"elasticache,omitempty"`
	Id                         *string              `json:"id,omitempty"`
	MemcachedEndpoints         []MemcachedEndpoints `json:"memcachedEndpoints"`
	Name                       *string              `json:"name,omitempty"`
	TimeToIdleSeconds          *int32               `json:"timeToIdleSeconds,omitempty"`
	TimeToLiveSeconds          int32                `json:"timeToLiveSeconds"`
}

// CategoriesSearchResults defines model for CategoriesSearchResults.
type CategoriesSearchResults struct {
	Results    *[]Category `json:"results,omitempty"`
	TotalCount *int        `json:"totalCount,omitempty"`
}

// Category defines model for Category.
type Category struct {
	Id       *string `json:"id,omitempty"`
	Name     string  `json:"name"`
	Priority int32   `json:"priority"`
}

// CertificateDetails defines model for CertificateDetails.
type CertificateDetails struct {
	SerialNumber *string `json:"serialNumber,omitempty"`
	Subject      *string `json:"subject,omitempty"`
}

// CertificateIdentityV1 defines model for CertificateIdentityV1.
type CertificateIdentityV1 struct {
	Filename *string `json:"filename,omitempty"`

	// The base 64 encoded certificate. Will not be returned on a GET.
	IdentityKeystore *string `json:"identityKeystore,omitempty"`
	KeystorePassword *string `json:"keystorePassword,omitempty"`

	// The md5 checksum of the certificate file. Intended to be used in verifification the cert being used to sign QuickAdd packages.
	Md5Sum *string `json:"md5Sum,omitempty"`
}

// CertificateIdentityV2 defines model for CertificateIdentityV2.
type CertificateIdentityV2 struct {
	Filename *string `json:"filename,omitempty"`

	// The base 64 encoded certificate.
	IdentityKeystore *[]byte `json:"identityKeystore,omitempty"`
	KeystorePassword *string `json:"keystorePassword,omitempty"`

	// The md5 checksum of the certificate file. Intended to be used in verifification the cert being used to sign QuickAdd packages.
	Md5Sum *string `json:"md5Sum,omitempty"`
}

// CertificateKey defines model for CertificateKey.
type CertificateKey struct {
	Id    *string `json:"id,omitempty"`
	Valid *bool   `json:"valid,omitempty"`
}

// CertificateRecord defines model for CertificateRecord.
type CertificateRecord struct {
	IssuerX500Principal  *string    `json:"issuerX500Principal,omitempty"`
	KeyUsage             *[]string  `json:"keyUsage,omitempty"`
	KeyUsageExtended     *[]string  `json:"keyUsageExtended,omitempty"`
	NotAfter             *int       `json:"notAfter,omitempty"`
	NotBefore            *int       `json:"notBefore,omitempty"`
	SerialNumber         *string    `json:"serialNumber,omitempty"`
	Sha1Fingerprint      *string    `json:"sha1Fingerprint,omitempty"`
	Sha256Fingerprint    *string    `json:"sha256Fingerprint,omitempty"`
	Signature            *Signature `json:"signature,omitempty"`
	SubjectX500Principal *string    `json:"subjectX500Principal,omitempty"`
	Version              *int       `json:"version,omitempty"`
}

// Classic Ldap mappings configuration
type ClassicLdapMappings struct {
	UserGroupObjectMapGroupNameTo string `json:"userGroupObjectMapGroupNameTo"`
	UserGroupObjectMapIdTo        string `json:"userGroupObjectMapIdTo"`
	UserGroupObjectMapUuidTo      string `json:"userGroupObjectMapUuidTo"`
	UserObjectMapBuildingTo       string `json:"userObjectMapBuildingTo"`
	UserObjectMapDepartmentTo     string `json:"userObjectMapDepartmentTo"`
	UserObjectMapEmailTo          string `json:"userObjectMapEmailTo"`
	UserObjectMapIdTo             string `json:"userObjectMapIdTo"`
	UserObjectMapPhoneTo          string `json:"userObjectMapPhoneTo"`
	UserObjectMapPositionTo       string `json:"userObjectMapPositionTo"`
	UserObjectMapRealNameTo       string `json:"userObjectMapRealNameTo"`
	UserObjectMapRoomTo           string `json:"userObjectMapRoomTo"`
	UserObjectMapUsernameTo       string `json:"userObjectMapUsernameTo"`
	UserObjectMapUuidTo           string `json:"userObjectMapUuidTo"`
}

// ClientCheckInV2 defines model for ClientCheckInV2.
type ClientCheckInV2 struct {
	BackgroundHooks *bool `json:"backgroundHooks,omitempty"`

	// Suggested values are 5, 15, 30, or 60. Web interface will not display correctly if not one of those. Minimim is 5, maximum is 60.
	CheckInFrequency                 *int32 `json:"checkInFrequency,omitempty"`
	CreateHooks                      *bool  `json:"createHooks,omitempty"`
	CreateStartupScript              *bool  `json:"createStartupScript,omitempty"`
	EnableLocalConfigurationProfiles *bool  `json:"enableLocalConfigurationProfiles,omitempty"`
	HookDisplayStatus                *bool  `json:"hookDisplayStatus,omitempty"`
	HookHideRestore                  *bool  `json:"hookHideRestore,omitempty"`
	HookLog                          *bool  `json:"hookLog,omitempty"`
	HookMcx                          *bool  `json:"hookMcx,omitempty"`
	HookPolicies                     *bool  `json:"hookPolicies,omitempty"`
	StartupLog                       *bool  `json:"startupLog,omitempty"`
	StartupMcx                       *bool  `json:"startupMcx,omitempty"`
	StartupPolicies                  *bool  `json:"startupPolicies,omitempty"`
	StartupSsh                       *bool  `json:"startupSsh,omitempty"`
}

// ClientCheckInV3 defines model for ClientCheckInV3.
type ClientCheckInV3 struct {
	// Suggested values are 5, 15, 30, or 60. Web interface will not display correctly if not one of those. Minimim is 5, maximum is 60.
	CheckInFrequency                 *int32 `json:"checkInFrequency,omitempty"`
	CreateHooks                      *bool  `json:"createHooks,omitempty"`
	CreateStartupScript              *bool  `json:"createStartupScript,omitempty"`
	EnableLocalConfigurationProfiles *bool  `json:"enableLocalConfigurationProfiles,omitempty"`
	HookLog                          *bool  `json:"hookLog,omitempty"`
	HookPolicies                     *bool  `json:"hookPolicies,omitempty"`
	StartupLog                       *bool  `json:"startupLog,omitempty"`
	StartupPolicies                  *bool  `json:"startupPolicies,omitempty"`
	StartupSsh                       *bool  `json:"startupSsh,omitempty"`
}

// A Cloud Identity Provider information
type CloudIdPCommon struct {
	DisplayName  string                     `json:"displayName"`
	Id           string                     `json:"id"`
	ProviderName CloudIdPCommonProviderName `json:"providerName"`
}

// CloudIdPCommonProviderName defines model for CloudIdPCommon.ProviderName.
type CloudIdPCommonProviderName string

// A Cloud Identity Provider information for request
type CloudIdPCommonRequest struct {
	DisplayName  string                            `json:"displayName"`
	ProviderName CloudIdPCommonRequestProviderName `json:"providerName"`
}

// CloudIdPCommonRequestProviderName defines model for CloudIdPCommonRequest.ProviderName.
type CloudIdPCommonRequestProviderName string

// A Cloud Identity Provider information for responses
type CloudIdPCommonResponse struct {
	DisplayName  *string                             `json:"displayName,omitempty"`
	Enabled      *bool                               `json:"enabled,omitempty"`
	Id           *string                             `json:"id,omitempty"`
	ProviderName *CloudIdPCommonResponseProviderName `json:"providerName,omitempty"`
}

// CloudIdPCommonResponseProviderName defines model for CloudIdPCommonResponse.ProviderName.
type CloudIdPCommonResponseProviderName string

// Ldap Cloud Identity Provider conection pool statistics
type CloudLdapConnectionPoolStatistics struct {
	MaximumAvailableConnections          *int64 `json:"maximumAvailableConnections,omitempty"`
	NumAvailableConnections              *int64 `json:"numAvailableConnections,omitempty"`
	NumConnectionsClosedDefunct          *int64 `json:"numConnectionsClosedDefunct,omitempty"`
	NumConnectionsClosedExpired          *int64 `json:"numConnectionsClosedExpired,omitempty"`
	NumConnectionsClosedUnneeded         *int64 `json:"numConnectionsClosedUnneeded,omitempty"`
	NumFailedCheckouts                   *int64 `json:"numFailedCheckouts,omitempty"`
	NumFailedConnectionAttempts          *int64 `json:"numFailedConnectionAttempts,omitempty"`
	NumReleasedValid                     *int64 `json:"numReleasedValid,omitempty"`
	NumSuccessfulCheckouts               *int64 `json:"numSuccessfulCheckouts,omitempty"`
	NumSuccessfulCheckoutsAfterWaiting   *int64 `json:"numSuccessfulCheckoutsAfterWaiting,omitempty"`
	NumSuccessfulCheckoutsNewConnection  *int64 `json:"numSuccessfulCheckoutsNewConnection,omitempty"`
	NumSuccessfulCheckoutsWithoutWaiting *int64 `json:"numSuccessfulCheckoutsWithoutWaiting,omitempty"`
	NumSuccessfulConnectionAttempts      *int64 `json:"numSuccessfulConnectionAttempts,omitempty"`
}

// Status of tested Cloud Ldap connection
type CloudLdapConnectionStatus struct {
	Status *string `json:"status,omitempty"`
}

// Response with keystore information
type CloudLdapKeystore struct {
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	FileName       *string    `json:"fileName,omitempty"`
	Subject        *string    `json:"subject,omitempty"`
	Type           *string    `json:"type,omitempty"`
}

// Request with the Base64-encoded keystore file
type CloudLdapKeystoreFile struct {
	FileBytes []byte `json:"fileBytes"`
	FileName  string `json:"fileName"`
	Password  string `json:"password"`
}

// Mappings configurations request for Ldap Cloud Identity Provider configuration
type CloudLdapMappingsRequest struct {
	// Cloud Identity Provider user group mappings configuration
	GroupMappings GroupMappings `json:"groupMappings"`

	// Cloud Identity Provider user group membership mappings configuration
	MembershipMappings MembershipMappings `json:"membershipMappings"`

	// Cloud Identity Provider user mappings configuration
	UserMappings UserMappings `json:"userMappings"`
}

// Mappings configuration response for Ldap Cloud Identity Provider configuration
type CloudLdapMappingsResponse struct {
	// Cloud Identity Provider user group mappings configuration
	GroupMappings *GroupMappings `json:"groupMappings,omitempty"`

	// Cloud Identity Provider user group membership mappings configuration
	MembershipMappings *MembershipMappings `json:"membershipMappings,omitempty"`

	// Cloud Identity Provider user mappings configuration
	UserMappings *UserMappings `json:"userMappings,omitempty"`
}

// A Cloud Identity Provider LDAP server configuration for requests
type CloudLdapServerRequest struct {
	ConnectionTimeout int                                  `json:"connectionTimeout"`
	ConnectionType    CloudLdapServerRequestConnectionType `json:"connectionType"`
	DomainName        string                               `json:"domainName"`
	Enabled           bool                                 `json:"enabled"`

	// Request with the Base64-encoded keystore file
	Keystore      CloudLdapKeystoreFile `json:"keystore"`
	Port          int                   `json:"port"`
	SearchTimeout int                   `json:"searchTimeout"`
	ServerUrl     string                `json:"serverUrl"`
	UseWildcards  bool                  `json:"useWildcards"`
}

// CloudLdapServerRequestConnectionType defines model for CloudLdapServerRequest.ConnectionType.
type CloudLdapServerRequestConnectionType string

// A Cloud Identity Provider LDAP server configuration for responses
type CloudLdapServerResponse struct {
	ConnectionTimeout *int                                   `json:"connectionTimeout,omitempty"`
	ConnectionType    *CloudLdapServerResponseConnectionType `json:"connectionType,omitempty"`
	DomainName        *string                                `json:"domainName,omitempty"`
	Enabled           *bool                                  `json:"enabled,omitempty"`
	Id                *string                                `json:"id,omitempty"`

	// Response with keystore information
	Keystore      *CloudLdapKeystore `json:"keystore,omitempty"`
	Port          *int               `json:"port,omitempty"`
	SearchTimeout *int               `json:"searchTimeout,omitempty"`
	ServerUrl     *string            `json:"serverUrl,omitempty"`
	UseWildcards  *bool              `json:"useWildcards,omitempty"`
}

// CloudLdapServerResponseConnectionType defines model for CloudLdapServerResponse.ConnectionType.
type CloudLdapServerResponseConnectionType string

// A Cloud Identity Provider LDAP server configuration for updates
type CloudLdapServerUpdate struct {
	ConnectionTimeout int                                 `json:"connectionTimeout"`
	ConnectionType    CloudLdapServerUpdateConnectionType `json:"connectionType"`
	DomainName        string                              `json:"domainName"`
	Enabled           bool                                `json:"enabled"`

	// Request with the Base64-encoded keystore file
	Keystore      *CloudLdapKeystoreFile `json:"keystore,omitempty"`
	Port          int                    `json:"port"`
	SearchTimeout int                    `json:"searchTimeout"`
	ServerUrl     string                 `json:"serverUrl"`
	UseWildcards  bool                   `json:"useWildcards"`
}

// CloudLdapServerUpdateConnectionType defines model for CloudLdapServerUpdate.ConnectionType.
type CloudLdapServerUpdateConnectionType string

// ComputerApplication defines model for ComputerApplication.
type ComputerApplication struct {
	BundleId *string `json:"bundleId,omitempty"`

	// The app's external version ID. It can be used in the iTunes Search API to decide if the app needs to be updated
	ExternalVersionId *string `json:"externalVersionId,omitempty"`
	MacAppStore       *bool   `json:"macAppStore,omitempty"`
	Name              *string `json:"name,omitempty"`
	Path              *string `json:"path,omitempty"`
	SizeMegabytes     *int    `json:"sizeMegabytes,omitempty"`
	UpdateAvailable   *bool   `json:"updateAvailable,omitempty"`
	Version           *string `json:"version,omitempty"`
}

// ComputerAttachment defines model for ComputerAttachment.
type ComputerAttachment struct {
	FileType *string `json:"fileType,omitempty"`
	Id       *string `json:"id,omitempty"`
	Name     *string `json:"name,omitempty"`

	// File size in bytes
	SizeBytes *int64 `json:"sizeBytes,omitempty"`
}

// ComputerCertificate defines model for ComputerCertificate.
type ComputerCertificate struct {
	CertificateStatus *ComputerCertificateCertificateStatus `json:"certificateStatus,omitempty"`
	CommonName        *string                               `json:"commonName,omitempty"`
	ExpirationDate    *time.Time                            `json:"expirationDate,omitempty"`
	Identity          *bool                                 `json:"identity,omitempty"`
	LifecycleStatus   *ComputerCertificateLifecycleStatus   `json:"lifecycleStatus,omitempty"`
	Username          *string                               `json:"username,omitempty"`
}

// ComputerCertificateCertificateStatus defines model for ComputerCertificate.CertificateStatus.
type ComputerCertificateCertificateStatus string

// ComputerCertificateLifecycleStatus defines model for ComputerCertificate.LifecycleStatus.
type ComputerCertificateLifecycleStatus string

// ComputerConfigurationProfile defines model for ComputerConfigurationProfile.
type ComputerConfigurationProfile struct {
	DisplayName       *string    `json:"displayName,omitempty"`
	Id                *string    `json:"id,omitempty"`
	LastInstalled     *time.Time `json:"lastInstalled,omitempty"`
	ProfileIdentifier *string    `json:"profileIdentifier,omitempty"`
	Removable         *bool      `json:"removable,omitempty"`
	Username          *string    `json:"username,omitempty"`
}

// ComputerContentCaching defines model for ComputerContentCaching.
type ComputerContentCaching struct {
	Activated                           *bool                                     `json:"activated,omitempty"`
	Active                              *bool                                     `json:"active,omitempty"`
	ActualCacheBytesUsed                *int64                                    `json:"actualCacheBytesUsed,omitempty"`
	Alerts                              *[]ComputerContentCachingAlert            `json:"alerts,omitempty"`
	CacheBytesFree                      *int64                                    `json:"cacheBytesFree,omitempty"`
	CacheBytesLimit                     *int64                                    `json:"cacheBytesLimit,omitempty"`
	CacheBytesUsed                      *int64                                    `json:"cacheBytesUsed,omitempty"`
	CacheDetails                        *[]ComputerContentCachingCacheDetail      `json:"cacheDetails,omitempty"`
	CacheStatus                         *string                                   `json:"cacheStatus,omitempty"`
	ComputerContentCachingInformationId *string                                   `json:"computerContentCachingInformationId,omitempty"`
	DataMigrationCompleted              *bool                                     `json:"dataMigrationCompleted,omitempty"`
	DataMigrationError                  *ComputerContentCachingDataMigrationError `json:"dataMigrationError,omitempty"`
	DataMigrationProgressPercentage     *int                                      `json:"dataMigrationProgressPercentage,omitempty"`
	MaxCachePressureLast1HourPercentage *int                                      `json:"maxCachePressureLast1HourPercentage,omitempty"`
	Parents                             *[]ComputerContentCachingParent           `json:"parents,omitempty"`
	PersonalCacheBytesFree              *int64                                    `json:"personalCacheBytesFree,omitempty"`
	PersonalCacheBytesLimit             *int64                                    `json:"personalCacheBytesLimit,omitempty"`
	PersonalCacheBytesUsed              *int64                                    `json:"personalCacheBytesUsed,omitempty"`
	Port                                *int64                                    `json:"port,omitempty"`
	PublicAddress                       *string                                   `json:"publicAddress,omitempty"`
	RegistrationError                   *string                                   `json:"registrationError,omitempty"`
	RegistrationResponseCode            *int64                                    `json:"registrationResponseCode,omitempty"`
	RegistrationStarted                 *time.Time                                `json:"registrationStarted,omitempty"`
	RegistrationStatus                  *ComputerContentCachingRegistrationStatus `json:"registrationStatus,omitempty"`
	RestrictedMedia                     *bool                                     `json:"restrictedMedia,omitempty"`
	ServerGuid                          *string                                   `json:"serverGuid,omitempty"`
	StartupStatus                       *string                                   `json:"startupStatus,omitempty"`
	TetheratorStatus                    *ComputerContentCachingTetheratorStatus   `json:"tetheratorStatus,omitempty"`
	TotalBytesAreSince                  *time.Time                                `json:"totalBytesAreSince,omitempty"`
	TotalBytesDropped                   *int64                                    `json:"totalBytesDropped,omitempty"`
	TotalBytesImported                  *int64                                    `json:"totalBytesImported,omitempty"`
	TotalBytesReturnedToChildren        *int64                                    `json:"totalBytesReturnedToChildren,omitempty"`
	TotalBytesReturnedToClients         *int64                                    `json:"totalBytesReturnedToClients,omitempty"`
	TotalBytesReturnedToPeers           *int64                                    `json:"totalBytesReturnedToPeers,omitempty"`
	TotalBytesStoredFromOrigin          *int64                                    `json:"totalBytesStoredFromOrigin,omitempty"`
	TotalBytesStoredFromParents         *int64                                    `json:"totalBytesStoredFromParents,omitempty"`
	TotalBytesStoredFromPeers           *int64                                    `json:"totalBytesStoredFromPeers,omitempty"`
}

// ComputerContentCachingRegistrationStatus defines model for ComputerContentCaching.RegistrationStatus.
type ComputerContentCachingRegistrationStatus string

// ComputerContentCachingTetheratorStatus defines model for ComputerContentCaching.TetheratorStatus.
type ComputerContentCachingTetheratorStatus string

// ComputerContentCachingAlert defines model for ComputerContentCachingAlert.
type ComputerContentCachingAlert struct {
	CacheBytesLimit      *int64     `json:"cacheBytesLimit,omitempty"`
	ClassName            *string    `json:"className,omitempty"`
	PathPreventingAccess *string    `json:"pathPreventingAccess,omitempty"`
	PostDate             *time.Time `json:"postDate,omitempty"`
	ReservedVolumeBytes  *int64     `json:"reservedVolumeBytes,omitempty"`
	Resource             *string    `json:"resource,omitempty"`
}

// ComputerContentCachingCacheDetail defines model for ComputerContentCachingCacheDetail.
type ComputerContentCachingCacheDetail struct {
	CategoryName                         *string `json:"categoryName,omitempty"`
	ComputerContentCachingCacheDetailsId *string `json:"computerContentCachingCacheDetailsId,omitempty"`
	DiskSpaceBytesUsed                   *int64  `json:"diskSpaceBytesUsed,omitempty"`
}

// ComputerContentCachingDataMigrationError defines model for ComputerContentCachingDataMigrationError.
type ComputerContentCachingDataMigrationError struct {
	Code     *int64                                              `json:"code,omitempty"`
	Domain   *string                                             `json:"domain,omitempty"`
	UserInfo *[]ComputerContentCachingDataMigrationErrorUserInfo `json:"userInfo,omitempty"`
}

// ComputerContentCachingDataMigrationErrorUserInfo defines model for ComputerContentCachingDataMigrationErrorUserInfo.
type ComputerContentCachingDataMigrationErrorUserInfo struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}

// ComputerContentCachingParent defines model for ComputerContentCachingParent.
type ComputerContentCachingParent struct {
	Address                *string                              `json:"address,omitempty"`
	Alerts                 *ComputerContentCachingParentAlert   `json:"alerts,omitempty"`
	ContentCachingParentId *string                              `json:"contentCachingParentId,omitempty"`
	Details                *ComputerContentCachingParentDetails `json:"details,omitempty"`
	Guid                   *string                              `json:"guid,omitempty"`
	Healthy                *bool                                `json:"healthy,omitempty"`
	Port                   *int64                               `json:"port,omitempty"`
	Version                *string                              `json:"version,omitempty"`
}

// ComputerContentCachingParentAlert defines model for ComputerContentCachingParentAlert.
type ComputerContentCachingParentAlert struct {
	Addresses                   *[]string  `json:"addresses,omitempty"`
	ClassName                   *string    `json:"className,omitempty"`
	ContentCachingParentAlertId *string    `json:"contentCachingParentAlertId,omitempty"`
	PostDate                    *time.Time `json:"postDate,omitempty"`
}

// ComputerContentCachingParentCapabilities defines model for ComputerContentCachingParentCapabilities.
type ComputerContentCachingParentCapabilities struct {
	ContentCachingParentCapabilitiesId *string `json:"contentCachingParentCapabilitiesId,omitempty"`
	Imports                            *bool   `json:"imports,omitempty"`
	Namespaces                         *bool   `json:"namespaces,omitempty"`
	PersonalContent                    *bool   `json:"personalContent,omitempty"`
	Prioritization                     *bool   `json:"prioritization,omitempty"`
	QueryParameters                    *bool   `json:"queryParameters,omitempty"`
	SharedContent                      *bool   `json:"sharedContent,omitempty"`
}

// ComputerContentCachingParentDetails defines model for ComputerContentCachingParentDetails.
type ComputerContentCachingParentDetails struct {
	AcPower                       *bool                                       `json:"acPower,omitempty"`
	CacheSizeBytes                *int64                                      `json:"cacheSizeBytes,omitempty"`
	Capabilities                  *ComputerContentCachingParentCapabilities   `json:"capabilities,omitempty"`
	ContentCachingParentDetailsId *string                                     `json:"contentCachingParentDetailsId,omitempty"`
	LocalNetwork                  *[]ComputerContentCachingParentLocalNetwork `json:"localNetwork,omitempty"`
	Portable                      *bool                                       `json:"portable,omitempty"`
}

// ComputerContentCachingParentLocalNetwork defines model for ComputerContentCachingParentLocalNetwork.
type ComputerContentCachingParentLocalNetwork struct {
	ContentCachingParentLocalNetworkId *string `json:"contentCachingParentLocalNetworkId,omitempty"`
	Speed                              *int64  `json:"speed,omitempty"`
	Wired                              *bool   `json:"wired,omitempty"`
}

// ComputerDisk defines model for ComputerDisk.
type ComputerDisk struct {
	Device       *string              `json:"device,omitempty"`
	Id           *string              `json:"id,omitempty"`
	Model        *string              `json:"model,omitempty"`
	Partitions   *[]ComputerPartition `json:"partitions,omitempty"`
	Revision     *string              `json:"revision,omitempty"`
	SerialNumber *string              `json:"serialNumber,omitempty"`

	// Disk Size in MB.
	SizeMegabytes *int64 `json:"sizeMegabytes,omitempty"`

	// S.M.A.R.T Status
	SmartStatus *string `json:"smartStatus,omitempty"`

	// Connection type attribute.
	Type *string `json:"type,omitempty"`
}

// ComputerDiskEncryption defines model for ComputerDiskEncryption.
type ComputerDiskEncryption struct {
	BootPartitionEncryptionDetails      *ComputerPartitionEncryption                               `json:"bootPartitionEncryptionDetails,omitempty"`
	DiskEncryptionConfigurationName     *string                                                    `json:"diskEncryptionConfigurationName,omitempty"`
	FileVault2EligibilityMessage        *string                                                    `json:"fileVault2EligibilityMessage,omitempty"`
	FileVault2EnabledUserNames          *[]string                                                  `json:"fileVault2EnabledUserNames,omitempty"`
	IndividualRecoveryKeyValidityStatus *ComputerDiskEncryptionIndividualRecoveryKeyValidityStatus `json:"individualRecoveryKeyValidityStatus,omitempty"`
	InstitutionalRecoveryKeyPresent     *bool                                                      `json:"institutionalRecoveryKeyPresent,omitempty"`
}

// ComputerDiskEncryptionIndividualRecoveryKeyValidityStatus defines model for ComputerDiskEncryption.IndividualRecoveryKeyValidityStatus.
type ComputerDiskEncryptionIndividualRecoveryKeyValidityStatus string

// ComputerExtensionAttribute defines model for ComputerExtensionAttribute.
type ComputerExtensionAttribute struct {
	// A data type of extension attribute.
	DataType *ComputerExtensionAttributeDataType `json:"dataType"`

	// An identifier of extension attribute definition.
	DefinitionId *string `json:"definitionId,omitempty"`

	// An additional explanation of exact attribute meaning, possible values, etc.
	Description *string `json:"description"`
	Enabled     *bool   `json:"enabled,omitempty"`

	// The input method. `text` is most common and means simply free text, `popup` i a closed list of values from
	// which one or many can be selected and `script` value is calculated and can never be set directly.
	InputType  *ComputerExtensionAttributeInputType `json:"inputType"`
	MultiValue *bool                                `json:"multiValue,omitempty"`

	// A human-readable name by which attribute can be referred to.
	Name *string `json:"name,omitempty"`

	// A closed list of possible values (applies to `popup` input type).
	Options *[]string `json:"options"`

	// A value of extension attribute, in some rare cases there may be multiple values present, hence the array.
	Values *[]string `json:"values"`
}

// A data type of extension attribute.
type ComputerExtensionAttributeDataType string

// The input method. `text` is most common and means simply free text, `popup` i a closed list of values from
// which one or many can be selected and `script` value is calculated and can never be set directly.
type ComputerExtensionAttributeInputType string

// ComputerFont defines model for ComputerFont.
type ComputerFont struct {
	Name    *string `json:"name,omitempty"`
	Path    *string `json:"path,omitempty"`
	Version *string `json:"version,omitempty"`
}

// ComputerGeneral defines model for ComputerGeneral.
type ComputerGeneral struct {
	AssetTag                             *string                       `json:"assetTag,omitempty"`
	Barcode1                             *string                       `json:"barcode1,omitempty"`
	Barcode2                             *string                       `json:"barcode2,omitempty"`
	DistributionPoint                    *string                       `json:"distributionPoint,omitempty"`
	EnrolledViaAutomatedDeviceEnrollment *bool                         `json:"enrolledViaAutomatedDeviceEnrollment,omitempty"`
	EnrollmentMethod                     *EnrollmentMethod             `json:"enrollmentMethod,omitempty"`
	ExtensionAttributes                  *[]ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
	InitialEntryDate                     *openapi_types.Date           `json:"initialEntryDate,omitempty"`
	ItunesStoreAccountActive             *bool                         `json:"itunesStoreAccountActive,omitempty"`
	JamfBinaryVersion                    *string                       `json:"jamfBinaryVersion,omitempty"`
	LastCloudBackupDate                  *time.Time                    `json:"lastCloudBackupDate,omitempty"`
	LastContactTime                      *time.Time                    `json:"lastContactTime,omitempty"`
	LastEnrolledDate                     *time.Time                    `json:"lastEnrolledDate,omitempty"`
	LastIpAddress                        *string                       `json:"lastIpAddress,omitempty"`
	LastReportedIp                       *string                       `json:"lastReportedIp,omitempty"`
	MdmCapable                           *ComputerMdmCapability        `json:"mdmCapable,omitempty"`
	MdmProfileExpiration                 *time.Time                    `json:"mdmProfileExpiration,omitempty"`
	Name                                 *string                       `json:"name,omitempty"`
	Platform                             *string                       `json:"platform,omitempty"`
	RemoteManagement                     *ComputerRemoteManagement     `json:"remoteManagement,omitempty"`
	ReportDate                           *time.Time                    `json:"reportDate,omitempty"`
	Site                                 *V1Site                       `json:"site,omitempty"`
	Supervised                           *bool                         `json:"supervised,omitempty"`
	UserApprovedMdm                      *bool                         `json:"userApprovedMdm,omitempty"`
}

// ComputerGeneralUpdate defines model for ComputerGeneralUpdate.
type ComputerGeneralUpdate struct {
	AssetTag            *string                       `json:"assetTag,omitempty"`
	Barcode1            *string                       `json:"barcode1,omitempty"`
	Barcode2            *string                       `json:"barcode2,omitempty"`
	ExtensionAttributes *[]ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
	LastIpAddress       *string                       `json:"lastIpAddress,omitempty"`
	Name                *string                       `json:"name,omitempty"`
}

// ComputerHardware defines model for ComputerHardware.
type ComputerHardware struct {
	AltMacAddress         *string `json:"altMacAddress,omitempty"`
	AltNetworkAdapterType *string `json:"altNetworkAdapterType,omitempty"`
	AppleSilicon          *bool   `json:"appleSilicon,omitempty"`

	// Remaining percentage of battery power.
	BatteryCapacityPercent *int    `json:"batteryCapacityPercent,omitempty"`
	BleCapable             *bool   `json:"bleCapable,omitempty"`
	BootRom                *string `json:"bootRom,omitempty"`
	BusSpeedMhz            *int64  `json:"busSpeedMhz,omitempty"`

	// Cache Size in KB.
	CacheSizeKilobytes  *int64                        `json:"cacheSizeKilobytes,omitempty"`
	CoreCount           *int                          `json:"coreCount,omitempty"`
	ExtensionAttributes *[]ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
	MacAddress          *string                       `json:"macAddress,omitempty"`
	Make                *string                       `json:"make,omitempty"`
	Model               *string                       `json:"model,omitempty"`
	ModelIdentifier     *string                       `json:"modelIdentifier,omitempty"`
	NetworkAdapterType  *string                       `json:"networkAdapterType,omitempty"`
	NicSpeed            *string                       `json:"nicSpeed,omitempty"`

	// Available RAM slots.
	OpenRamSlots          *int    `json:"openRamSlots,omitempty"`
	OpticalDrive          *string `json:"opticalDrive,omitempty"`
	ProcessorArchitecture *string `json:"processorArchitecture,omitempty"`
	ProcessorCount        *int    `json:"processorCount,omitempty"`

	// Processor Speed in MHz.
	ProcessorSpeedMhz      *int64  `json:"processorSpeedMhz,omitempty"`
	ProcessorType          *string `json:"processorType,omitempty"`
	SerialNumber           *string `json:"serialNumber,omitempty"`
	SmcVersion             *string `json:"smcVersion,omitempty"`
	SupportsIosAppInstalls *bool   `json:"supportsIosAppInstalls,omitempty"`

	// Total RAM Size in MB.
	TotalRamMegabytes *int64 `json:"totalRamMegabytes,omitempty"`
}

// ComputerHardwareUpdate defines model for ComputerHardwareUpdate.
type ComputerHardwareUpdate struct {
	AltMacAddress         *string                       `json:"altMacAddress,omitempty"`
	AltNetworkAdapterType *string                       `json:"altNetworkAdapterType,omitempty"`
	ExtensionAttributes   *[]ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
	MacAddress            *string                       `json:"macAddress,omitempty"`
	NetworkAdapterType    *string                       `json:"networkAdapterType,omitempty"`
}

// ComputerIbeacon defines model for ComputerIbeacon.
type ComputerIbeacon struct {
	Name *string `json:"name,omitempty"`
}

// ComputerInventoryCollectionPreferences defines model for ComputerInventoryCollectionPreferences.
type ComputerInventoryCollectionPreferences struct {
	AllowChangingUserAndLocation                 *bool `json:"allowChangingUserAndLocation,omitempty"`
	CalculateSizes                               *bool `json:"calculateSizes,omitempty"`
	CollectSyncedMobileDeviceInfo                *bool `json:"collectSyncedMobileDeviceInfo,omitempty"`
	IncludeAccounts                              *bool `json:"includeAccounts,omitempty"`
	IncludeFonts                                 *bool `json:"includeFonts,omitempty"`
	IncludeHiddenAccounts                        *bool `json:"includeHiddenAccounts,omitempty"`
	IncludePackages                              *bool `json:"includePackages,omitempty"`
	IncludePlugins                               *bool `json:"includePlugins,omitempty"`
	IncludePrinters                              *bool `json:"includePrinters,omitempty"`
	IncludeServices                              *bool `json:"includeServices,omitempty"`
	IncludeSoftwareUpdates                       *bool `json:"includeSoftwareUpdates,omitempty"`
	MonitorApplicationUsage                      *bool `json:"monitorApplicationUsage,omitempty"`
	MonitorBeacons                               *bool `json:"monitorBeacons,omitempty"`
	UpdateLdapInfoOnComputerInventorySubmissions *bool `json:"updateLdapInfoOnComputerInventorySubmissions,omitempty"`
	UseUnixUserPaths                             *bool `json:"useUnixUserPaths,omitempty"`
}

// ComputerInventoryCollectionSettings defines model for ComputerInventoryCollectionSettings.
type ComputerInventoryCollectionSettings struct {
	ApplicationPaths                       *[]AppPath                              `json:"applicationPaths,omitempty"`
	ComputerInventoryCollectionPreferences *ComputerInventoryCollectionPreferences `json:"computerInventoryCollectionPreferences,omitempty"`
	FontPaths                              *[]FontPath                             `json:"fontPaths,omitempty"`
	PluginPaths                            *[]PluginPath                           `json:"pluginPaths,omitempty"`
}

// ComputerInventoryRecoveryLockPasswordResponse defines model for ComputerInventoryRecoveryLockPasswordResponse.
type ComputerInventoryRecoveryLockPasswordResponse struct {
	RecoveryLockPassword *string `json:"recoveryLockPassword,omitempty"`
}

// ComputerInventoryResponse defines model for ComputerInventoryResponse.
type ComputerInventoryResponse struct {
	Applications          *[]ComputerApplication          `json:"applications,omitempty"`
	Attachments           *[]ComputerAttachment           `json:"attachments,omitempty"`
	Certificates          *[]ComputerCertificate          `json:"certificates,omitempty"`
	ConfigurationProfiles *[]ComputerConfigurationProfile `json:"configurationProfiles,omitempty"`
	ContentCaching        *ComputerContentCaching         `json:"contentCaching,omitempty"`
	DiskEncryption        *ComputerDiskEncryption         `json:"diskEncryption,omitempty"`
	ExtensionAttributes   *[]ComputerExtensionAttribute   `json:"extensionAttributes,omitempty"`
	Fonts                 *[]ComputerFont                 `json:"fonts,omitempty"`
	General               *ComputerGeneral                `json:"general,omitempty"`
	GroupMemberships      *[]GroupMembership              `json:"groupMemberships,omitempty"`
	Hardware              *ComputerHardware               `json:"hardware,omitempty"`
	Ibeacons              *[]ComputerIbeacon              `json:"ibeacons,omitempty"`
	Id                    *string                         `json:"id,omitempty"`
	LicensedSoftware      *[]ComputerLicensedSoftware     `json:"licensedSoftware,omitempty"`
	LocalUserAccounts     *[]ComputerLocalUserAccount     `json:"localUserAccounts,omitempty"`
	OperatingSystem       *ComputerOperatingSystem        `json:"operatingSystem,omitempty"`

	// All package receipts are listed by their package name
	PackageReceipts *ComputerPackageReceipts  `json:"packageReceipts,omitempty"`
	Plugins         *[]ComputerPlugin         `json:"plugins,omitempty"`
	Printers        *[]ComputerPrinter        `json:"printers,omitempty"`
	Purchasing      *ComputerPurchase         `json:"purchasing,omitempty"`
	Security        *ComputerSecurity         `json:"security,omitempty"`
	Services        *[]ComputerService        `json:"services,omitempty"`
	SoftwareUpdates *[]ComputerSoftwareUpdate `json:"softwareUpdates,omitempty"`
	Storage         *ComputerStorage          `json:"storage,omitempty"`
	Udid            *string                   `json:"udid,omitempty"`
	UserAndLocation *ComputerUserAndLocation  `json:"userAndLocation,omitempty"`
}

// ComputerInventorySearchResults defines model for ComputerInventorySearchResults.
type ComputerInventorySearchResults struct {
	Results    *[]ComputerInventoryResponse `json:"results,omitempty"`
	TotalCount *int                         `json:"totalCount,omitempty"`
}

// ComputerInventoryUpdateRequest defines model for ComputerInventoryUpdateRequest.
type ComputerInventoryUpdateRequest struct {
	ExtensionAttributes *[]ComputerExtensionAttribute  `json:"extensionAttributes,omitempty"`
	General             *ComputerGeneralUpdate         `json:"general,omitempty"`
	Hardware            *ComputerHardwareUpdate        `json:"hardware,omitempty"`
	OperatingSystem     *ComputerOperatingSystemUpdate `json:"operatingSystem,omitempty"`
	Purchasing          *ComputerPurchase              `json:"purchasing,omitempty"`
	Udid                *string                        `json:"udid,omitempty"`
	UserAndLocation     *ComputerUserAndLocation       `json:"userAndLocation,omitempty"`
}

// ComputerLicensedSoftware defines model for ComputerLicensedSoftware.
type ComputerLicensedSoftware struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// ComputerLocalUserAccount defines model for ComputerLocalUserAccount.
type ComputerLocalUserAccount struct {
	Admin                          *bool                                           `json:"admin,omitempty"`
	AzureActiveDirectoryId         *ComputerLocalUserAccountAzureActiveDirectoryId `json:"azureActiveDirectoryId,omitempty"`
	ComputerAzureActiveDirectoryId *string                                         `json:"computerAzureActiveDirectoryId,omitempty"`
	FileVault2Enabled              *bool                                           `json:"fileVault2Enabled,omitempty"`
	FullName                       *string                                         `json:"fullName,omitempty"`
	HomeDirectory                  *string                                         `json:"homeDirectory,omitempty"`

	// Home directory size in MB.
	HomeDirectorySizeMb          *int64                                   `json:"homeDirectorySizeMb,omitempty"`
	PasswordHistoryDepth         *int                                     `json:"passwordHistoryDepth,omitempty"`
	PasswordMaxAge               *int                                     `json:"passwordMaxAge,omitempty"`
	PasswordMinComplexCharacters *int                                     `json:"passwordMinComplexCharacters,omitempty"`
	PasswordMinLength            *int                                     `json:"passwordMinLength,omitempty"`
	PasswordRequireAlphanumeric  *bool                                    `json:"passwordRequireAlphanumeric,omitempty"`
	Uid                          *string                                  `json:"uid,omitempty"`
	UserAccountType              *ComputerLocalUserAccountUserAccountType `json:"userAccountType,omitempty"`
	UserAzureActiveDirectoryId   *string                                  `json:"userAzureActiveDirectoryId,omitempty"`
	Username                     *string                                  `json:"username,omitempty"`
}

// ComputerLocalUserAccountAzureActiveDirectoryId defines model for ComputerLocalUserAccount.AzureActiveDirectoryId.
type ComputerLocalUserAccountAzureActiveDirectoryId string

// ComputerLocalUserAccountUserAccountType defines model for ComputerLocalUserAccount.UserAccountType.
type ComputerLocalUserAccountUserAccountType string

// ComputerLocation defines model for ComputerLocation.
type ComputerLocation struct {
	Position *string `json:"position,omitempty"`
	Room     *string `json:"room,omitempty"`
	Username *string `json:"username,omitempty"`
}

// ComputerMdmCapability defines model for ComputerMdmCapability.
type ComputerMdmCapability struct {
	Capable      *bool     `json:"capable,omitempty"`
	CapableUsers *[]string `json:"capableUsers,omitempty"`
}

// ComputerOperatingSystem defines model for ComputerOperatingSystem.
type ComputerOperatingSystem struct {
	ActiveDirectoryStatus  *string                                  `json:"activeDirectoryStatus,omitempty"`
	Build                  *string                                  `json:"build,omitempty"`
	ExtensionAttributes    *[]ComputerExtensionAttribute            `json:"extensionAttributes,omitempty"`
	FileVault2Status       *ComputerOperatingSystemFileVault2Status `json:"fileVault2Status,omitempty"`
	Name                   *string                                  `json:"name,omitempty"`
	SoftwareUpdateDeviceId *string                                  `json:"softwareUpdateDeviceId,omitempty"`
	Version                *string                                  `json:"version,omitempty"`
}

// ComputerOperatingSystemFileVault2Status defines model for ComputerOperatingSystem.FileVault2Status.
type ComputerOperatingSystemFileVault2Status string

// ComputerOperatingSystemUpdate defines model for ComputerOperatingSystemUpdate.
type ComputerOperatingSystemUpdate struct {
	ExtensionAttributes *[]ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
}

// ComputerOverview defines model for ComputerOverview.
type ComputerOverview struct {
	AssetTag               *string           `json:"assetTag,omitempty"`
	Id                     *string           `json:"id,omitempty"`
	IpAddress              *string           `json:"ipAddress,omitempty"`
	IsManaged              *bool             `json:"isManaged,omitempty"`
	LastContactDate        *string           `json:"lastContactDate,omitempty"`
	LastEnrolledDate       *string           `json:"lastEnrolledDate,omitempty"`
	LastReportDate         *string           `json:"lastReportDate,omitempty"`
	Location               *ComputerLocation `json:"location,omitempty"`
	MacAddress             *string           `json:"macAddress,omitempty"`
	ManagementId           *string           `json:"managementId,omitempty"`
	MdmAccessRights        *int              `json:"mdmAccessRights,omitempty"`
	ModelIdentifier        *string           `json:"modelIdentifier,omitempty"`
	Name                   *string           `json:"name,omitempty"`
	OperatingSystemBuild   *string           `json:"operatingSystemBuild,omitempty"`
	OperatingSystemVersion *string           `json:"operatingSystemVersion,omitempty"`
	SerialNumber           *string           `json:"serialNumber,omitempty"`
	Udid                   *string           `json:"udid,omitempty"`
}

// All package receipts are listed by their package name
type ComputerPackageReceipts struct {
	Cached                  *[]string `json:"cached,omitempty"`
	InstalledByInstallerSwu *[]string `json:"installedByInstallerSwu,omitempty"`
	InstalledByJamfPro      *[]string `json:"installedByJamfPro,omitempty"`
}

// ComputerPartition defines model for ComputerPartition.
type ComputerPartition struct {
	// Available space in MB.
	AvailableMegabytes *int64 `json:"availableMegabytes,omitempty"`

	// Percentage progress of current FileVault 2 operation.
	FileVault2ProgressPercent *int                              `json:"fileVault2ProgressPercent"`
	FileVault2State           *ComputerPartitionFileVault2State `json:"fileVault2State,omitempty"`
	LvmManaged                *bool                             `json:"lvmManaged,omitempty"`
	Name                      *string                           `json:"name,omitempty"`
	PartitionType             *ComputerPartitionPartitionType   `json:"partitionType,omitempty"`

	// Percentage of space used.
	PercentUsed *int `json:"percentUsed,omitempty"`

	// Partition Size in MB.
	SizeMegabytes *int64 `json:"sizeMegabytes,omitempty"`
}

// ComputerPartitionPartitionType defines model for ComputerPartition.PartitionType.
type ComputerPartitionPartitionType string

// ComputerPartitionEncryption defines model for ComputerPartitionEncryption.
type ComputerPartitionEncryption struct {
	PartitionFileVault2Percent *int                              `json:"partitionFileVault2Percent,omitempty"`
	PartitionFileVault2State   *ComputerPartitionFileVault2State `json:"partitionFileVault2State,omitempty"`
	PartitionName              *string                           `json:"partitionName,omitempty"`
}

// ComputerPartitionFileVault2State defines model for ComputerPartitionFileVault2State.
type ComputerPartitionFileVault2State string

// ComputerPlugin defines model for ComputerPlugin.
type ComputerPlugin struct {
	Name    *string `json:"name,omitempty"`
	Path    *string `json:"path,omitempty"`
	Version *string `json:"version,omitempty"`
}

// ComputerPrestage defines model for ComputerPrestage.
type ComputerPrestage struct {
	// Embedded struct due to allOf(#/components/schemas/DeviceEnrollmentPrestage)
	DeviceEnrollmentPrestage `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	CustomPackageDistributionPointId int   `json:"customPackageDistributionPointId"`
	CustomPackageIds                 []int `json:"customPackageIds"`
	IsInstallProfilesDuringSetup     bool  `json:"isInstallProfilesDuringSetup"`
	PrestageInstalledProfileIds      []int `json:"prestageInstalledProfileIds"`
}

// ComputerPrestageSearchResults defines model for ComputerPrestageSearchResults.
type ComputerPrestageSearchResults struct {
	Results    *[]GetComputerPrestage `json:"results,omitempty"`
	TotalCount *int                   `json:"totalCount,omitempty"`
}

// ComputerPrestageSearchResultsV2 defines model for ComputerPrestageSearchResultsV2.
type ComputerPrestageSearchResultsV2 struct {
	Results    *[]GetComputerPrestageV2 `json:"results,omitempty"`
	TotalCount *int                     `json:"totalCount,omitempty"`
}

// ComputerPrestageV2 defines model for ComputerPrestageV2.
type ComputerPrestageV2 struct {
	// Embedded struct due to allOf(#/components/schemas/DeviceEnrollmentPrestageV2)
	DeviceEnrollmentPrestageV2 `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	CustomPackageDistributionPointId string                                      `json:"customPackageDistributionPointId"`
	CustomPackageIds                 []string                                    `json:"customPackageIds"`
	EnableRecoveryLock               *bool                                       `json:"enableRecoveryLock,omitempty"`
	InstallProfilesDuringSetup       bool                                        `json:"installProfilesDuringSetup"`
	PrestageInstalledProfileIds      []string                                    `json:"prestageInstalledProfileIds"`
	RecoveryLockPasswordType         *ComputerPrestageV2RecoveryLockPasswordType `json:"recoveryLockPasswordType,omitempty"`
	RotateRecoveryLockPassword       *bool                                       `json:"rotateRecoveryLockPassword,omitempty"`
}

// ComputerPrestageV2RecoveryLockPasswordType defines model for ComputerPrestageV2.RecoveryLockPasswordType.
type ComputerPrestageV2RecoveryLockPasswordType string

// ComputerPrinter defines model for ComputerPrinter.
type ComputerPrinter struct {
	Location *string `json:"location,omitempty"`
	Name     *string `json:"name,omitempty"`
	Type     *string `json:"type,omitempty"`
	Uri      *string `json:"uri,omitempty"`
}

// ComputerPurchase defines model for ComputerPurchase.
type ComputerPurchase struct {
	AppleCareId         *string                       `json:"appleCareId,omitempty"`
	ExtensionAttributes *[]ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
	LeaseDate           *openapi_types.Date           `json:"leaseDate,omitempty"`
	Leased              *bool                         `json:"leased,omitempty"`
	LifeExpectancy      *int                          `json:"lifeExpectancy,omitempty"`
	PoDate              *openapi_types.Date           `json:"poDate,omitempty"`
	PoNumber            *string                       `json:"poNumber,omitempty"`
	PurchasePrice       *string                       `json:"purchasePrice,omitempty"`
	Purchased           *bool                         `json:"purchased,omitempty"`
	PurchasingAccount   *string                       `json:"purchasingAccount,omitempty"`
	PurchasingContact   *string                       `json:"purchasingContact,omitempty"`
	Vendor              *string                       `json:"vendor,omitempty"`
	WarrantyDate        *openapi_types.Date           `json:"warrantyDate,omitempty"`
}

// ComputerRemoteManagement defines model for ComputerRemoteManagement.
type ComputerRemoteManagement struct {
	Managed            *bool   `json:"managed,omitempty"`
	ManagementPassword *string `json:"managementPassword,omitempty"`
	ManagementUsername *string `json:"managementUsername,omitempty"`
}

// ComputerSection defines model for ComputerSection.
type ComputerSection string

// ComputerSecurity defines model for ComputerSecurity.
type ComputerSecurity struct {
	// Collected for macOS 10.15.0 or later
	ActivationLockEnabled *bool `json:"activationLockEnabled,omitempty"`
	AutoLoginDisabled     *bool `json:"autoLoginDisabled,omitempty"`

	// Collected for macOS 11 or later
	BootstrapTokenAllowed *bool `json:"bootstrapTokenAllowed,omitempty"`

	// Collected for macOS 10.15.0 or later
	ExternalBootLevel   *ComputerSecurityExternalBootLevel `json:"externalBootLevel,omitempty"`
	FirewallEnabled     *bool                              `json:"firewallEnabled,omitempty"`
	GatekeeperStatus    *ComputerSecurityGatekeeperStatus  `json:"gatekeeperStatus,omitempty"`
	RecoveryLockEnabled *bool                              `json:"recoveryLockEnabled,omitempty"`

	// Collected for macOS 10.14.4 or later
	RemoteDesktopEnabled *bool `json:"remoteDesktopEnabled,omitempty"`

	// Collected for macOS 10.15.0 or later
	SecureBootLevel *ComputerSecuritySecureBootLevel `json:"secureBootLevel,omitempty"`
	SipStatus       *ComputerSecuritySipStatus       `json:"sipStatus,omitempty"`
	XprotectVersion *string                          `json:"xprotectVersion,omitempty"`
}

// Collected for macOS 10.15.0 or later
type ComputerSecurityExternalBootLevel string

// ComputerSecurityGatekeeperStatus defines model for ComputerSecurity.GatekeeperStatus.
type ComputerSecurityGatekeeperStatus string

// Collected for macOS 10.15.0 or later
type ComputerSecuritySecureBootLevel string

// ComputerSecuritySipStatus defines model for ComputerSecurity.SipStatus.
type ComputerSecuritySipStatus string

// ComputerService defines model for ComputerService.
type ComputerService struct {
	Name *string `json:"name,omitempty"`
}

// ComputerSoftwareUpdate defines model for ComputerSoftwareUpdate.
type ComputerSoftwareUpdate struct {
	Name        *string `json:"name,omitempty"`
	PackageName *string `json:"packageName,omitempty"`
	Version     *string `json:"version,omitempty"`
}

// ComputerStorage defines model for ComputerStorage.
type ComputerStorage struct {
	BootDriveAvailableSpaceMegabytes *int64          `json:"bootDriveAvailableSpaceMegabytes,omitempty"`
	Disks                            *[]ComputerDisk `json:"disks,omitempty"`
}

// ComputerUserAndLocation defines model for ComputerUserAndLocation.
type ComputerUserAndLocation struct {
	BuildingId          *string                       `json:"buildingId,omitempty"`
	DepartmentId        *string                       `json:"departmentId,omitempty"`
	Email               *string                       `json:"email,omitempty"`
	ExtensionAttributes *[]ComputerExtensionAttribute `json:"extensionAttributes,omitempty"`
	Phone               *string                       `json:"phone,omitempty"`
	Position            *string                       `json:"position,omitempty"`
	Realname            *string                       `json:"realname,omitempty"`
	Room                *string                       `json:"room,omitempty"`
	Username            *string                       `json:"username,omitempty"`
}

// ComputersSearchResults defines model for ComputersSearchResults.
type ComputersSearchResults struct {
	Results    *[]ComputerOverview `json:"results,omitempty"`
	TotalCount *int                `json:"totalCount,omitempty"`
}

// ConfigurationProfile defines model for ConfigurationProfile.
type ConfigurationProfile struct {
	DisplayName *string `json:"displayName,omitempty"`
	Identifier  *string `json:"identifier,omitempty"`
	Uuid        *string `json:"uuid,omitempty"`
	Version     *string `json:"version,omitempty"`
}

// A list with Cloud Identity Providers informations about configurations
type ConfigurationSearchResults struct {
	Results    *[]CloudIdPCommonResponse `json:"results,omitempty"`
	TotalCount *int                      `json:"totalCount,omitempty"`
}

// Request that creates configuration and initialize connection between Jamf Pro and Team Viewer
type ConnectionConfigurationCandidateRequest struct {
	// Name for Team Viewer Connection Configuration
	DisplayName string `json:"displayName"`

	// Defines the intent to enable or disable Team Viewer connection
	Enabled bool `json:"enabled"`

	// Token which is used for connecting to Team Viewer
	ScriptToken string `json:"scriptToken"`

	// Number of minutes before the session expires
	SessionTimeout int `json:"sessionTimeout"`

	// An identifier of a site which Team Viewer Remote Administration will be configured on
	SiteId string `json:"siteId"`
}

// Response that contains information about connection configuration for Team Viewer
type ConnectionConfigurationResponse struct {
	// Name for Team Viewer Connection Configuration
	DisplayName string `json:"displayName"`

	// Describes if Team Viewer connection is enabled or disabled
	Enabled bool `json:"enabled"`

	// An identifier of connection configuration for Team Viewer Remote Administration
	Id string `json:"id"`

	// Number of minutes before the session expires
	SessionTimeout int `json:"sessionTimeout"`

	// An identifier of a site which Team Viewer Remote Administration is configured on
	SiteId string `json:"siteId"`
}

// Response that contains connection configuration status for Team Viewer
type ConnectionConfigurationStatusResponse struct {
	// connection configuration status for Team Viewer
	ConnectionVerificationResult string `json:"connectionVerificationResult"`
}

// Request that updates configuration connection between Jamf Pro and Team Viewer
type ConnectionConfigurationUpdateRequest struct {
	// Name for Team Viewer Connection Configuration
	DisplayName *string `json:"displayName,omitempty"`

	// Defines the intent to enable or disable Team Viewer connection
	Enabled *bool `json:"enabled,omitempty"`

	// Number of minutes before the session expires
	SessionTimeout *int `json:"sessionTimeout,omitempty"`

	// Script token for Team Viewer Connection Configuration
	Token *string `json:"token,omitempty"`
}

// Country defines model for Country.
type Country struct {
	Code *string `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
}

// CountryCodes defines model for CountryCodes.
type CountryCodes struct {
	CountryCodes *[]Country `json:"countryCodes,omitempty"`
}

// CreatePath defines model for CreatePath.
type CreatePath struct {
	Path  string          `json:"path"`
	Scope CreatePathScope `json:"scope"`
}

// CreatePathScope defines model for CreatePath.Scope.
type CreatePathScope string

// CsaToken defines model for CsaToken.
type CsaToken struct {
	RefreshExpiration *int      `json:"refreshExpiration,omitempty"`
	Scopes            *[]string `json:"scopes,omitempty"`
}

// CurrentAccount defines model for CurrentAccount.
type CurrentAccount struct {
	AccessLevel      *CurrentAccountAccessLevel  `json:"accessLevel,omitempty"`
	CurrentSiteId    *int                        `json:"currentSiteId,omitempty"`
	Email            *string                     `json:"email,omitempty"`
	GroupIds         *[]int                      `json:"groupIds,omitempty"`
	Id               *int                        `json:"id,omitempty"`
	IsMultiSiteAdmin *bool                       `json:"isMultiSiteAdmin,omitempty"`
	Preferences      *AccountPreferences         `json:"preferences,omitempty"`
	PrivilegeSet     *CurrentAccountPrivilegeSet `json:"privilegeSet,omitempty"`
	Privileges       *[]string                   `json:"privileges,omitempty"`
	RealName         *string                     `json:"realName,omitempty"`
	Username         *string                     `json:"username,omitempty"`
}

// CurrentAccountAccessLevel defines model for CurrentAccount.AccessLevel.
type CurrentAccountAccessLevel string

// CurrentAccountPrivilegeSet defines model for CurrentAccount.PrivilegeSet.
type CurrentAccountPrivilegeSet string

// CurrentAuthorization defines model for CurrentAuthorization.
type CurrentAuthorization struct {
	Account            *CurrentAccount                         `json:"account,omitempty"`
	AuthenticationType *CurrentAuthorizationAuthenticationType `json:"authenticationType,omitempty"`
	Sites              *[]Site                                 `json:"sites,omitempty"`
}

// CurrentAuthorizationAuthenticationType defines model for CurrentAuthorization.AuthenticationType.
type CurrentAuthorizationAuthenticationType string

// DataRoamingSetting defines model for DataRoamingSetting.
type DataRoamingSetting string

// DatabasePassword defines model for DatabasePassword.
type DatabasePassword struct {
	Password string `json:"password"`
}

// DayOfWeek defines model for DayOfWeek.
type DayOfWeek string

// DeleteUserCommand defines model for DeleteUserCommand.
type DeleteUserCommand struct {
	DeleteAllUsers *bool   `json:"deleteAllUsers,omitempty"`
	ForceDeletion  *bool   `json:"forceDeletion,omitempty"`
	UserName       *string `json:"userName,omitempty"`
}

// Department defines model for Department.
type Department struct {
	Id   *string `json:"id,omitempty"`
	Name string  `json:"name"`
}

// DepartmentsSearchResults defines model for DepartmentsSearchResults.
type DepartmentsSearchResults struct {
	Results    *[]Department `json:"results,omitempty"`
	TotalCount *int          `json:"totalCount,omitempty"`
}

// DeploymentTask defines model for DeploymentTask.
type DeploymentTask struct {
	ComputerId   *string `json:"computerId,omitempty"`
	ComputerName *string `json:"computerName,omitempty"`
	Id           *string `json:"id,omitempty"`

	// Status of this Jamf Connect deployment task. "Command" below refers to an `InstallEnterpriseApplication` command. Tasks that are not finished (i.e., `COMPLETE` or `GAVE_UP`) are evaluated once every thirty minutes, so the status value for a device may lag behind a successful Jamf Connect package install up to thirty minutes. * `COMMAND_QUEUED` - command has been queued * `NO_COMMAND` - command has not yet been queued * `PENDING_MANIFEST` - task is waiting to obtain a valid package manifest before a command can be queued * `COMPLETE` - command has been completed successfully * `GAVE_UP` - the command failed with an error or the device did not process it in a reasonable amount of time * `UNKNOWN` - unknown; tasks in this state will be evaluated
	Status  *DeploymentTaskStatus `json:"status,omitempty"`
	Updated *time.Time            `json:"updated,omitempty"`
	Version *string               `json:"version,omitempty"`
}

// Status of this Jamf Connect deployment task. "Command" below refers to an `InstallEnterpriseApplication` command. Tasks that are not finished (i.e., `COMPLETE` or `GAVE_UP`) are evaluated once every thirty minutes, so the status value for a device may lag behind a successful Jamf Connect package install up to thirty minutes. * `COMMAND_QUEUED` - command has been queued * `NO_COMMAND` - command has not yet been queued * `PENDING_MANIFEST` - task is waiting to obtain a valid package manifest before a command can be queued * `COMPLETE` - command has been completed successfully * `GAVE_UP` - the command failed with an error or the device did not process it in a reasonable amount of time * `UNKNOWN` - unknown; tasks in this state will be evaluated
type DeploymentTaskStatus string

// DeploymentTaskSearchResults defines model for DeploymentTaskSearchResults.
type DeploymentTaskSearchResults struct {
	Results    *[]DeploymentTask `json:"results,omitempty"`
	TotalCount *int              `json:"totalCount,omitempty"`
}

// An old Cloud Identity Provider configuration for requests
type DeprecatedConfigurationRequest struct {
	// Mappings configurations request for Ldap Cloud Identity Provider configuration
	Mappings *CloudLdapMappingsRequest `json:"mappings,omitempty"`

	// An old Cloud Identity Provider LDAP server configuration for requests
	Server DeprecatedServerRequest `json:"server"`
}

// An old Cloud Identity Provider configuration for responses
type DeprecatedConfigurationResponse struct {
	Id string `json:"id"`

	// Mappings configuration response for Ldap Cloud Identity Provider configuration
	Mappings *CloudLdapMappingsResponse `json:"mappings,omitempty"`

	// An old Cloud Identity Provider LDAP server configuration for responses
	Server DeprecatedServerResponse `json:"server"`
}

// A list with old Cloud Identity Providers configurations
type DeprecatedConfigurationSearchResults struct {
	Results    *[]DeprecatedConfigurationResponse `json:"results,omitempty"`
	TotalCount *int                               `json:"totalCount,omitempty"`
}

// An old Cloud Identity Provider configuration for updates
type DeprecatedConfigurationUpdate struct {
	// Mappings configurations request for Ldap Cloud Identity Provider configuration
	Mappings *CloudLdapMappingsRequest `json:"mappings,omitempty"`

	// An old Cloud Identity Provider LDAP server configuration for updates
	Server DeprecatedServerUpdate `json:"server"`
}

// An old Cloud Identity Provider LDAP server configuration for requests
type DeprecatedServerRequest struct {
	ConnectionTimeout int                                   `json:"connectionTimeout"`
	ConnectionType    DeprecatedServerRequestConnectionType `json:"connectionType"`
	DisplayName       string                                `json:"displayName"`
	DomainName        string                                `json:"domainName"`
	Enabled           bool                                  `json:"enabled"`

	// Request with the Base64-encoded keystore file
	Keystore      CloudLdapKeystoreFile `json:"keystore"`
	Port          int                   `json:"port"`
	ProviderName  string                `json:"providerName"`
	SearchTimeout int                   `json:"searchTimeout"`
	ServerUrl     string                `json:"serverUrl"`
	UseWildcards  bool                  `json:"useWildcards"`
}

// DeprecatedServerRequestConnectionType defines model for DeprecatedServerRequest.ConnectionType.
type DeprecatedServerRequestConnectionType string

// An old Cloud Identity Provider LDAP server configuration for responses
type DeprecatedServerResponse struct {
	ConnectionTimeout *int                                    `json:"connectionTimeout,omitempty"`
	ConnectionType    *DeprecatedServerResponseConnectionType `json:"connectionType,omitempty"`
	DisplayName       *string                                 `json:"displayName,omitempty"`
	DomainName        *string                                 `json:"domainName,omitempty"`
	Enabled           *bool                                   `json:"enabled,omitempty"`
	Id                *string                                 `json:"id,omitempty"`

	// Response with keystore information
	Keystore      *CloudLdapKeystore `json:"keystore,omitempty"`
	Port          *int               `json:"port,omitempty"`
	ProviderName  *string            `json:"providerName,omitempty"`
	SearchTimeout *int               `json:"searchTimeout,omitempty"`
	ServerUrl     *string            `json:"serverUrl,omitempty"`
	UseWildcards  *bool              `json:"useWildcards,omitempty"`
}

// DeprecatedServerResponseConnectionType defines model for DeprecatedServerResponse.ConnectionType.
type DeprecatedServerResponseConnectionType string

// An old Cloud Identity Provider LDAP server configuration for updates
type DeprecatedServerUpdate struct {
	ConnectionTimeout int                                  `json:"connectionTimeout"`
	ConnectionType    DeprecatedServerUpdateConnectionType `json:"connectionType"`
	DisplayName       string                               `json:"displayName"`
	DomainName        string                               `json:"domainName"`
	Enabled           bool                                 `json:"enabled"`
	Id                string                               `json:"id"`

	// Request with the Base64-encoded keystore file
	Keystore      *CloudLdapKeystoreFile `json:"keystore,omitempty"`
	Port          int                    `json:"port"`
	ProviderName  string                 `json:"providerName"`
	SearchTimeout int                    `json:"searchTimeout"`
	ServerUrl     string                 `json:"serverUrl"`
	UseWildcards  bool                   `json:"useWildcards"`
}

// DeprecatedServerUpdateConnectionType defines model for DeprecatedServerUpdate.ConnectionType.
type DeprecatedServerUpdateConnectionType string

// DeviceCommunicationSettings defines model for DeviceCommunicationSettings.
type DeviceCommunicationSettings struct {
	AutoRenewComputerMdmProfileWhenCaRenewed                      *bool                                                                   `json:"autoRenewComputerMdmProfileWhenCaRenewed,omitempty"`
	AutoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring     *bool                                                                   `json:"autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring,omitempty"`
	AutoRenewMobileDeviceMdmProfileWhenCaRenewed                  *bool                                                                   `json:"autoRenewMobileDeviceMdmProfileWhenCaRenewed,omitempty"`
	AutoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring *bool                                                                   `json:"autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring,omitempty"`
	MdmProfileComputerExpirationLimitInDays                       *DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDays     `json:"mdmProfileComputerExpirationLimitInDays,omitempty"`
	MdmProfileMobileDeviceExpirationLimitInDays                   *DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDays `json:"mdmProfileMobileDeviceExpirationLimitInDays,omitempty"`
}

// DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDays defines model for DeviceCommunicationSettings.MdmProfileComputerExpirationLimitInDays.
type DeviceCommunicationSettingsMdmProfileComputerExpirationLimitInDays int

// DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDays defines model for DeviceCommunicationSettings.MdmProfileMobileDeviceExpirationLimitInDays.
type DeviceCommunicationSettingsMdmProfileMobileDeviceExpirationLimitInDays int

// Device compliance information record
type DeviceComplianceInformation struct {
	// If device is applicable for compliance calculation
	Applicable *bool `json:"applicable,omitempty"`

	// Device compliance state. Possible values are:
	// * `UNKNOWN` for unknow compliance state, this usually means that the compliance state is being calculated,
	// * `NON_COMPLIANT` for non compliant state,
	// * `COMPLIANT` for compliant state
	ComplianceState *DeviceComplianceInformationComplianceState `json:"complianceState,omitempty"`

	// Name of the compliance vendor
	ComplianceVendor *string `json:"complianceVendor,omitempty"`

	// ID of the device
	DeviceId *string `json:"deviceId,omitempty"`
}

// Device compliance state. Possible values are:
// * `UNKNOWN` for unknow compliance state, this usually means that the compliance state is being calculated,
// * `NON_COMPLIANT` for non compliant state,
// * `COMPLIANT` for compliant state
type DeviceComplianceInformationComplianceState string

// DeviceEnrollmentDevice defines model for DeviceEnrollmentDevice.
type DeviceEnrollmentDevice struct {
	AssetTag                          *string                               `json:"assetTag,omitempty"`
	Color                             *string                               `json:"color,omitempty"`
	Description                       *string                               `json:"description,omitempty"`
	DeviceAssignedDate                *string                               `json:"deviceAssignedDate,omitempty"`
	DeviceEnrollmentProgramInstanceId *string                               `json:"deviceEnrollmentProgramInstanceId,omitempty"`
	Id                                *string                               `json:"id,omitempty"`
	Model                             *string                               `json:"model,omitempty"`
	PrestageId                        *string                               `json:"prestageId,omitempty"`
	ProfileAssignTime                 *string                               `json:"profileAssignTime,omitempty"`
	ProfilePushTime                   *string                               `json:"profilePushTime,omitempty"`
	ProfileStatus                     *DeviceEnrollmentDeviceProfileStatus  `json:"profileStatus,omitempty"`
	SerialNumber                      *string                               `json:"serialNumber,omitempty"`
	SyncState                         *AssignRemoveProfileResponseSyncState `json:"syncState,omitempty"`
}

// DeviceEnrollmentDeviceProfileStatus defines model for DeviceEnrollmentDevice.ProfileStatus.
type DeviceEnrollmentDeviceProfileStatus string

// DeviceEnrollmentDeviceSearchResults defines model for DeviceEnrollmentDeviceSearchResults.
type DeviceEnrollmentDeviceSearchResults struct {
	Results    *[]DeviceEnrollmentDevice `json:"results,omitempty"`
	TotalCount *int                      `json:"totalCount,omitempty"`
}

// DeviceEnrollmentDisownBody defines model for DeviceEnrollmentDisownBody.
type DeviceEnrollmentDisownBody struct {
	Devices *[]string `json:"devices,omitempty"`
}

// DeviceEnrollmentDisownResponse defines model for DeviceEnrollmentDisownResponse.
type DeviceEnrollmentDisownResponse struct {
	Devices *DeviceEnrollmentDisownResponse_Devices `json:"devices,omitempty"`
}

// DeviceEnrollmentDisownResponse_Devices defines model for DeviceEnrollmentDisownResponse.Devices.
type DeviceEnrollmentDisownResponse_Devices struct {
	AdditionalProperties map[string]string `json:"-"`
}

// DeviceEnrollmentInstance defines model for DeviceEnrollmentInstance.
type DeviceEnrollmentInstance struct {
	AdminId               *string `json:"adminId,omitempty"`
	Id                    *string `json:"id,omitempty"`
	Name                  string  `json:"name"`
	OrgAddress            *string `json:"orgAddress,omitempty"`
	OrgEmail              *string `json:"orgEmail,omitempty"`
	OrgName               *string `json:"orgName,omitempty"`
	OrgPhone              *string `json:"orgPhone,omitempty"`
	ServerName            *string `json:"serverName,omitempty"`
	ServerUuid            *string `json:"serverUuid,omitempty"`
	SiteId                *string `json:"siteId,omitempty"`
	SupervisionIdentityId *string `json:"supervisionIdentityId,omitempty"`
	TokenExpirationDate   *string `json:"tokenExpirationDate,omitempty"`
}

// DeviceEnrollmentInstanceSearchResults defines model for DeviceEnrollmentInstanceSearchResults.
type DeviceEnrollmentInstanceSearchResults struct {
	Results    *[]DeviceEnrollmentInstance `json:"results,omitempty"`
	TotalCount *int                        `json:"totalCount,omitempty"`
}

// DeviceEnrollmentInstanceSyncStatus defines model for DeviceEnrollmentInstanceSyncStatus.
type DeviceEnrollmentInstanceSyncStatus struct {
	InstanceId *string `json:"instanceId,omitempty"`
	SyncState  *string `json:"syncState,omitempty"`
	Timestamp  *string `json:"timestamp,omitempty"`
}

// DeviceEnrollmentPrestage defines model for DeviceEnrollmentPrestage.
type DeviceEnrollmentPrestage struct {
	// The Base64 encoded PEM Certificate
	AnchorCertificates                *[]string                                `json:"anchorCertificates,omitempty"`
	AuthenticationPrompt              string                                   `json:"authenticationPrompt"`
	Department                        string                                   `json:"department"`
	DeviceEnrollmentProgramInstanceId int                                      `json:"deviceEnrollmentProgramInstanceId"`
	DisplayName                       string                                   `json:"displayName"`
	EnrollmentCustomizationId         *int                                     `json:"enrollmentCustomizationId,omitempty"`
	EnrollmentSiteId                  int                                      `json:"enrollmentSiteId"`
	IsDefaultPrestage                 bool                                     `json:"isDefaultPrestage"`
	IsEnableDeviceBasedActivationLock bool                                     `json:"isEnableDeviceBasedActivationLock"`
	IsKeepExistingLocationInformation bool                                     `json:"isKeepExistingLocationInformation"`
	IsKeepExistingSiteMembership      bool                                     `json:"isKeepExistingSiteMembership"`
	IsMandatory                       bool                                     `json:"isMandatory"`
	IsMdmRemovable                    bool                                     `json:"isMdmRemovable"`
	IsPreventActivationLock           bool                                     `json:"isPreventActivationLock"`
	IsRequireAuthentication           bool                                     `json:"isRequireAuthentication"`
	LocationInformation               LocationInformation                      `json:"locationInformation"`
	PurchasingInformation             PrestagePurchasingInformation            `json:"purchasingInformation"`
	SkipSetupItems                    *DeviceEnrollmentPrestage_SkipSetupItems `json:"skipSetupItems,omitempty"`
	SupportEmailAddress               string                                   `json:"supportEmailAddress"`
	SupportPhoneNumber                string                                   `json:"supportPhoneNumber"`
}

// DeviceEnrollmentPrestage_SkipSetupItems defines model for DeviceEnrollmentPrestage.SkipSetupItems.
type DeviceEnrollmentPrestage_SkipSetupItems struct {
	AdditionalProperties map[string]bool `json:"-"`
}

// DeviceEnrollmentPrestageV2 defines model for DeviceEnrollmentPrestageV2.
type DeviceEnrollmentPrestageV2 struct {
	// The Base64 encoded PEM Certificate
	AnchorCertificates                *[]string                                  `json:"anchorCertificates,omitempty"`
	AuthenticationPrompt              string                                     `json:"authenticationPrompt"`
	AutoAdvanceSetup                  bool                                       `json:"autoAdvanceSetup"`
	DefaultPrestage                   bool                                       `json:"defaultPrestage"`
	Department                        string                                     `json:"department"`
	DeviceEnrollmentProgramInstanceId string                                     `json:"deviceEnrollmentProgramInstanceId"`
	DisplayName                       string                                     `json:"displayName"`
	EnableDeviceBasedActivationLock   bool                                       `json:"enableDeviceBasedActivationLock"`
	EnrollmentCustomizationId         *string                                    `json:"enrollmentCustomizationId,omitempty"`
	EnrollmentSiteId                  string                                     `json:"enrollmentSiteId"`
	KeepExistingLocationInformation   bool                                       `json:"keepExistingLocationInformation"`
	KeepExistingSiteMembership        bool                                       `json:"keepExistingSiteMembership"`
	Language                          *string                                    `json:"language,omitempty"`
	LocationInformation               LocationInformationV2                      `json:"locationInformation"`
	Mandatory                         bool                                       `json:"mandatory"`
	MdmRemovable                      bool                                       `json:"mdmRemovable"`
	PreventActivationLock             bool                                       `json:"preventActivationLock"`
	PurchasingInformation             PrestagePurchasingInformationV2            `json:"purchasingInformation"`
	Region                            *string                                    `json:"region,omitempty"`
	RequireAuthentication             bool                                       `json:"requireAuthentication"`
	SkipSetupItems                    *DeviceEnrollmentPrestageV2_SkipSetupItems `json:"skipSetupItems,omitempty"`
	SupportEmailAddress               string                                     `json:"supportEmailAddress"`
	SupportPhoneNumber                string                                     `json:"supportPhoneNumber"`
}

// DeviceEnrollmentPrestageV2_SkipSetupItems defines model for DeviceEnrollmentPrestageV2.SkipSetupItems.
type DeviceEnrollmentPrestageV2_SkipSetupItems struct {
	AdditionalProperties map[string]bool `json:"-"`
}

// DeviceEnrollmentToken defines model for DeviceEnrollmentToken.
type DeviceEnrollmentToken struct {
	// The base 64 encoded token
	EncodedToken *[]byte `json:"encodedToken,omitempty"`

	// Optional name of the token to be saved, if no name is provided one will be auto-generated
	TokenFileName *string `json:"tokenFileName,omitempty"`
}

// DiagnosticSubmissionSetting defines model for DiagnosticSubmissionSetting.
type DiagnosticSubmissionSetting string

// Ebook defines model for Ebook.
type Ebook struct {
	Author     *string `json:"author,omitempty"`
	CategoryId *string `json:"categoryId,omitempty"`

	// If true, it will be automatically installed
	DeployAsManaged      *bool      `json:"deployAsManaged,omitempty"`
	Free                 *bool      `json:"free,omitempty"`
	Id                   *string    `json:"id,omitempty"`
	InstallAutomatically *bool      `json:"installAutomatically,omitempty"`
	Kind                 *EbookKind `json:"kind,omitempty"`
	Name                 *string    `json:"name,omitempty"`
	SiteId               *string    `json:"siteId,omitempty"`
	Url                  *string    `json:"url,omitempty"`
	Version              *string    `json:"version,omitempty"`
}

// EbookKind defines model for Ebook.Kind.
type EbookKind string

// EbookExclusions defines model for EbookExclusions.
type EbookExclusions struct {
	BuildingIds          *[]string         `json:"buildingIds,omitempty"`
	ComputerGroupIds     *[]string         `json:"computerGroupIds,omitempty"`
	ComputerIds          *[]string         `json:"computerIds,omitempty"`
	DepartmentIds        *[]string         `json:"departmentIds,omitempty"`
	Limitations          *EbookLimitations `json:"limitations,omitempty"`
	MobileDeviceGroupIds *[]string         `json:"mobileDeviceGroupIds,omitempty"`
	MobileDeviceIds      *[]string         `json:"mobileDeviceIds,omitempty"`
	UserGroupIds         *[]string         `json:"userGroupIds,omitempty"`
	UserIds              *[]string         `json:"userIds,omitempty"`
}

// EbookLimitations defines model for EbookLimitations.
type EbookLimitations struct {
	NetworkSegments *[]string `json:"networkSegments,omitempty"`
	UserGroups      *[]string `json:"userGroups,omitempty"`
	Users           *[]struct {
		Name *string `json:"name,omitempty"`
	} `json:"users,omitempty"`
}

// EbookScope defines model for EbookScope.
type EbookScope struct {
	AllComputers         *bool             `json:"allComputers,omitempty"`
	AllMobileDevices     *bool             `json:"allMobileDevices,omitempty"`
	AllUsers             *bool             `json:"allUsers,omitempty"`
	BuildingIds          *[]string         `json:"buildingIds,omitempty"`
	ClassroomIds         *[]string         `json:"classroomIds,omitempty"`
	ComputerGroupIds     *[]string         `json:"computerGroupIds,omitempty"`
	ComputerIds          *[]string         `json:"computerIds,omitempty"`
	DepartmentIds        *[]string         `json:"departmentIds,omitempty"`
	Exclusions           *EbookExclusions  `json:"exclusions,omitempty"`
	Limitations          *EbookLimitations `json:"limitations,omitempty"`
	MobileDeviceGroupIds *[]string         `json:"mobileDeviceGroupIds,omitempty"`
	MobileDeviceIds      *[]string         `json:"mobileDeviceIds,omitempty"`
	UserGroupIds         *[]string         `json:"userGroupIds,omitempty"`
	UserIds              *[]string         `json:"userIds,omitempty"`
}

// EbookSearchResults defines model for EbookSearchResults.
type EbookSearchResults struct {
	Results    *[]Ebook `json:"results,omitempty"`
	TotalCount *int     `json:"totalCount,omitempty"`
}

// EnableLostModeCommand defines model for EnableLostModeCommand.
type EnableLostModeCommand struct {
	LostModeFootnote *string `json:"lostModeFootnote,omitempty"`
	LostModeMessage  *string `json:"lostModeMessage,omitempty"`
	LostModePhone    *string `json:"lostModePhone,omitempty"`
}

// Engage defines model for Engage.
type Engage struct {
	IsEnabled *bool `json:"isEnabled,omitempty"`
}

// EnrollmentAccessGroup defines model for EnrollmentAccessGroup.
type EnrollmentAccessGroup struct {
	Id                           *string `json:"id,omitempty"`
	IsEnableEnterpriseEnrollment *bool   `json:"isEnableEnterpriseEnrollment,omitempty"`
	IsEnablePersonalEnrollment   *bool   `json:"isEnablePersonalEnrollment,omitempty"`
	IsRequireEula                *bool   `json:"isRequireEula,omitempty"`
	LdapServerId                 *int    `json:"ldapServerId,omitempty"`
	Name                         *string `json:"name,omitempty"`
	SiteId                       *int    `json:"siteId,omitempty"`
}

// EnrollmentAccessGroupPreview defines model for EnrollmentAccessGroupPreview.
type EnrollmentAccessGroupPreview struct {
	EnterpriseEnrollmentEnabled *bool `json:"enterpriseEnrollmentEnabled,omitempty"`

	// LDAP Group ID
	GroupId *string `json:"groupId,omitempty"`

	// Autogenerated ID
	Id                        *string `json:"id,omitempty"`
	LdapServerId              string  `json:"ldapServerId"`
	Name                      string  `json:"name"`
	PersonalEnrollmentEnabled *bool   `json:"personalEnrollmentEnabled,omitempty"`
	RequireEula               *bool   `json:"requireEula,omitempty"`
	SiteId                    *string `json:"siteId,omitempty"`
}

// EnrollmentAccessGroupV2 defines model for EnrollmentAccessGroupV2.
type EnrollmentAccessGroupV2 struct {
	AccountDrivenUserEnrollmentEnabled *bool `json:"accountDrivenUserEnrollmentEnabled,omitempty"`
	EnterpriseEnrollmentEnabled        *bool `json:"enterpriseEnrollmentEnabled,omitempty"`

	// Group ID.
	Id                        *string `json:"id,omitempty"`
	LdapServerId              *string `json:"ldapServerId,omitempty"`
	Name                      *string `json:"name,omitempty"`
	PersonalEnrollmentEnabled *bool   `json:"personalEnrollmentEnabled,omitempty"`
	RequireEula               *bool   `json:"requireEula,omitempty"`
	SiteId                    *string `json:"siteId,omitempty"`
}

// EnrollmentCustomization defines model for EnrollmentCustomization.
type EnrollmentCustomization struct {
	Description                             string                                  `json:"description"`
	DisplayName                             string                                  `json:"displayName"`
	EnrollmentCustomizationBrandingSettings EnrollmentCustomizationBrandingSettings `json:"enrollmentCustomizationBrandingSettings"`
	SiteId                                  int                                     `json:"siteId"`
}

// EnrollmentCustomizationBrandingSettings defines model for EnrollmentCustomizationBrandingSettings.
type EnrollmentCustomizationBrandingSettings struct {
	BackgroundColor string `json:"backgroundColor"`
	ButtonColor     string `json:"buttonColor"`
	ButtonTextColor string `json:"buttonTextColor"`
	IconUrl         string `json:"iconUrl"`
	TextColor       string `json:"textColor"`
}

// EnrollmentCustomizationDependencies defines model for EnrollmentCustomizationDependencies.
type EnrollmentCustomizationDependencies struct {
	Dependencies *[]EnrollmentCustomizationDependency `json:"dependencies,omitempty"`
}

// EnrollmentCustomizationDependency defines model for EnrollmentCustomizationDependency.
type EnrollmentCustomizationDependency struct {
	HumanReadableName *string `json:"humanReadableName,omitempty"`
	Hyperlink         *string `json:"hyperlink,omitempty"`
	Name              *string `json:"name,omitempty"`
}

// EnrollmentCustomizationLdapGroupAccess defines model for EnrollmentCustomizationLdapGroupAccess.
type EnrollmentCustomizationLdapGroupAccess struct {
	GroupName    *string `json:"groupName,omitempty"`
	LdapServerId *int    `json:"ldapServerId,omitempty"`
}

// EnrollmentCustomizationPanel defines model for EnrollmentCustomizationPanel.
type EnrollmentCustomizationPanel struct {
	DisplayName string `json:"displayName"`
	Rank        int    `json:"rank"`
}

// EnrollmentCustomizationPanelLdapAuth defines model for EnrollmentCustomizationPanelLdapAuth.
type EnrollmentCustomizationPanelLdapAuth struct {
	// Embedded struct due to allOf(#/components/schemas/EnrollmentCustomizationPanel)
	EnrollmentCustomizationPanel `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	BackButtonText     string                                    `json:"backButtonText"`
	ContinueButtonText string                                    `json:"continueButtonText"`
	LdapGroupAccess    *[]EnrollmentCustomizationLdapGroupAccess `json:"ldapGroupAccess,omitempty"`
	PasswordLabel      string                                    `json:"passwordLabel"`
	Title              string                                    `json:"title"`
	UsernameLabel      string                                    `json:"usernameLabel"`
}

// EnrollmentCustomizationPanelList defines model for EnrollmentCustomizationPanelList.
type EnrollmentCustomizationPanelList struct {
	Panels *[]GetEnrollmentCustomizationPanel `json:"panels,omitempty"`
}

// EnrollmentCustomizationPanelSsoAuth defines model for EnrollmentCustomizationPanelSsoAuth.
type EnrollmentCustomizationPanelSsoAuth struct {
	// Embedded struct due to allOf(#/components/schemas/EnrollmentCustomizationPanel)
	EnrollmentCustomizationPanel `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	GroupEnrollmentAccessName      string `json:"groupEnrollmentAccessName"`
	IsGroupEnrollmentAccessEnabled bool   `json:"isGroupEnrollmentAccessEnabled"`
	IsUseJamfConnect               bool   `json:"isUseJamfConnect"`
	LongNameAttribute              string `json:"longNameAttribute"`
	ShortNameAttribute             string `json:"shortNameAttribute"`
}

// EnrollmentCustomizationPanelText defines model for EnrollmentCustomizationPanelText.
type EnrollmentCustomizationPanelText struct {
	// Embedded struct due to allOf(#/components/schemas/EnrollmentCustomizationPanel)
	EnrollmentCustomizationPanel `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	BackButtonText     string  `json:"backButtonText"`
	Body               string  `json:"body"`
	ContinueButtonText string  `json:"continueButtonText"`
	Subtext            *string `json:"subtext,omitempty"`
	Title              string  `json:"title"`
}

// EnrollmentCustomizationSearchResults defines model for EnrollmentCustomizationSearchResults.
type EnrollmentCustomizationSearchResults struct {
	Results    *[]GetEnrollmentCustomization `json:"results,omitempty"`
	TotalCount *int                          `json:"totalCount,omitempty"`
}

// EnrollmentCustomizationSearchResultsV2 defines model for EnrollmentCustomizationSearchResultsV2.
type EnrollmentCustomizationSearchResultsV2 struct {
	Results    *[]EnrollmentCustomizationV2 `json:"results,omitempty"`
	TotalCount *int                         `json:"totalCount,omitempty"`
}

// EnrollmentCustomizationV2 defines model for EnrollmentCustomizationV2.
type EnrollmentCustomizationV2 struct {
	Description                             string                                  `json:"description"`
	DisplayName                             string                                  `json:"displayName"`
	EnrollmentCustomizationBrandingSettings EnrollmentCustomizationBrandingSettings `json:"enrollmentCustomizationBrandingSettings"`
	Id                                      *string                                 `json:"id,omitempty"`
	SiteId                                  *string                                 `json:"siteId,omitempty"`
}

// EnrollmentMethod defines model for EnrollmentMethod.
type EnrollmentMethod struct {
	Id         *string `json:"id,omitempty"`
	ObjectName *string `json:"objectName,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
}

// EnrollmentProcessTextObject defines model for EnrollmentProcessTextObject.
type EnrollmentProcessTextObject struct {
	CertificateButton                *string `json:"certificateButton,omitempty"`
	CertificateProfileDescription    *string `json:"certificateProfileDescription,omitempty"`
	CertificateProfileName           *string `json:"certificateProfileName,omitempty"`
	CertificateText                  *string `json:"certificateText,omitempty"`
	CheckEnrollmentMessage           *string `json:"checkEnrollmentMessage,omitempty"`
	CheckNowButton                   *string `json:"checkNowButton,omitempty"`
	CompleteMessage                  *string `json:"completeMessage,omitempty"`
	DeviceClassButton                *string `json:"deviceClassButton,omitempty"`
	DeviceClassDescription           *string `json:"deviceClassDescription,omitempty"`
	DeviceClassEnterprise            *string `json:"deviceClassEnterprise,omitempty"`
	DeviceClassEnterpriseDescription *string `json:"deviceClassEnterpriseDescription,omitempty"`
	DeviceClassPersonal              *string `json:"deviceClassPersonal,omitempty"`
	DeviceClassPersonalDescription   *string `json:"deviceClassPersonalDescription,omitempty"`
	EnterpriseButton                 *string `json:"enterpriseButton,omitempty"`
	EnterpriseEula                   *string `json:"enterpriseEula,omitempty"`
	EnterprisePending                *string `json:"enterprisePending,omitempty"`
	EnterpriseProfileDescription     *string `json:"enterpriseProfileDescription,omitempty"`
	EnterpriseProfileName            *string `json:"enterpriseProfileName,omitempty"`
	EnterpriseText                   *string `json:"enterpriseText,omitempty"`
	EulaButton                       *string `json:"eulaButton,omitempty"`
	FailedMessage                    *string `json:"failedMessage,omitempty"`
	LanguageCode                     *string `json:"languageCode,omitempty"`
	LoginButton                      *string `json:"loginButton,omitempty"`
	LoginDescription                 *string `json:"loginDescription,omitempty"`
	LogoutButton                     *string `json:"logoutButton,omitempty"`
	Name                             *string `json:"name,omitempty"`
	Password                         *string `json:"password,omitempty"`
	PersonalButton                   *string `json:"personalButton,omitempty"`
	PersonalEula                     *string `json:"personalEula,omitempty"`
	PersonalProfileDescription       *string `json:"personalProfileDescription,omitempty"`
	PersonalProfileName              *string `json:"personalProfileName,omitempty"`
	PersonalText                     *string `json:"personalText,omitempty"`
	QuickAddButton                   *string `json:"quickAddButton,omitempty"`
	QuickAddName                     *string `json:"quickAddName,omitempty"`
	QuickAddPending                  *string `json:"quickAddPending,omitempty"`
	QuickAddText                     *string `json:"quickAddText,omitempty"`
	SiteDescription                  *string `json:"siteDescription,omitempty"`
	Title                            *string `json:"title,omitempty"`
	TryAgainButton                   *string `json:"tryAgainButton,omitempty"`
	UserEnrollmentButton             *string `json:"userEnrollmentButton,omitempty"`
	UserEnrollmentProfileDescription *string `json:"userEnrollmentProfileDescription,omitempty"`
	UserEnrollmentProfileName        *string `json:"userEnrollmentProfileName,omitempty"`
	UserEnrollmentText               *string `json:"userEnrollmentText,omitempty"`
	Username                         *string `json:"username,omitempty"`
}

// EnrollmentSettings defines model for EnrollmentSettings.
type EnrollmentSettings struct {
	DeveloperCertificateIdentity        *CertificateIdentityV1                         `json:"developerCertificateIdentity,omitempty"`
	DeveloperCertificateIdentityDetails *CertificateDetails                            `json:"developerCertificateIdentityDetails,omitempty"`
	FlushMdmCommandsOnReenroll          EnrollmentSettingsFlushMdmCommandsOnReenroll   `json:"flushMdmCommandsOnReenroll"`
	IsAllowSshOnlyManagementAccount     *bool                                          `json:"isAllowSshOnlyManagementAccount,omitempty"`
	IsCreateManagementAccount           *bool                                          `json:"isCreateManagementAccount,omitempty"`
	IsEnableIosEnterpriseEnrollment     *bool                                          `json:"isEnableIosEnterpriseEnrollment,omitempty"`
	IsEnableIosPersonalEnrollment       *bool                                          `json:"isEnableIosPersonalEnrollment,omitempty"`
	IsEnabledMacosEnterpriseEnrollment  bool                                           `json:"isEnabledMacosEnterpriseEnrollment"`
	IsEnsureSshRunning                  *bool                                          `json:"isEnsureSshRunning,omitempty"`
	IsFlushExtensionAttributes          *bool                                          `json:"isFlushExtensionAttributes,omitempty"`
	IsFlushLocationHistoryInformation   *bool                                          `json:"isFlushLocationHistoryInformation,omitempty"`
	IsFlushLocationInformation          *bool                                          `json:"isFlushLocationInformation,omitempty"`
	IsFlushPolicyHistory                *bool                                          `json:"isFlushPolicyHistory,omitempty"`
	IsHideManagementAccount             *bool                                          `json:"isHideManagementAccount,omitempty"`
	IsInstallSingleProfile              *bool                                          `json:"isInstallSingleProfile,omitempty"`
	IsLaunchSelfService                 *bool                                          `json:"isLaunchSelfService,omitempty"`
	IsRestrictReenrollment              *bool                                          `json:"isRestrictReenrollment,omitempty"`
	IsSignQuickAdd                      *bool                                          `json:"isSignQuickAdd,omitempty"`
	IsSigningMdmProfileEnabled          *bool                                          `json:"isSigningMdmProfileEnabled,omitempty"`
	ManagementPassword                  *string                                        `json:"managementPassword,omitempty"`
	ManagementUsername                  string                                         `json:"managementUsername"`
	MdmSigningCertificate               *MdmSigningCertificate                         `json:"mdmSigningCertificate,omitempty"`
	MdmSigningCertificateDetails        *CertificateDetails                            `json:"mdmSigningCertificateDetails,omitempty"`
	PasswordType                        EnrollmentSettingsPasswordType                 `json:"passwordType"`
	PersonalDeviceEnrollmentType        EnrollmentSettingsPersonalDeviceEnrollmentType `json:"personalDeviceEnrollmentType"`
	RandomPasswordLength                *int32                                         `json:"randomPasswordLength,omitempty"`
}

// EnrollmentSettingsFlushMdmCommandsOnReenroll defines model for EnrollmentSettings.FlushMdmCommandsOnReenroll.
type EnrollmentSettingsFlushMdmCommandsOnReenroll string

// EnrollmentSettingsPasswordType defines model for EnrollmentSettings.PasswordType.
type EnrollmentSettingsPasswordType string

// EnrollmentSettingsPersonalDeviceEnrollmentType defines model for EnrollmentSettings.PersonalDeviceEnrollmentType.
type EnrollmentSettingsPersonalDeviceEnrollmentType string

// EnrollmentSettingsV2 defines model for EnrollmentSettingsV2.
type EnrollmentSettingsV2 struct {
	AccountDrivenUserEnrollmentEnabled  *bool                                             `json:"accountDrivenUserEnrollmentEnabled,omitempty"`
	AllowSshOnlyManagementAccount       *bool                                             `json:"allowSshOnlyManagementAccount,omitempty"`
	CreateManagementAccount             *bool                                             `json:"createManagementAccount,omitempty"`
	DeveloperCertificateIdentity        *CertificateIdentityV2                            `json:"developerCertificateIdentity,omitempty"`
	DeveloperCertificateIdentityDetails *CertificateDetails                               `json:"developerCertificateIdentityDetails,omitempty"`
	EnsureSshRunning                    *bool                                             `json:"ensureSshRunning,omitempty"`
	FlushExtensionAttributes            *bool                                             `json:"flushExtensionAttributes,omitempty"`
	FlushLocationHistoryInformation     *bool                                             `json:"flushLocationHistoryInformation,omitempty"`
	FlushLocationInformation            *bool                                             `json:"flushLocationInformation,omitempty"`
	FlushMdmCommandsOnReenroll          *EnrollmentSettingsV2FlushMdmCommandsOnReenroll   `json:"flushMdmCommandsOnReenroll,omitempty"`
	FlushPolicyHistory                  *bool                                             `json:"flushPolicyHistory,omitempty"`
	HideManagementAccount               *bool                                             `json:"hideManagementAccount,omitempty"`
	InstallSingleProfile                *bool                                             `json:"installSingleProfile,omitempty"`
	IosEnterpriseEnrollmentEnabled      *bool                                             `json:"iosEnterpriseEnrollmentEnabled,omitempty"`
	IosPersonalEnrollmentEnabled        *bool                                             `json:"iosPersonalEnrollmentEnabled,omitempty"`
	LaunchSelfService                   *bool                                             `json:"launchSelfService,omitempty"`
	MacOsEnterpriseEnrollmentEnabled    *bool                                             `json:"macOsEnterpriseEnrollmentEnabled,omitempty"`
	ManagementPassword                  *string                                           `json:"managementPassword,omitempty"`
	ManagementPasswordSet               *bool                                             `json:"managementPasswordSet,omitempty"`
	ManagementUsername                  string                                            `json:"managementUsername"`
	MdmSigningCertificate               *CertificateIdentityV2                            `json:"mdmSigningCertificate,omitempty"`
	MdmSigningCertificateDetails        *CertificateDetails                               `json:"mdmSigningCertificateDetails,omitempty"`
	PasswordType                        *EnrollmentSettingsV2PasswordType                 `json:"passwordType,omitempty"`
	PersonalDeviceEnrollmentType        *EnrollmentSettingsV2PersonalDeviceEnrollmentType `json:"personalDeviceEnrollmentType,omitempty"`
	RandomPasswordLength                *int32                                            `json:"randomPasswordLength,omitempty"`
	RestrictReenrollment                *bool                                             `json:"restrictReenrollment,omitempty"`
	SignQuickAdd                        *bool                                             `json:"signQuickAdd,omitempty"`
	SigningMdmProfileEnabled            *bool                                             `json:"signingMdmProfileEnabled,omitempty"`
}

// EnrollmentSettingsV2FlushMdmCommandsOnReenroll defines model for EnrollmentSettingsV2.FlushMdmCommandsOnReenroll.
type EnrollmentSettingsV2FlushMdmCommandsOnReenroll string

// EnrollmentSettingsV2PasswordType defines model for EnrollmentSettingsV2.PasswordType.
type EnrollmentSettingsV2PasswordType string

// EnrollmentSettingsV2PersonalDeviceEnrollmentType defines model for EnrollmentSettingsV2.PersonalDeviceEnrollmentType.
type EnrollmentSettingsV2PersonalDeviceEnrollmentType string

// Field to be included in the export operation.
type ExportField struct {
	// Name which should be used for the label in the response - can be in any language. When null the fieldName itself will be used as the label.
	FieldLabelOverride *string `json:"fieldLabelOverride"`

	// English name of the field to be exported.
	FieldName *string `json:"fieldName,omitempty"`
}

// ExportParameters defines model for ExportParameters.
type ExportParameters struct {
	// Used to change default order or ignore some of the fields. When null or empty array, all fields will be exported.
	Fields   *[]ExportField `json:"fields"`
	Filter   *string        `json:"filter"`
	Page     *int           `json:"page"`
	PageSize *int           `json:"pageSize"`

	// Sorting criteria in the format: [<property>[:asc/desc]. Default direction when not stated is ascending.
	Sort *[]string `json:"sort"`
}

// ExtensionAttribute defines model for ExtensionAttribute.
type ExtensionAttribute struct {
	Id                                    *int                    `json:"id,omitempty"`
	IsExtensionAttributeCollectionAllowed *bool                   `json:"isExtensionAttributeCollectionAllowed,omitempty"`
	Name                                  *string                 `json:"name,omitempty"`
	Type                                  *ExtensionAttributeType `json:"type,omitempty"`
	Value                                 *[]string               `json:"value,omitempty"`
}

// ExtensionAttributeType defines model for ExtensionAttribute.Type.
type ExtensionAttributeType string

// ExtensionAttributeV2 defines model for ExtensionAttributeV2.
type ExtensionAttributeV2 struct {
	ExtensionAttributeCollectionAllowed *bool                     `json:"extensionAttributeCollectionAllowed,omitempty"`
	Id                                  *string                   `json:"id,omitempty"`
	Name                                *string                   `json:"name,omitempty"`
	Type                                *ExtensionAttributeV2Type `json:"type,omitempty"`
	Value                               *[]string                 `json:"value,omitempty"`
}

// ExtensionAttributeV2Type defines model for ExtensionAttributeV2.Type.
type ExtensionAttributeV2Type string

// ExternalRecipient defines model for ExternalRecipient.
type ExternalRecipient struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

// FileAttachment defines model for FileAttachment.
type FileAttachment struct {
	Id   *int    `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// FileAttachmentDelete defines model for FileAttachmentDelete.
type FileAttachmentDelete struct {
	Ids *[]int `json:"ids,omitempty"`
}

// FileAttachmentV2 defines model for FileAttachmentV2.
type FileAttachmentV2 struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// Filter defines model for Filter.
type Filter struct {
	Field    *string         `json:"field,omitempty"`
	Operator *FilterOperator `json:"operator,omitempty"`
	Value    *string         `json:"value,omitempty"`
}

// FilterOperator defines model for Filter.Operator.
type FilterOperator string

// FontPath defines model for FontPath.
type FontPath struct {
	Id   string `json:"id"`
	Path string `json:"path"`
}

// GetComputerPrestage defines model for GetComputerPrestage.
type GetComputerPrestage struct {
	// Embedded struct due to allOf(#/components/schemas/ComputerPrestage)
	ComputerPrestage `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id          *int    `json:"id,omitempty"`
	ProfileUUID *string `json:"profileUUID,omitempty"`
	SiteId      *int    `json:"siteId,omitempty"`
	VersionLock *int    `json:"versionLock,omitempty"`
}

// GetComputerPrestageV2 defines model for GetComputerPrestageV2.
type GetComputerPrestageV2 struct {
	// Embedded struct due to allOf(#/components/schemas/ComputerPrestageV2)
	ComputerPrestageV2 `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id          *string `json:"id,omitempty"`
	ProfileUuid *string `json:"profileUuid,omitempty"`
	SiteId      *string `json:"siteId,omitempty"`
	VersionLock *int    `json:"versionLock,omitempty"`
}

// GetEnrollmentCustomization defines model for GetEnrollmentCustomization.
type GetEnrollmentCustomization struct {
	// Embedded struct due to allOf(#/components/schemas/EnrollmentCustomization)
	EnrollmentCustomization `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id *int `json:"id,omitempty"`
}

// GetEnrollmentCustomizationPanel defines model for GetEnrollmentCustomizationPanel.
type GetEnrollmentCustomizationPanel struct {
	// Embedded struct due to allOf(#/components/schemas/EnrollmentCustomizationPanel)
	EnrollmentCustomizationPanel `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id   *int    `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

// GetEnrollmentCustomizationPanelLdapAuth defines model for GetEnrollmentCustomizationPanelLdapAuth.
type GetEnrollmentCustomizationPanelLdapAuth struct {
	// Embedded struct due to allOf(#/components/schemas/EnrollmentCustomizationPanelLdapAuth)
	EnrollmentCustomizationPanelLdapAuth `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id   *int    `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

// GetEnrollmentCustomizationPanelSsoAuth defines model for GetEnrollmentCustomizationPanelSsoAuth.
type GetEnrollmentCustomizationPanelSsoAuth struct {
	// Embedded struct due to allOf(#/components/schemas/EnrollmentCustomizationPanelSsoAuth)
	EnrollmentCustomizationPanelSsoAuth `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id   *int    `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

// GetEnrollmentCustomizationPanelText defines model for GetEnrollmentCustomizationPanelText.
type GetEnrollmentCustomizationPanelText struct {
	// Embedded struct due to allOf(#/components/schemas/EnrollmentCustomizationPanelText)
	EnrollmentCustomizationPanelText `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id   *int    `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

// GetMobileDevicePrestage defines model for GetMobileDevicePrestage.
type GetMobileDevicePrestage struct {
	// Embedded struct due to allOf(#/components/schemas/MobileDevicePrestage)
	MobileDevicePrestage `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id          *int    `json:"id,omitempty"`
	ProfileUUID *string `json:"profileUUID,omitempty"`
	SiteId      *int    `json:"siteId,omitempty"`
	VersionLock *int    `json:"versionLock,omitempty"`
}

// GetMobileDevicePrestageV2 defines model for GetMobileDevicePrestageV2.
type GetMobileDevicePrestageV2 struct {
	// Embedded struct due to allOf(#/components/schemas/MobileDevicePrestageV2)
	MobileDevicePrestageV2 `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id          *string `json:"id,omitempty"`
	ProfileUuid *string `json:"profileUuid,omitempty"`
	SiteId      *string `json:"siteId,omitempty"`
	VersionLock *int    `json:"versionLock,omitempty"`
}

// Cloud Identity Provider user group mappings configuration
type GroupMappings struct {
	GroupID               string                             `json:"groupID"`
	GroupName             string                             `json:"groupName"`
	GroupUuid             string                             `json:"groupUuid"`
	ObjectClassLimitation GroupMappingsObjectClassLimitation `json:"objectClassLimitation"`
	ObjectClasses         string                             `json:"objectClasses"`
	SearchBase            string                             `json:"searchBase"`
	SearchScope           GroupMappingsSearchScope           `json:"searchScope"`
}

// GroupMappingsObjectClassLimitation defines model for GroupMappings.ObjectClassLimitation.
type GroupMappingsObjectClassLimitation string

// GroupMappingsSearchScope defines model for GroupMappings.SearchScope.
type GroupMappingsSearchScope string

// GroupMembership defines model for GroupMembership.
type GroupMembership struct {
	GroupId   *string `json:"groupId,omitempty"`
	GroupName *string `json:"groupName,omitempty"`

	// Indicates that group is smart group
	SmartGroup *bool `json:"smartGroup,omitempty"`
}

// GroupTestSearch defines model for GroupTestSearch.
type GroupTestSearch struct {
	DistinguishedName *string `json:"distinguishedName,omitempty"`
	Id                *string `json:"id,omitempty"`
	Name              *string `json:"name,omitempty"`
	ServerId          *string `json:"serverId,omitempty"`
	Uuid              *string `json:"uuid,omitempty"`
}

// GroupTestSearchRequest defines model for GroupTestSearchRequest.
type GroupTestSearchRequest struct {
	Groupname string `json:"groupname"`
}

// GroupTestSearchResponse defines model for GroupTestSearchResponse.
type GroupTestSearchResponse struct {
	Results    *[]GroupTestSearch `json:"results,omitempty"`
	TotalCount *int               `json:"totalCount,omitempty"`
}

// HistorySearchResults defines model for HistorySearchResults.
type HistorySearchResults struct {
	Results    *[]ObjectHistory `json:"results,omitempty"`
	TotalCount *int             `json:"totalCount,omitempty"`
}

// HistorySearchResultsV1 defines model for HistorySearchResultsV1.
type HistorySearchResultsV1 struct {
	Results    *[]ObjectHistoryV1 `json:"results,omitempty"`
	TotalCount *int               `json:"totalCount,omitempty"`
}

// HrefResponse defines model for HrefResponse.
type HrefResponse struct {
	Href *string `json:"href,omitempty"`
	Id   *string `json:"id,omitempty"`
}

// IconResponse defines model for IconResponse.
type IconResponse struct {
	Id  *int    `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
}

// IdAndName defines model for IdAndName.
type IdAndName struct {
	Id   *int    `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// IdAndNameV2 defines model for IdAndNameV2.
type IdAndNameV2 struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// Ids defines model for Ids.
type Ids struct {
	Ids *[]string `json:"ids,omitempty"`
}

// Initial Jamf Pro setup data
type Initialize struct {
	ActivationCode  string  `json:"activationCode"`
	Email           *string `json:"email,omitempty"`
	InstitutionName string  `json:"institutionName"`
	IsEulaAccepted  bool    `json:"isEulaAccepted"`
	JssUrl          string  `json:"jssUrl"`
	Password        string  `json:"password"`
	Username        string  `json:"username"`
}

// Initial Jamf Pro setup data
type InitializeV1 struct {
	ActivationCode  string  `json:"activationCode"`
	Email           *string `json:"email,omitempty"`
	EulaAccepted    bool    `json:"eulaAccepted"`
	InstitutionName string  `json:"institutionName"`
	JssUrl          string  `json:"jssUrl"`
	Password        string  `json:"password"`
	Username        string  `json:"username"`
}

// Either devices or groupId must be provided
type InstallPackage struct {
	Devices          *[]int          `json:"devices,omitempty"`
	GroupId          *string         `json:"groupId,omitempty"`
	InstallAsManaged *bool           `json:"installAsManaged,omitempty"`
	Manifest         PackageManifest `json:"manifest"`
}

// IntegerWrapper defines model for IntegerWrapper.
type IntegerWrapper int

// InternalRecipient defines model for InternalRecipient.
type InternalRecipient struct {
	AccountId string                      `json:"accountId"`
	Frequency *InternalRecipientFrequency `json:"frequency,omitempty"`
}

// InternalRecipientFrequency defines model for InternalRecipient.Frequency.
type InternalRecipientFrequency string

// Jamf Pro Inventory statistics object. Aggregates managed/unmanaged devices and computers counters
type InventoryInformation struct {
	// Number of managed computers in inventory.
	ManagedComputers *int `json:"managedComputers,omitempty"`

	// Number of managed devices in inventory.
	ManagedDevices *int `json:"managedDevices,omitempty"`

	// Number of unmanaged computers in inventory.
	UnmanagedComputers *int `json:"unmanagedComputers,omitempty"`

	// Number of unmanaged devices in inventory.
	UnmanagedDevices *int `json:"unmanagedDevices,omitempty"`
}

// InventoryPreloadCsvError defines model for InventoryPreloadCsvError.
type InventoryPreloadCsvError struct {
	Code         *string `json:"code,omitempty"`
	Description  *string `json:"description,omitempty"`
	DeviceType   *string `json:"deviceType,omitempty"`
	Field        *string `json:"field,omitempty"`
	FieldSize    *int    `json:"fieldSize,omitempty"`
	Line         *int    `json:"line,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	Value        *string `json:"value,omitempty"`
}

// InventoryPreloadCsvValidationError defines model for InventoryPreloadCsvValidationError.
type InventoryPreloadCsvValidationError struct {
	Errors *[]InventoryPreloadCsvValidationErrorCause `json:"errors,omitempty"`

	// HTTP status of the response
	HttpStatus *int `json:"httpStatus,omitempty"`
}

// InventoryPreloadCsvValidationErrorCause defines model for InventoryPreloadCsvValidationErrorCause.
type InventoryPreloadCsvValidationErrorCause struct {
	// Embedded struct due to allOf(#/components/schemas/ApiErrorCause)
	ApiErrorCause `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	DeviceType   *string `json:"deviceType,omitempty"`
	FieldSize    *int    `json:"fieldSize,omitempty"`
	Line         *int    `json:"line,omitempty"`
	SerialNumber *string `json:"serialNumber,omitempty"`
	Value        *string `json:"value,omitempty"`
}

// InventoryPreloadCsvValidationSuccess defines model for InventoryPreloadCsvValidationSuccess.
type InventoryPreloadCsvValidationSuccess struct {
	RecordCount *int `json:"recordCount,omitempty"`
}

// InventoryPreloadExtensionAttribute defines model for InventoryPreloadExtensionAttribute.
type InventoryPreloadExtensionAttribute struct {
	Name  string  `json:"name"`
	Value *string `json:"value,omitempty"`
}

// InventoryPreloadExtensionAttributeColumn defines model for InventoryPreloadExtensionAttributeColumn.
type InventoryPreloadExtensionAttributeColumn struct {
	FullName *string `json:"fullName,omitempty"`
	Name     *string `json:"name,omitempty"`
}

// InventoryPreloadExtensionAttributeColumnResult defines model for InventoryPreloadExtensionAttributeColumnResult.
type InventoryPreloadExtensionAttributeColumnResult struct {
	Results    *[]InventoryPreloadExtensionAttributeColumn `json:"results,omitempty"`
	TotalCount *int                                        `json:"totalCount,omitempty"`
}

// InventoryPreloadInvalidCsvResponse defines model for InventoryPreloadInvalidCsvResponse.
type InventoryPreloadInvalidCsvResponse struct {
	Errors      *[]InventoryPreloadCsvError `json:"errors,omitempty"`
	HttpsStatus *int                        `json:"httpsStatus,omitempty"`
}

// InventoryPreloadRecord defines model for InventoryPreloadRecord.
type InventoryPreloadRecord struct {
	AppleCareId         *string                               `json:"appleCareId,omitempty"`
	AssetTag            *string                               `json:"assetTag,omitempty"`
	BarCode1            *string                               `json:"barCode1,omitempty"`
	BarCode2            *string                               `json:"barCode2,omitempty"`
	Building            *string                               `json:"building,omitempty"`
	Department          *string                               `json:"department,omitempty"`
	DeviceType          InventoryPreloadRecordDeviceType      `json:"deviceType"`
	EmailAddress        *string                               `json:"emailAddress,omitempty"`
	ExtensionAttributes *[]InventoryPreloadExtensionAttribute `json:"extensionAttributes,omitempty"`
	FullName            *string                               `json:"fullName,omitempty"`
	Id                  *int                                  `json:"id,omitempty"`
	LeaseExpiration     *string                               `json:"leaseExpiration,omitempty"`
	LifeExpectancy      *string                               `json:"lifeExpectancy,omitempty"`
	PhoneNumber         *string                               `json:"phoneNumber,omitempty"`
	PoDate              *string                               `json:"poDate,omitempty"`
	PoNumber            *string                               `json:"poNumber,omitempty"`
	Position            *string                               `json:"position,omitempty"`
	PurchasePrice       *string                               `json:"purchasePrice,omitempty"`
	PurchasingAccount   *string                               `json:"purchasingAccount,omitempty"`
	PurchasingContact   *string                               `json:"purchasingContact,omitempty"`
	Room                *string                               `json:"room,omitempty"`
	SerialNumber        string                                `json:"serialNumber"`
	Username            *string                               `json:"username,omitempty"`
	Vendor              *string                               `json:"vendor,omitempty"`
	WarrantyExpiration  *string                               `json:"warrantyExpiration,omitempty"`
}

// InventoryPreloadRecordDeviceType defines model for InventoryPreloadRecord.DeviceType.
type InventoryPreloadRecordDeviceType string

// InventoryPreloadRecordSearchResults defines model for InventoryPreloadRecordSearchResults.
type InventoryPreloadRecordSearchResults struct {
	Results    *[]InventoryPreloadRecord `json:"results,omitempty"`
	TotalCount *int                      `json:"totalCount,omitempty"`
}

// InventoryPreloadRecordSearchResultsV2 defines model for InventoryPreloadRecordSearchResultsV2.
type InventoryPreloadRecordSearchResultsV2 struct {
	Results    *[]InventoryPreloadRecordV2 `json:"results,omitempty"`
	TotalCount *int                        `json:"totalCount,omitempty"`
}

// InventoryPreloadRecordV2 defines model for InventoryPreloadRecordV2.
type InventoryPreloadRecordV2 struct {
	AppleCareId         *string                               `json:"appleCareId"`
	AssetTag            *string                               `json:"assetTag"`
	BarCode1            *string                               `json:"barCode1"`
	BarCode2            *string                               `json:"barCode2"`
	Building            *string                               `json:"building"`
	Department          *string                               `json:"department"`
	DeviceType          InventoryPreloadRecordV2DeviceType    `json:"deviceType"`
	EmailAddress        *string                               `json:"emailAddress"`
	ExtensionAttributes *[]InventoryPreloadExtensionAttribute `json:"extensionAttributes,omitempty"`
	FullName            *string                               `json:"fullName"`
	Id                  *string                               `json:"id,omitempty"`
	LeaseExpiration     *string                               `json:"leaseExpiration"`
	LifeExpectancy      *string                               `json:"lifeExpectancy"`
	PhoneNumber         *string                               `json:"phoneNumber"`
	PoDate              *string                               `json:"poDate"`
	PoNumber            *string                               `json:"poNumber"`
	Position            *string                               `json:"position"`
	PurchasePrice       *string                               `json:"purchasePrice"`
	PurchasingAccount   *string                               `json:"purchasingAccount"`
	PurchasingContact   *string                               `json:"purchasingContact"`
	Room                *string                               `json:"room"`
	SerialNumber        string                                `json:"serialNumber"`
	Username            *string                               `json:"username"`
	Vendor              *string                               `json:"vendor"`
	WarrantyExpiration  *string                               `json:"warrantyExpiration"`
}

// InventoryPreloadRecordV2DeviceType defines model for InventoryPreloadRecordV2.DeviceType.
type InventoryPreloadRecordV2DeviceType string

// IosBrandingConfiguration defines model for IosBrandingConfiguration.
type IosBrandingConfiguration struct {
	BrandingName              string  `json:"brandingName"`
	BrandingNameColorCode     string  `json:"brandingNameColorCode"`
	HeaderBackgroundColorCode string  `json:"headerBackgroundColorCode"`
	IconId                    *int    `json:"iconId,omitempty"`
	Id                        *string `json:"id,omitempty"`
	MenuIconColorCode         string  `json:"menuIconColorCode"`
	StatusBarTextColor        string  `json:"statusBarTextColor"`
}

// IosBrandingSearchResults defines model for IosBrandingSearchResults.
type IosBrandingSearchResults struct {
	Results    *[]IosBrandingConfiguration `json:"results,omitempty"`
	TotalCount *int                        `json:"totalCount,omitempty"`
}

// will be populated if the type is ios.
type IosDetails struct {
	Applications                  *[]MobileDeviceApplication   `json:"applications,omitempty"`
	Attachments                   *[]MobileDeviceAttachment    `json:"attachments,omitempty"`
	AvailableMb                   *int                         `json:"availableMb,omitempty"`
	BatteryLevel                  *int                         `json:"batteryLevel,omitempty"`
	CapacityMb                    *int                         `json:"capacityMb,omitempty"`
	Certificates                  *[]MobileDeviceCertificateV1 `json:"certificates,omitempty"`
	Computer                      *IdAndName                   `json:"computer,omitempty"`
	ConfigurationProfiles         *[]ConfigurationProfile      `json:"configurationProfiles,omitempty"`
	Ebooks                        *[]MobileDeviceEbook         `json:"ebooks,omitempty"`
	IsBleCapable                  *bool                        `json:"isBleCapable,omitempty"`
	IsCloudBackupEnabled          *bool                        `json:"isCloudBackupEnabled,omitempty"`
	IsDeviceLocatorServiceEnabled *bool                        `json:"isDeviceLocatorServiceEnabled,omitempty"`
	IsDoNotDisturbEnabled         *bool                        `json:"isDoNotDisturbEnabled,omitempty"`
	IsITunesStoreAccountActive    *bool                        `json:"isITunesStoreAccountActive,omitempty"`
	IsLocationServicesEnabled     *bool                        `json:"isLocationServicesEnabled,omitempty"`
	IsShared                      *bool                        `json:"isShared,omitempty"`
	IsSupervised                  *bool                        `json:"isSupervised,omitempty"`
	LastBackupTimestamp           *time.Time                   `json:"lastBackupTimestamp,omitempty"`
	LastCloudBackupTimestamp      *time.Time                   `json:"lastCloudBackupTimestamp,omitempty"`
	Model                         *string                      `json:"model,omitempty"`
	ModelIdentifier               *string                      `json:"modelIdentifier,omitempty"`
	ModelNumber                   *string                      `json:"modelNumber,omitempty"`
	Network                       *Network                     `json:"network,omitempty"`
	PercentageUsed                *int                         `json:"percentageUsed,omitempty"`
	ProvisioningProfiles          *[]ProvisioningProfile       `json:"provisioningProfiles,omitempty"`
	Purchasing                    *Purchasing                  `json:"purchasing,omitempty"`
	Security                      *Security                    `json:"security,omitempty"`
}

// will be populated if the type is ios.
type IosDetailsV2 struct {
	Applications                *[]MobileDeviceApplication   `json:"applications,omitempty"`
	Attachments                 *[]MobileDeviceAttachmentV2  `json:"attachments,omitempty"`
	AvailableMb                 *int                         `json:"availableMb,omitempty"`
	BatteryLevel                *int                         `json:"batteryLevel,omitempty"`
	BleCapable                  *bool                        `json:"bleCapable,omitempty"`
	CapacityMb                  *int                         `json:"capacityMb,omitempty"`
	Certificates                *[]MobileDeviceCertificateV2 `json:"certificates,omitempty"`
	CloudBackupEnabled          *bool                        `json:"cloudBackupEnabled,omitempty"`
	Computer                    *IdAndNameV2                 `json:"computer,omitempty"`
	ConfigurationProfiles       *[]ConfigurationProfile      `json:"configurationProfiles,omitempty"`
	DeviceLocatorServiceEnabled *bool                        `json:"deviceLocatorServiceEnabled,omitempty"`
	DoNotDisturbEnabled         *bool                        `json:"doNotDisturbEnabled,omitempty"`
	Ebooks                      *[]MobileDeviceEbook         `json:"ebooks,omitempty"`
	ITunesStoreAccountActive    *bool                        `json:"iTunesStoreAccountActive,omitempty"`
	LastBackupTimestamp         *time.Time                   `json:"lastBackupTimestamp,omitempty"`
	LastCloudBackupTimestamp    *time.Time                   `json:"lastCloudBackupTimestamp,omitempty"`
	LocationServicesEnabled     *bool                        `json:"locationServicesEnabled,omitempty"`
	Model                       *string                      `json:"model,omitempty"`
	ModelIdentifier             *string                      `json:"modelIdentifier,omitempty"`
	ModelNumber                 *string                      `json:"modelNumber,omitempty"`
	Network                     *NetworkV2                   `json:"network,omitempty"`
	PercentageUsed              *int                         `json:"percentageUsed,omitempty"`
	ProvisioningProfiles        *[]ProvisioningProfile       `json:"provisioningProfiles,omitempty"`
	Purchasing                  *PurchasingV2                `json:"purchasing,omitempty"`
	Security                    *SecurityV2                  `json:"security,omitempty"`
	Shared                      *bool                        `json:"shared,omitempty"`
	Supervised                  *bool                        `json:"supervised,omitempty"`
}

// JamfApplicationResponse defines model for JamfApplicationResponse.
type JamfApplicationResponse struct {
	Artifacts         *[]JamfPackageResponse `json:"artifacts,omitempty"`
	DisplayName       *string                `json:"displayName,omitempty"`
	ReleaseHistoryUrl *string                `json:"releaseHistoryUrl,omitempty"`
}

// JamfNationCredentials defines model for JamfNationCredentials.
type JamfNationCredentials struct {
	EmailAddress *string `json:"emailAddress,omitempty"`
	Password     *string `json:"password,omitempty"`
}

// JamfPackageResponse defines model for JamfPackageResponse.
type JamfPackageResponse struct {
	Created  *string `json:"created,omitempty"`
	Filename *string `json:"filename,omitempty"`
	Id       *string `json:"id,omitempty"`
	Url      *string `json:"url,omitempty"`
	Version  *string `json:"version,omitempty"`
}

// JamfProInformation defines model for JamfProInformation.
type JamfProInformation struct {
	IsByodEnabled             *bool `json:"isByodEnabled,omitempty"`
	IsCloudDeploymentsEnabled *bool `json:"isCloudDeploymentsEnabled,omitempty"`
	IsDepAccountEnabled       *bool `json:"isDepAccountEnabled,omitempty"`
	IsPatchEnabled            *bool `json:"isPatchEnabled,omitempty"`
	IsSmtpEnabled             *bool `json:"isSmtpEnabled,omitempty"`
	IsSsoSamlEnabled          *bool `json:"isSsoSamlEnabled,omitempty"`
	IsUserMigrationEnabled    *bool `json:"isUserMigrationEnabled,omitempty"`
	IsVppTokenEnabled         *bool `json:"isVppTokenEnabled,omitempty"`
}

// JamfProServerUrl defines model for JamfProServerUrl.
type JamfProServerUrl struct {
	UnsecuredEnrollmentUrl string `json:"unsecuredEnrollmentUrl"`
	Url                    string `json:"url"`
}

// JamfProVersion defines model for JamfProVersion.
type JamfProVersion struct {
	Version *string `json:"version,omitempty"`
}

// JamfProtectPlan defines model for JamfProtectPlan.
type JamfProtectPlan struct {
	Description      *string `json:"description,omitempty"`
	Id               *string `json:"id,omitempty"`
	Name             *string `json:"name,omitempty"`
	ProfileId        *int    `json:"profileId,omitempty"`
	ProfileName      *string `json:"profileName,omitempty"`
	ScopeDescription *string `json:"scopeDescription,omitempty"`
	Uuid             *string `json:"uuid,omitempty"`
}

// LanguageCode defines model for LanguageCode.
type LanguageCode struct {
	Name  *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

// A Cloud Identity Provider LDAP configuration for requests
type LdapConfigurationRequest struct {
	// A Cloud Identity Provider information for request
	CloudIdPCommon CloudIdPCommonRequest `json:"cloudIdPCommon"`

	// Mappings configurations request for Ldap Cloud Identity Provider configuration
	Mappings *CloudLdapMappingsRequest `json:"mappings,omitempty"`

	// A Cloud Identity Provider LDAP server configuration for requests
	Server CloudLdapServerRequest `json:"server"`
}

// A Cloud Identity Provider LDAP configuration for responses
type LdapConfigurationResponse struct {
	// A Cloud Identity Provider information
	CloudIdPCommon CloudIdPCommon `json:"cloudIdPCommon"`

	// Mappings configuration response for Ldap Cloud Identity Provider configuration
	Mappings *CloudLdapMappingsResponse `json:"mappings,omitempty"`

	// A Cloud Identity Provider LDAP server configuration for responses
	Server CloudLdapServerResponse `json:"server"`
}

// A Cloud Identity Provider LDAP configuration for updates
type LdapConfigurationUpdate struct {
	// A Cloud Identity Provider information
	CloudIdPCommon CloudIdPCommon `json:"cloudIdPCommon"`

	// Mappings configurations request for Ldap Cloud Identity Provider configuration
	Mappings *CloudLdapMappingsRequest `json:"mappings,omitempty"`

	// A Cloud Identity Provider LDAP server configuration for updates
	Server CloudLdapServerUpdate `json:"server"`
}

// An LDAP group.
type LdapGroup struct {
	DistinguishedName *string `json:"distinguishedName,omitempty"`
	Id                *string `json:"id,omitempty"`
	LdapServerId      *int    `json:"ldapServerId,omitempty"`
	Name              *string `json:"name,omitempty"`
	Uuid              *string `json:"uuid,omitempty"`
}

// LdapGroupSearchResults defines model for LdapGroupSearchResults.
type LdapGroupSearchResults struct {
	Results    *[]LdapGroup `json:"results,omitempty"`
	TotalCount *int         `json:"totalCount,omitempty"`
}

// An LDAP Server.
type LdapServer struct {
	Id   *int    `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// LinkedConnectProfile defines model for LinkedConnectProfile.
type LinkedConnectProfile struct {
	// Determines how the server will behave regarding application updates and installs on the devices that have the configuration profile installed. * `PATCH_UPDATES` - Server handles initial installation of the application and any patch updates. * `MINOR_AND_PATCH_UPDATES` - Server handles initial installation of the application and any patch and minor updates. * `INITIAL_INSTALLATION_ONLY` - Server only handles initial installation of the application. Updates will have to be done manually. * `NONE` - Server does not handle any installations or updates for the application. Version is ignored for this type.
	AutoDeploymentType      *LinkedConnectProfileAutoDeploymentType `json:"autoDeploymentType,omitempty"`
	ProfileId               *string                                 `json:"profileId,omitempty"`
	ProfileName             *string                                 `json:"profileName,omitempty"`
	ProfileScopeDescription *string                                 `json:"profileScopeDescription,omitempty"`
	Uuid                    *string                                 `json:"uuid,omitempty"`

	// Must be a valid Jamf Connect version 2.3.0 or higher. Versions are listed here `https://www.jamf.com/resources/product-documentation/jamf-connect-administrators-guide/`
	Version *string `json:"version,omitempty"`
}

// Determines how the server will behave regarding application updates and installs on the devices that have the configuration profile installed. * `PATCH_UPDATES` - Server handles initial installation of the application and any patch updates. * `MINOR_AND_PATCH_UPDATES` - Server handles initial installation of the application and any patch and minor updates. * `INITIAL_INSTALLATION_ONLY` - Server only handles initial installation of the application. Updates will have to be done manually. * `NONE` - Server does not handle any installations or updates for the application. Version is ignored for this type.
type LinkedConnectProfileAutoDeploymentType string

// LinkedConnectProfileSearchResults defines model for LinkedConnectProfileSearchResults.
type LinkedConnectProfileSearchResults struct {
	Results    *[]LinkedConnectProfile `json:"results,omitempty"`
	TotalCount *int                    `json:"totalCount,omitempty"`
}

// Locale defines model for Locale.
type Locale struct {
	Description *string `json:"description,omitempty"`
	Identifier  *string `json:"identifier,omitempty"`
}

// Location defines model for Location.
type Location struct {
	Building     *IdAndName `json:"building,omitempty"`
	Department   *IdAndName `json:"department,omitempty"`
	EmailAddress *string    `json:"emailAddress,omitempty"`
	PhoneNumber  *string    `json:"phoneNumber,omitempty"`
	Position     *string    `json:"position,omitempty"`
	RealName     *string    `json:"realName,omitempty"`
	Room         *string    `json:"room,omitempty"`
	Username     *string    `json:"username,omitempty"`
}

// LocationInformation defines model for LocationInformation.
type LocationInformation struct {
	BuildingId   int    `json:"buildingId"`
	DepartmentId int    `json:"departmentId"`
	Email        string `json:"email"`
	Id           int    `json:"id"`
	Phone        string `json:"phone"`
	Position     string `json:"position"`
	Realname     string `json:"realname"`
	Room         string `json:"room"`
	Username     string `json:"username"`
	VersionLock  int    `json:"versionLock"`
}

// LocationInformationV2 defines model for LocationInformationV2.
type LocationInformationV2 struct {
	BuildingId   string `json:"buildingId"`
	DepartmentId string `json:"departmentId"`
	Email        string `json:"email"`
	Id           string `json:"id"`
	Phone        string `json:"phone"`
	Position     string `json:"position"`
	Realname     string `json:"realname"`
	Room         string `json:"room"`
	Username     string `json:"username"`
	VersionLock  int    `json:"versionLock"`
}

// LocationV2 defines model for LocationV2.
type LocationV2 struct {
	BuildingId   *string `json:"buildingId,omitempty"`
	DepartmentId *string `json:"departmentId,omitempty"`
	EmailAddress *string `json:"emailAddress,omitempty"`
	PhoneNumber  *string `json:"phoneNumber,omitempty"`
	Position     *string `json:"position,omitempty"`
	RealName     *string `json:"realName,omitempty"`
	Room         *string `json:"room,omitempty"`
	Username     *string `json:"username,omitempty"`
}

// LogOutUserCommand defines model for LogOutUserCommand.
type LogOutUserCommand map[string]interface{}

// MacOsBrandingConfiguration defines model for MacOsBrandingConfiguration.
type MacOsBrandingConfiguration struct {
	ApplicationName       *string `json:"applicationName,omitempty"`
	BrandingHeaderImageId *int    `json:"brandingHeaderImageId,omitempty"`
	BrandingName          *string `json:"brandingName,omitempty"`
	BrandingNameSecondary *string `json:"brandingNameSecondary,omitempty"`
	IconId                *int    `json:"iconId,omitempty"`
	Id                    *string `json:"id,omitempty"`
}

// MacOsBrandingSearchResults defines model for MacOsBrandingSearchResults.
type MacOsBrandingSearchResults struct {
	Results    *[]MacOsBrandingConfiguration `json:"results,omitempty"`
	TotalCount *int                          `json:"totalCount,omitempty"`
}

// MacOsManagedSoftwareUpdate defines model for MacOsManagedSoftwareUpdate.
type MacOsManagedSoftwareUpdate struct {
	DeviceIds []string `json:"deviceIds"`

	// Allow users to defer the update the provided number of times before macOS forces the update. If a value is provided, the Software Update will use the InstallLater install action.
	MaxDeferrals *int `json:"maxDeferrals,omitempty"`

	// MaxDeferral is ignored if using the DownloadOnly install action.
	UpdateAction *MacOsManagedSoftwareUpdateUpdateAction `json:"updateAction,omitempty"`

	// If no value is provided, the version will default to latest version based on device eligibility.
	Version *string `json:"version,omitempty"`
}

// MaxDeferral is ignored if using the DownloadOnly install action.
type MacOsManagedSoftwareUpdateUpdateAction string

// MacOsManagedSoftwareUpdateResponse defines model for MacOsManagedSoftwareUpdateResponse.
type MacOsManagedSoftwareUpdateResponse struct {
	Errors    *[]ApiErrorCause `json:"errors,omitempty"`
	Responses *[]HrefResponse  `json:"responses,omitempty"`
}

// Markdown defines model for Markdown.
type Markdown struct {
	Markdown *string `json:"markdown,omitempty"`
}

// MdmClientType defines model for MdmClientType.
type MdmClientType string

// MdmCommand defines model for MdmCommand.
type MdmCommand struct {
	Client       *MdmCommandClient `json:"client,omitempty"`
	CommandState *MdmCommandState  `json:"commandState,omitempty"`
	CommandType  *MdmCommandType   `json:"commandType,omitempty"`
	DateSent     *time.Time        `json:"dateSent,omitempty"`
	Uuid         *string           `json:"uuid,omitempty"`
}

// MdmCommandClient defines model for MdmCommandClient.
type MdmCommandClient struct {
	ClientType   *MdmClientType `json:"clientType,omitempty"`
	ManagementId *string        `json:"managementId,omitempty"`
}

// MdmCommandRequest defines model for MdmCommandRequest.
type MdmCommandRequest struct {
	ClientData  *[]MdmCommandClient `json:"clientData,omitempty"`
	CommandData *interface{}        `json:"commandData,omitempty"`
}

// MdmCommandState defines model for MdmCommandState.
type MdmCommandState string

// MdmCommandType defines model for MdmCommandType.
type MdmCommandType string

// MdmSigningCertificate defines model for MdmSigningCertificate.
type MdmSigningCertificate struct {
	Filename *string `json:"filename,omitempty"`

	// The the certificate base 64 encoded. Will not be returned on a GET.
	IdentityKeystore *string `json:"identityKeystore,omitempty"`
	KeystorePassword *string `json:"keystorePassword,omitempty"`

	// The md5 checksum of the certificate file. Intended to be used in verifification the cert being used to sign MDM profiles.
	Md5Sum *string `json:"md5Sum,omitempty"`
}

// Cloud Identity Provider user group membership mappings configuration
type MembershipMappings struct {
	GroupMembershipMapping string `json:"groupMembershipMapping"`
}

// MembershipTestSearchRequest defines model for MembershipTestSearchRequest.
type MembershipTestSearchRequest struct {
	Groupname string `json:"groupname"`
	Username  string `json:"username"`
}

// MembershipTestSearchResponse defines model for MembershipTestSearchResponse.
type MembershipTestSearchResponse struct {
	IsMember *bool   `json:"isMember,omitempty"`
	Username *string `json:"username,omitempty"`
}

// MemcachedEndpoints defines model for MemcachedEndpoints.
type MemcachedEndpoints struct {
	Enabled                 *bool   `json:"enabled,omitempty"`
	HostName                *string `json:"hostName,omitempty"`
	Id                      *string `json:"id,omitempty"`
	JssCacheConfigurationId *int    `json:"jssCacheConfigurationId,omitempty"`
	Name                    *string `json:"name,omitempty"`
	Port                    *int    `json:"port,omitempty"`
}

// MobileDevice defines model for MobileDevice.
type MobileDevice struct {
	Id                     *int              `json:"id,omitempty"`
	Model                  *string           `json:"model,omitempty"`
	ModelIdentifier        *string           `json:"modelIdentifier,omitempty"`
	Name                   *string           `json:"name,omitempty"`
	PhoneNumber            *string           `json:"phoneNumber,omitempty"`
	SerialNumber           *string           `json:"serialNumber,omitempty"`
	SoftwareUpdateDeviceId *string           `json:"softwareUpdateDeviceId,omitempty"`
	Type                   *MobileDeviceType `json:"type,omitempty"`
	Udid                   *string           `json:"udid,omitempty"`
	Username               *string           `json:"username,omitempty"`
	WifiMacAddress         *string           `json:"wifiMacAddress,omitempty"`
}

// MobileDeviceType defines model for MobileDevice.Type.
type MobileDeviceType string

// MobileDeviceApplication defines model for MobileDeviceApplication.
type MobileDeviceApplication struct {
	Identifier   *string `json:"identifier,omitempty"`
	Name         *string `json:"name,omitempty"`
	ShortVersion *string `json:"shortVersion,omitempty"`
	Version      *string `json:"version,omitempty"`
}

// MobileDeviceAttachment defines model for MobileDeviceAttachment.
type MobileDeviceAttachment struct {
	Id   *int    `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// MobileDeviceAttachmentV2 defines model for MobileDeviceAttachmentV2.
type MobileDeviceAttachmentV2 struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// MobileDeviceCertificateV1 defines model for MobileDeviceCertificateV1.
type MobileDeviceCertificateV1 struct {
	CommonName *string `json:"commonName,omitempty"`
	IsIdentity *bool   `json:"isIdentity,omitempty"`
}

// MobileDeviceCertificateV2 defines model for MobileDeviceCertificateV2.
type MobileDeviceCertificateV2 struct {
	CommonName *string `json:"commonName,omitempty"`
	Identity   *bool   `json:"identity,omitempty"`
}

// MobileDeviceDetails defines model for MobileDeviceDetails.
type MobileDeviceDetails struct {
	// will be populated if the type is android.
	Android *AndroidDetails `json:"android,omitempty"`

	// will be populated if the type is appleTv.
	AppleTv               *AppleTvDetails       `json:"appleTv,omitempty"`
	AssetTag              *string               `json:"assetTag,omitempty"`
	BluetoothMacAddress   *string               `json:"bluetoothMacAddress,omitempty"`
	DeviceOwnershipLevel  *string               `json:"deviceOwnershipLevel,omitempty"`
	ExtensionAttributes   *[]ExtensionAttribute `json:"extensionAttributes,omitempty"`
	Id                    *int                  `json:"id,omitempty"`
	InitialEntryTimestamp *time.Time            `json:"initialEntryTimestamp,omitempty"`

	// will be populated if the type is ios.
	Ios                          *IosDetails `json:"ios,omitempty"`
	IpAddress                    *string     `json:"ipAddress,omitempty"`
	IsManaged                    *bool       `json:"isManaged,omitempty"`
	LastEnrollmentTimestamp      *time.Time  `json:"lastEnrollmentTimestamp,omitempty"`
	LastInventoryUpdateTimestamp *time.Time  `json:"lastInventoryUpdateTimestamp,omitempty"`
	Location                     *Location   `json:"location,omitempty"`
	Name                         *string     `json:"name,omitempty"`
	OsBuild                      *string     `json:"osBuild,omitempty"`
	OsVersion                    *string     `json:"osVersion,omitempty"`
	SerialNumber                 *string     `json:"serialNumber,omitempty"`
	Site                         *IdAndName  `json:"site,omitempty"`
	SoftwareUpdateDeviceId       *string     `json:"softwareUpdateDeviceId,omitempty"`

	// Based on the value of this either ios, appleTv, android objects will be populated.
	Type           *MobileDeviceDetailsType `json:"type,omitempty"`
	Udid           *string                  `json:"udid,omitempty"`
	WifiMacAddress *string                  `json:"wifiMacAddress,omitempty"`
}

// Based on the value of this either ios, appleTv, android objects will be populated.
type MobileDeviceDetailsType string

// MobileDeviceDetailsGetV2 defines model for MobileDeviceDetailsGetV2.
type MobileDeviceDetailsGetV2 struct {
	// Embedded struct due to allOf(#/components/schemas/MobileDeviceDetailsV2)
	MobileDeviceDetailsV2 `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	ManagementId *string `json:"managementId,omitempty"`
}

// MobileDeviceDetailsV2 defines model for MobileDeviceDetailsV2.
type MobileDeviceDetailsV2 struct {
	AssetTag             *string `json:"assetTag,omitempty"`
	BluetoothMacAddress  *string `json:"bluetoothMacAddress,omitempty"`
	DeviceOwnershipLevel *string `json:"deviceOwnershipLevel,omitempty"`

	// Enforce the mobile device name. Device must be supervised. If set to true, Jamf Pro will revert the Mobile Device Name to the ‘name’ value each time the device checks in.
	EnforceName           *bool                   `json:"enforceName,omitempty"`
	EnrollmentMethod      *string                 `json:"enrollmentMethod,omitempty"`
	ExtensionAttributes   *[]ExtensionAttributeV2 `json:"extensionAttributes,omitempty"`
	Id                    *string                 `json:"id,omitempty"`
	InitialEntryTimestamp *time.Time              `json:"initialEntryTimestamp,omitempty"`

	// will be populated if the type is ios.
	Ios                           *IosDetailsV2 `json:"ios,omitempty"`
	IpAddress                     *string       `json:"ipAddress,omitempty"`
	LastEnrollmentTimestamp       *time.Time    `json:"lastEnrollmentTimestamp,omitempty"`
	LastInventoryUpdateTimestamp  *time.Time    `json:"lastInventoryUpdateTimestamp,omitempty"`
	Location                      *LocationV2   `json:"location,omitempty"`
	Managed                       *bool         `json:"managed,omitempty"`
	MdmProfileExpirationTimestamp *time.Time    `json:"mdmProfileExpirationTimestamp,omitempty"`

	// Mobile device name.
	Name                   *string `json:"name,omitempty"`
	OsBuild                *string `json:"osBuild,omitempty"`
	OsVersion              *string `json:"osVersion,omitempty"`
	SerialNumber           *string `json:"serialNumber,omitempty"`
	Site                   *V1Site `json:"site,omitempty"`
	SoftwareUpdateDeviceId *string `json:"softwareUpdateDeviceId,omitempty"`
	TimeZone               *string `json:"timeZone,omitempty"`

	// will be populated if the type is appleTv.
	Tvos *TvOsDetails `json:"tvos,omitempty"`

	// Based on the value of this either ios, appleTv, android objects will be populated.
	Type           *MobileDeviceDetailsV2Type `json:"type,omitempty"`
	Udid           *string                    `json:"udid,omitempty"`
	WifiMacAddress *string                    `json:"wifiMacAddress,omitempty"`
}

// Based on the value of this either ios, appleTv, android objects will be populated.
type MobileDeviceDetailsV2Type string

// MobileDeviceEbook defines model for MobileDeviceEbook.
type MobileDeviceEbook struct {
	Author  *string `json:"author,omitempty"`
	Title   *string `json:"title,omitempty"`
	Version *string `json:"version,omitempty"`
}

// MobileDeviceExtensionAttributeResults defines model for MobileDeviceExtensionAttributeResults.
type MobileDeviceExtensionAttributeResults struct {
	ExtensionAttributes *[]struct {
		Name *string `json:"name,omitempty"`
	} `json:"extensionAttributes,omitempty"`
}

// MobileDeviceGroup defines model for MobileDeviceGroup.
type MobileDeviceGroup struct {
	Id           *int    `json:"id,omitempty"`
	IsSmartGroup *bool   `json:"isSmartGroup,omitempty"`
	Name         *string `json:"name,omitempty"`
}

// MobileDevicePrestage defines model for MobileDevicePrestage.
type MobileDevicePrestage struct {
	// Embedded struct due to allOf(#/components/schemas/DeviceEnrollmentPrestage)
	DeviceEnrollmentPrestage `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	IsAllowPairing                        bool                       `json:"isAllowPairing"`
	IsAutoAdvanceSetup                    bool                       `json:"isAutoAdvanceSetup"`
	IsConfigureDeviceBeforeSetupAssistant bool                       `json:"isConfigureDeviceBeforeSetupAssistant"`
	IsMultiUser                           bool                       `json:"isMultiUser"`
	IsSupervised                          bool                       `json:"isSupervised"`
	Language                              *string                    `json:"language,omitempty"`
	MaximumSharedAccounts                 int                        `json:"maximumSharedAccounts"`
	Names                                 *MobileDevicePrestageNames `json:"names,omitempty"`
	Region                                *string                    `json:"region,omitempty"`
}

// MobileDevicePrestageName defines model for MobileDevicePrestageName.
type MobileDevicePrestageName struct {
	DeviceName *string `json:"deviceName,omitempty"`
	Id         *int    `json:"id,omitempty"`
	IsUsed     *bool   `json:"isUsed,omitempty"`
}

// MobileDevicePrestageNameV2 defines model for MobileDevicePrestageNameV2.
type MobileDevicePrestageNameV2 struct {
	DeviceName *string `json:"deviceName,omitempty"`
	Id         *string `json:"id,omitempty"`
	Used       *bool   `json:"used,omitempty"`
}

// MobileDevicePrestageNames defines model for MobileDevicePrestageNames.
type MobileDevicePrestageNames struct {
	AssignNamesUsing         *string                     `json:"assignNamesUsing,omitempty"`
	DeviceNamePrefix         *string                     `json:"deviceNamePrefix,omitempty"`
	DeviceNameSuffix         *string                     `json:"deviceNameSuffix,omitempty"`
	IsDeviceNamingConfigured *bool                       `json:"isDeviceNamingConfigured,omitempty"`
	IsManageNames            *bool                       `json:"isManageNames,omitempty"`
	PrestageDeviceNames      *[]MobileDevicePrestageName `json:"prestageDeviceNames,omitempty"`
	SingleDeviceName         *string                     `json:"singleDeviceName,omitempty"`
}

// MobileDevicePrestageNamesV2 defines model for MobileDevicePrestageNamesV2.
type MobileDevicePrestageNamesV2 struct {
	AssignNamesUsing       *string                       `json:"assignNamesUsing,omitempty"`
	DeviceNamePrefix       *string                       `json:"deviceNamePrefix,omitempty"`
	DeviceNameSuffix       *string                       `json:"deviceNameSuffix,omitempty"`
	DeviceNamingConfigured *bool                         `json:"deviceNamingConfigured,omitempty"`
	ManageNames            *bool                         `json:"manageNames,omitempty"`
	PrestageDeviceNames    *[]MobileDevicePrestageNameV2 `json:"prestageDeviceNames,omitempty"`
	SingleDeviceName       *string                       `json:"singleDeviceName,omitempty"`
}

// MobileDevicePrestageSearchResults defines model for MobileDevicePrestageSearchResults.
type MobileDevicePrestageSearchResults struct {
	Results    *[]GetMobileDevicePrestage `json:"results,omitempty"`
	TotalCount *int                       `json:"totalCount,omitempty"`
}

// MobileDevicePrestageSearchResultsV2 defines model for MobileDevicePrestageSearchResultsV2.
type MobileDevicePrestageSearchResultsV2 struct {
	Results    *[]GetMobileDevicePrestageV2 `json:"results,omitempty"`
	TotalCount *int                         `json:"totalCount,omitempty"`
}

// MobileDevicePrestageV2 defines model for MobileDevicePrestageV2.
type MobileDevicePrestageV2 struct {
	// Embedded struct due to allOf(#/components/schemas/DeviceEnrollmentPrestageV2)
	DeviceEnrollmentPrestageV2 `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	AllowPairing                        bool                         `json:"allowPairing"`
	ConfigureDeviceBeforeSetupAssistant bool                         `json:"configureDeviceBeforeSetupAssistant"`
	EnforceTemporarySessionTimeout      *bool                        `json:"enforceTemporarySessionTimeout,omitempty"`
	EnforceUserSessionTimeout           *bool                        `json:"enforceUserSessionTimeout,omitempty"`
	MaximumSharedAccounts               int                          `json:"maximumSharedAccounts"`
	MultiUser                           bool                         `json:"multiUser"`
	Names                               *MobileDevicePrestageNamesV2 `json:"names,omitempty"`
	SendTimezone                        bool                         `json:"sendTimezone"`
	StorageQuotaSizeMegabytes           int                          `json:"storageQuotaSizeMegabytes"`
	Supervised                          bool                         `json:"supervised"`
	TemporarySessionOnly                *bool                        `json:"temporarySessionOnly,omitempty"`
	TemporarySessionTimeout             *int                         `json:"temporarySessionTimeout,omitempty"`
	Timezone                            string                       `json:"timezone"`
	UseStorageQuotaSize                 bool                         `json:"useStorageQuotaSize"`
	UserSessionTimeout                  *int                         `json:"userSessionTimeout,omitempty"`
}

// MobileDeviceSearchParams defines model for MobileDeviceSearchParams.
type MobileDeviceSearchParams struct {
	ExcludedIds  *[]int     `json:"excludedIds,omitempty"`
	IsLoadToEnd  *bool      `json:"isLoadToEnd,omitempty"`
	IsManaged    *bool      `json:"isManaged,omitempty"`
	MacAddress   *string    `json:"macAddress,omitempty"`
	Name         *string    `json:"name,omitempty"`
	OrderBy      *[]OrderBy `json:"orderBy,omitempty"`
	OsType       *string    `json:"osType,omitempty"`
	PageNumber   *int       `json:"pageNumber,omitempty"`
	PageSize     *int       `json:"pageSize,omitempty"`
	SerialNumber *string    `json:"serialNumber,omitempty"`
	Udid         *string    `json:"udid,omitempty"`
}

// MobileDeviceSearchResults defines model for MobileDeviceSearchResults.
type MobileDeviceSearchResults struct {
	Results    *[]MobileDevice `json:"results,omitempty"`
	TotalCount *int            `json:"totalCount,omitempty"`
}

// MobileDeviceSearchResultsV2 defines model for MobileDeviceSearchResultsV2.
type MobileDeviceSearchResultsV2 struct {
	Results    *[]MobileDeviceV2 `json:"results,omitempty"`
	TotalCount *int              `json:"totalCount,omitempty"`
}

// MobileDeviceV2 defines model for MobileDeviceV2.
type MobileDeviceV2 struct {
	Id                     *string             `json:"id,omitempty"`
	ManagementId           *string             `json:"managementId,omitempty"`
	Model                  *string             `json:"model,omitempty"`
	ModelIdentifier        *string             `json:"modelIdentifier,omitempty"`
	Name                   *string             `json:"name,omitempty"`
	PhoneNumber            *string             `json:"phoneNumber,omitempty"`
	SerialNumber           *string             `json:"serialNumber,omitempty"`
	SoftwareUpdateDeviceId *string             `json:"softwareUpdateDeviceId,omitempty"`
	Type                   *MobileDeviceV2Type `json:"type,omitempty"`
	Udid                   *string             `json:"udid,omitempty"`
	Username               *string             `json:"username,omitempty"`
	WifiMacAddress         *string             `json:"wifiMacAddress,omitempty"`
}

// MobileDeviceV2Type defines model for MobileDeviceV2.Type.
type MobileDeviceV2Type string

// Network defines model for Network.
type Network struct {
	CarrierSettingsVersion   *string `json:"carrierSettingsVersion,omitempty"`
	CellularTechnology       *string `json:"cellularTechnology,omitempty"`
	CurrentCarrierNetwork    *string `json:"currentCarrierNetwork,omitempty"`
	CurrentMobileCountryCode *string `json:"currentMobileCountryCode,omitempty"`
	CurrentMobileNetworkCode *string `json:"currentMobileNetworkCode,omitempty"`
	HomeCarrierNetwork       *string `json:"homeCarrierNetwork,omitempty"`
	HomeMobileCountryCode    *string `json:"homeMobileCountryCode,omitempty"`
	HomeMobileNetworkCode    *string `json:"homeMobileNetworkCode,omitempty"`
	Iccid                    *string `json:"iccid,omitempty"`
	Imei                     *string `json:"imei,omitempty"`
	IsDataRoamingEnabled     *bool   `json:"isDataRoamingEnabled,omitempty"`
	IsPersonalHotspotEnabled *bool   `json:"isPersonalHotspotEnabled,omitempty"`
	IsRoaming                *bool   `json:"isRoaming,omitempty"`
	IsVoiceRoamingEnabled    *bool   `json:"isVoiceRoamingEnabled,omitempty"`
	Meid                     *string `json:"meid,omitempty"`
	PhoneNumber              *string `json:"phoneNumber,omitempty"`
}

// NetworkV2 defines model for NetworkV2.
type NetworkV2 struct {
	CarrierSettingsVersion   *string `json:"carrierSettingsVersion,omitempty"`
	CellularTechnology       *string `json:"cellularTechnology,omitempty"`
	CurrentCarrierNetwork    *string `json:"currentCarrierNetwork,omitempty"`
	CurrentMobileCountryCode *string `json:"currentMobileCountryCode,omitempty"`
	CurrentMobileNetworkCode *string `json:"currentMobileNetworkCode,omitempty"`
	DataRoamingEnabled       *bool   `json:"dataRoamingEnabled,omitempty"`

	// EID or "embedded identity document" is a number associated with the eSIM on a device
	Eid                    *string `json:"eid,omitempty"`
	HomeCarrierNetwork     *string `json:"homeCarrierNetwork,omitempty"`
	HomeMobileCountryCode  *string `json:"homeMobileCountryCode,omitempty"`
	HomeMobileNetworkCode  *string `json:"homeMobileNetworkCode,omitempty"`
	Iccid                  *string `json:"iccid,omitempty"`
	Imei                   *string `json:"imei,omitempty"`
	Meid                   *string `json:"meid,omitempty"`
	PersonalHotspotEnabled *bool   `json:"personalHotspotEnabled,omitempty"`
	PhoneNumber            *string `json:"phoneNumber,omitempty"`
	Roaming                *bool   `json:"roaming,omitempty"`
	VoiceRoamingEnabled    *bool   `json:"voiceRoamingEnabled,omitempty"`
}

// Jamf Pro notification used for important alerts.
type Notification struct {
	Id     *int                 `json:"id,omitempty"`
	Params *Notification_Params `json:"params,omitempty"`
	Type   *string              `json:"type,omitempty"`
}

// Notification_Params defines model for Notification.Params.
type Notification_Params struct {
	AdditionalProperties map[string]map[string]interface{} `json:"-"`
}

// NotificationType defines model for NotificationType.
type NotificationType string

// Jamf Pro notification used for important alerts.
type NotificationV1 struct {
	Id     *string                `json:"id,omitempty"`
	Params *NotificationV1_Params `json:"params,omitempty"`
	Type   *NotificationType      `json:"type,omitempty"`
}

// NotificationV1_Params defines model for NotificationV1.Params.
type NotificationV1_Params struct {
	AdditionalProperties map[string]map[string]interface{} `json:"-"`
}

// ObjectHistory defines model for ObjectHistory.
type ObjectHistory struct {
	Date     *string `json:"date,omitempty"`
	Details  *string `json:"details,omitempty"`
	Id       *int    `json:"id,omitempty"`
	Note     *string `json:"note,omitempty"`
	Username *string `json:"username,omitempty"`
}

// ObjectHistoryNote defines model for ObjectHistoryNote.
type ObjectHistoryNote struct {
	Note string `json:"note"`
}

// ObjectHistoryV1 defines model for ObjectHistoryV1.
type ObjectHistoryV1 struct {
	Date     *string `json:"date,omitempty"`
	Details  *string `json:"details,omitempty"`
	Id       *string `json:"id,omitempty"`
	Note     *string `json:"note,omitempty"`
	Username *string `json:"username,omitempty"`
}

// OrderBy defines model for OrderBy.
type OrderBy struct {
	Direction *OrderByDirection `json:"direction,omitempty"`
	Field     *string           `json:"field,omitempty"`
}

// OrderByDirection defines model for OrderBy.Direction.
type OrderByDirection string

// PackageManifest defines model for PackageManifest.
type PackageManifest struct {
	BundleId         string                  `json:"bundleId"`
	BundleVersion    string                  `json:"bundleVersion"`
	DisplayImageUrl  *string                 `json:"displayImageUrl,omitempty"`
	FullSizeImageUrl *string                 `json:"fullSizeImageUrl,omitempty"`
	Hash             string                  `json:"hash"`
	HashType         PackageManifestHashType `json:"hashType"`
	SizeInBytes      int                     `json:"sizeInBytes"`
	Subtitle         *string                 `json:"subtitle,omitempty"`
	Title            string                  `json:"title"`
	Url              string                  `json:"url"`
}

// PackageManifestHashType defines model for PackageManifest.HashType.
type PackageManifestHashType string

// ParentApp defines model for ParentApp.
type ParentApp struct {
	AllowClearPasscode            *bool                     `json:"allowClearPasscode,omitempty"`
	AllowTemplates                *bool                     `json:"allowTemplates,omitempty"`
	DeviceGroupId                 int                       `json:"deviceGroupId"`
	DisassociateOnWipeAndReEnroll *bool                     `json:"disassociateOnWipeAndReEnroll,omitempty"`
	IsEnabled                     bool                      `json:"isEnabled"`
	RestrictedTimes               ParentApp_RestrictedTimes `json:"restrictedTimes"`
	SafelistedApps                *SafelistedApps           `json:"safelistedApps,omitempty"`
	TimezoneId                    string                    `json:"timezoneId"`
}

// ParentApp_RestrictedTimes defines model for ParentApp.RestrictedTimes.
type ParentApp_RestrictedTimes struct {
	Key                  *DayOfWeek           `json:"key,omitempty"`
	AdditionalProperties map[string]TimeFrame `json:"-"`
}

// PatchIdsOnDashboard defines model for PatchIdsOnDashboard.
type PatchIdsOnDashboard []int

// PatchPolicyAttempt defines model for PatchPolicyAttempt.
type PatchPolicyAttempt struct {
	Actions   *[]PatchPolicyAttemptAction `json:"actions,omitempty"`
	AttemptNo *int                        `json:"attemptNo,omitempty"`
	DeviceId  *int                        `json:"deviceId,omitempty"`
	Id        *int                        `json:"id,omitempty"`
}

// PatchPolicyAttemptAction defines model for PatchPolicyAttemptAction.
type PatchPolicyAttemptAction struct {
	Action      *string `json:"action,omitempty"`
	ActionOrder *int    `json:"actionOrder,omitempty"`
	Id          *int    `json:"id,omitempty"`
}

// PatchPolicyLog defines model for PatchPolicyLog.
type PatchPolicyLog struct {
	Attempt       *int       `json:"attempt,omitempty"`
	DeviceId      *int       `json:"deviceId,omitempty"`
	DeviceName    *string    `json:"deviceName,omitempty"`
	Ignored       *int       `json:"ignored,omitempty"`
	PatchPolicyId *int       `json:"patchPolicyId,omitempty"`
	StatusCode    *int       `json:"statusCode,omitempty"`
	StatusDate    *time.Time `json:"statusDate,omitempty"`
	StatusMessage *string    `json:"statusMessage,omitempty"`
}

// PatchPolicyLogSearchResults defines model for PatchPolicyLogSearchResults.
type PatchPolicyLogSearchResults struct {
	Results    *[]PatchPolicyLog `json:"results,omitempty"`
	TotalCount *int              `json:"totalCount,omitempty"`
}

// PatchPolicyOnDashboard defines model for PatchPolicyOnDashboard.
type PatchPolicyOnDashboard struct {
	IsOnDashboard *bool `json:"isOnDashboard,omitempty"`
}

// PatchPolicySummary defines model for PatchPolicySummary.
type PatchPolicySummary struct {
	Completed                    *int    `json:"completed,omitempty"`
	Deferred                     *int    `json:"deferred,omitempty"`
	Failed                       *int    `json:"failed,omitempty"`
	IsPolicyEnabled              *bool   `json:"isPolicyEnabled,omitempty"`
	Pending                      *int    `json:"pending,omitempty"`
	PolicyDeploymentMethod       *string `json:"policyDeploymentMethod,omitempty"`
	PolicyId                     *int    `json:"policyId,omitempty"`
	PolicyName                   *string `json:"policyName,omitempty"`
	PolicyTargetVersion          *string `json:"policyTargetVersion,omitempty"`
	SoftwareTitle                *string `json:"softwareTitle,omitempty"`
	SoftwareTitleConfigurationId *int    `json:"softwareTitleConfigurationId,omitempty"`
}

// PatchVersion defines model for PatchVersion.
type PatchVersion struct {
	AbsoluteOrderId *int    `json:"absoluteOrderId,omitempty"`
	OnVersion       *int    `json:"onVersion,omitempty"`
	Version         *string `json:"version,omitempty"`
}

// PersonalHotspotSetting defines model for PersonalHotspotSetting.
type PersonalHotspotSetting string

// PlanSearchResults defines model for PlanSearchResults.
type PlanSearchResults struct {
	Results    *[]JamfProtectPlan `json:"results,omitempty"`
	TotalCount *int               `json:"totalCount,omitempty"`
}

// PluginPath defines model for PluginPath.
type PluginPath struct {
	Id   string `json:"id"`
	Path string `json:"path"`
}

// PolicyProperties defines model for PolicyProperties.
type PolicyProperties struct {
	IsAllowNetworkStateChangeTriggers *bool `json:"isAllowNetworkStateChangeTriggers,omitempty"`

	// This field always returns false.
	IsPoliciesRequireNetworkStateChange *bool `json:"isPoliciesRequireNetworkStateChange,omitempty"`
}

// PolicyPropertiesV1 defines model for PolicyPropertiesV1.
type PolicyPropertiesV1 struct {
	AllowNetworkStateChangeTriggers *bool `json:"allowNetworkStateChangeTriggers,omitempty"`

	// This field always returns false.
	PoliciesRequireNetworkStateChange *bool `json:"policiesRequireNetworkStateChange,omitempty"`
}

// PostComputerPrestageV2 defines model for PostComputerPrestageV2.
type PostComputerPrestageV2 struct {
	// Embedded struct due to allOf(#/components/schemas/ComputerPrestageV2)
	ComputerPrestageV2 `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	RecoveryLockPassword *string `json:"recoveryLockPassword,omitempty"`
}

// PrestageDependencies defines model for PrestageDependencies.
type PrestageDependencies struct {
	Dependencies *[]PrestageDependency `json:"dependencies,omitempty"`
}

// PrestageDependency defines model for PrestageDependency.
type PrestageDependency struct {
	HumanReadableName *string `json:"humanReadableName,omitempty"`
	Hyperlink         *string `json:"hyperlink,omitempty"`
	Name              *string `json:"name,omitempty"`
}

// PrestageFileAttachment defines model for PrestageFileAttachment.
type PrestageFileAttachment struct {
	FileType *string `json:"fileType,omitempty"`
	Id       *int    `json:"id,omitempty"`
	Name     *string `json:"name,omitempty"`
}

// PrestageFileAttachmentV2 defines model for PrestageFileAttachmentV2.
type PrestageFileAttachmentV2 struct {
	FileType *string `json:"fileType,omitempty"`
	Id       *string `json:"id,omitempty"`
	Name     *string `json:"name,omitempty"`
}

// PrestagePurchasingInformation defines model for PrestagePurchasingInformation.
type PrestagePurchasingInformation struct {
	AppleCareID       string `json:"appleCareID"`
	Id                int    `json:"id"`
	IsLeased          bool   `json:"isLeased"`
	IsPurchased       bool   `json:"isPurchased"`
	LeaseDate         string `json:"leaseDate"`
	LifeExpectancy    int    `json:"lifeExpectancy"`
	PoDate            string `json:"poDate"`
	PoNumber          string `json:"poNumber"`
	PurchasePrice     string `json:"purchasePrice"`
	PurchasingAccount string `json:"purchasingAccount"`
	PurchasingContact string `json:"purchasingContact"`
	Vendor            string `json:"vendor"`
	VersionLock       int    `json:"versionLock"`
	WarrantyDate      string `json:"warrantyDate"`
}

// PrestagePurchasingInformationV2 defines model for PrestagePurchasingInformationV2.
type PrestagePurchasingInformationV2 struct {
	AppleCareId       string `json:"appleCareId"`
	Id                string `json:"id"`
	LeaseDate         string `json:"leaseDate"`
	Leased            bool   `json:"leased"`
	LifeExpectancy    int    `json:"lifeExpectancy"`
	PoDate            string `json:"poDate"`
	PoNumber          string `json:"poNumber"`
	PurchasePrice     string `json:"purchasePrice"`
	Purchased         bool   `json:"purchased"`
	PurchasingAccount string `json:"purchasingAccount"`
	PurchasingContact string `json:"purchasingContact"`
	Vendor            string `json:"vendor"`
	VersionLock       int    `json:"versionLock"`
	WarrantyDate      string `json:"warrantyDate"`
}

// PrestageScope defines model for PrestageScope.
type PrestageScope struct {
	SerialsByPrestageId *PrestageScope_SerialsByPrestageId `json:"serialsByPrestageId,omitempty"`
}

// PrestageScope_SerialsByPrestageId defines model for PrestageScope.SerialsByPrestageId.
type PrestageScope_SerialsByPrestageId struct {
	AdditionalProperties map[string]int `json:"-"`
}

// PrestageScopeAssignment defines model for PrestageScopeAssignment.
type PrestageScopeAssignment struct {
	AssignmentEpoch *int    `json:"assignmentEpoch,omitempty"`
	SerialNumber    *string `json:"serialNumber,omitempty"`
	UserAssigned    *string `json:"userAssigned,omitempty"`
}

// PrestageScopeAssignmentV2 defines model for PrestageScopeAssignmentV2.
type PrestageScopeAssignmentV2 struct {
	AssignmentDate *time.Time `json:"assignmentDate,omitempty"`
	SerialNumber   *string    `json:"serialNumber,omitempty"`
	UserAssigned   *string    `json:"userAssigned,omitempty"`
}

// PrestageScopeResponse defines model for PrestageScopeResponse.
type PrestageScopeResponse struct {
	Assignments *[]PrestageScopeAssignment `json:"assignments,omitempty"`
	PrestageId  *int                       `json:"prestageId,omitempty"`
	VersionLock *int                       `json:"versionLock,omitempty"`
}

// PrestageScopeResponseV2 defines model for PrestageScopeResponseV2.
type PrestageScopeResponseV2 struct {
	Assignments *[]PrestageScopeAssignmentV2 `json:"assignments,omitempty"`
	PrestageId  *string                      `json:"prestageId,omitempty"`
	VersionLock *int                         `json:"versionLock,omitempty"`
}

// PrestageScopeUpdate defines model for PrestageScopeUpdate.
type PrestageScopeUpdate struct {
	SerialNumbers []string `json:"serialNumbers"`
	VersionLock   int      `json:"versionLock"`
}

// PrestageScopeV2 defines model for PrestageScopeV2.
type PrestageScopeV2 struct {
	SerialsByPrestageId *PrestageScopeV2_SerialsByPrestageId `json:"serialsByPrestageId,omitempty"`
}

// PrestageScopeV2_SerialsByPrestageId defines model for PrestageScopeV2.SerialsByPrestageId.
type PrestageScopeV2_SerialsByPrestageId struct {
	AdditionalProperties map[string]string `json:"-"`
}

// PrestageSyncStatus defines model for PrestageSyncStatus.
type PrestageSyncStatus struct {
	PrestageId *int    `json:"prestageId,omitempty"`
	SyncState  *string `json:"syncState,omitempty"`
	Timestamp  *string `json:"timestamp,omitempty"`
}

// PrestageSyncStatusV2 defines model for PrestageSyncStatusV2.
type PrestageSyncStatusV2 struct {
	PrestageId *string `json:"prestageId,omitempty"`
	SyncState  *string `json:"syncState,omitempty"`
	Timestamp  *string `json:"timestamp,omitempty"`
}

// ProcessTextsSearchResults defines model for ProcessTextsSearchResults.
type ProcessTextsSearchResults struct {
	Results    *[]EnrollmentProcessTextObject `json:"results,omitempty"`
	TotalCount *int                           `json:"totalCount,omitempty"`
}

// Create an API Client in the Jamf Protect web console to obtain these values.
type ProtectRegistrationRequest struct {
	ClientId   string `json:"clientId"`
	Password   string `json:"password"`
	ProtectUrl string `json:"protectUrl"`
}

// ProtectSettingsResponse defines model for ProtectSettingsResponse.
type ProtectSettingsResponse struct {
	ApiClientId *string `json:"apiClientId,omitempty"`

	// display name used when creating the API Client in the Jamf Protect web console
	ApiClientName *string `json:"apiClientName,omitempty"`

	// determines whether the Jamf Protect agent will be automatically installed on client computers
	AutoInstall  *bool   `json:"autoInstall,omitempty"`
	Id           *string `json:"id,omitempty"`
	LastSyncTime *string `json:"lastSyncTime,omitempty"`
	ProtectUrl   *string `json:"protectUrl,omitempty"`

	// ID used when making requests to identify this particular Protect registration.
	RegistrationId *string                            `json:"registrationId,omitempty"`
	SyncStatus     *ProtectSettingsResponseSyncStatus `json:"syncStatus,omitempty"`
}

// ProtectSettingsResponseSyncStatus defines model for ProtectSettingsResponse.SyncStatus.
type ProtectSettingsResponseSyncStatus string

// ProtectUpdatableSettingsRequest defines model for ProtectUpdatableSettingsRequest.
type ProtectUpdatableSettingsRequest struct {
	// determines whether the Jamf Protect agent will be automatically installed on client computers
	AutoInstall *bool `json:"autoInstall,omitempty"`
}

// ProvisioningProfile defines model for ProvisioningProfile.
type ProvisioningProfile struct {
	DisplayName    *string    `json:"displayName,omitempty"`
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	Uuid           *string    `json:"uuid,omitempty"`
}

// Purchasing defines model for Purchasing.
type Purchasing struct {
	AppleCareId         *string    `json:"appleCareId,omitempty"`
	IsLeased            *bool      `json:"isLeased,omitempty"`
	IsPurchased         *bool      `json:"isPurchased,omitempty"`
	LeaseExpiresDate    *time.Time `json:"leaseExpiresDate,omitempty"`
	LifeExpectancy      *int       `json:"lifeExpectancy,omitempty"`
	PoDate              *time.Time `json:"poDate,omitempty"`
	PoNumber            *string    `json:"poNumber,omitempty"`
	PurchasePrice       *string    `json:"purchasePrice,omitempty"`
	PurchasingAccount   *string    `json:"purchasingAccount,omitempty"`
	PurchasingContact   *string    `json:"purchasingContact,omitempty"`
	Vendor              *string    `json:"vendor,omitempty"`
	WarrantyExpiresDate *time.Time `json:"warrantyExpiresDate,omitempty"`
}

// PurchasingV2 defines model for PurchasingV2.
type PurchasingV2 struct {
	AppleCareId         *string    `json:"appleCareId,omitempty"`
	LeaseExpiresDate    *time.Time `json:"leaseExpiresDate,omitempty"`
	Leased              *bool      `json:"leased,omitempty"`
	LifeExpectancy      *int       `json:"lifeExpectancy,omitempty"`
	PoDate              *time.Time `json:"poDate,omitempty"`
	PoNumber            *string    `json:"poNumber,omitempty"`
	PurchasePrice       *string    `json:"purchasePrice,omitempty"`
	Purchased           *bool      `json:"purchased,omitempty"`
	PurchasingAccount   *string    `json:"purchasingAccount,omitempty"`
	PurchasingContact   *string    `json:"purchasingContact,omitempty"`
	Vendor              *string    `json:"vendor,omitempty"`
	WarrantyExpiresDate *time.Time `json:"warrantyExpiresDate,omitempty"`
}

// PutComputerPrestage defines model for PutComputerPrestage.
type PutComputerPrestage struct {
	// Embedded struct due to allOf(#/components/schemas/ComputerPrestage)
	ComputerPrestage `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	VersionLock *int `json:"versionLock,omitempty"`
}

// PutComputerPrestageV2 defines model for PutComputerPrestageV2.
type PutComputerPrestageV2 struct {
	// Embedded struct due to allOf(#/components/schemas/ComputerPrestageV2)
	ComputerPrestageV2 `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	RecoveryLockPassword *string `json:"recoveryLockPassword,omitempty"`
	VersionLock          *int    `json:"versionLock,omitempty"`
}

// PutMobileDevicePrestage defines model for PutMobileDevicePrestage.
type PutMobileDevicePrestage struct {
	// Embedded struct due to allOf(#/components/schemas/MobileDevicePrestage)
	MobileDevicePrestage `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	VersionLock *int `json:"versionLock,omitempty"`
}

// PutMobileDevicePrestageV2 defines model for PutMobileDevicePrestageV2.
type PutMobileDevicePrestageV2 struct {
	// Embedded struct due to allOf(#/components/schemas/MobileDevicePrestageV2)
	MobileDevicePrestageV2 `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	VersionLock *int `json:"versionLock,omitempty"`
}

// RecalculationResults defines model for RecalculationResults.
type RecalculationResults struct {
	Count *int `json:"count,omitempty"`
}

// Recipient defines model for Recipient.
type Recipient struct {
	Email    *string `json:"email,omitempty"`
	Id       *int    `json:"id,omitempty"`
	RealName *string `json:"realName,omitempty"`
}

// Recipients defines model for Recipients.
type Recipients struct {
	RecipientList *[]Recipient `json:"recipientList,omitempty"`
}

// RedeployJamfManagementFrameworkResponse defines model for RedeployJamfManagementFrameworkResponse.
type RedeployJamfManagementFrameworkResponse struct {
	CommandUuid *string `json:"commandUuid,omitempty"`
	DeviceId    *string `json:"deviceId,omitempty"`
}

// Reenrollment defines model for Reenrollment.
type Reenrollment struct {
	FlushMDMQueue                            ReenrollmentFlushMDMQueue `json:"flushMDMQueue"`
	IsFlushExtensionAttributesEnabled        *bool                     `json:"isFlushExtensionAttributesEnabled,omitempty"`
	IsFlushLocationInformationEnabled        *bool                     `json:"isFlushLocationInformationEnabled,omitempty"`
	IsFlushLocationInformationHistoryEnabled *bool                     `json:"isFlushLocationInformationHistoryEnabled,omitempty"`
	IsFlushPolicyHistoryEnabled              *bool                     `json:"isFlushPolicyHistoryEnabled,omitempty"`
}

// ReenrollmentFlushMDMQueue defines model for Reenrollment.FlushMDMQueue.
type ReenrollmentFlushMDMQueue string

// A Remote administration response
type RemoteAdministrationResponse struct {
	DisplayName *string                           `json:"displayName,omitempty"`
	Id          *string                           `json:"id,omitempty"`
	SiteId      *string                           `json:"siteId,omitempty"`
	Type        *RemoteAdministrationResponseType `json:"type,omitempty"`
}

// RemoteAdministrationResponseType defines model for RemoteAdministrationResponse.Type.
type RemoteAdministrationResponseType string

// A list with Remote administration configurations
type RemoteAdministrationSearchResults struct {
	Results    *[]RemoteAdministrationResponse `json:"results,omitempty"`
	TotalCount *int                            `json:"totalCount,omitempty"`
}

// RenewMdmProfileResponse defines model for RenewMdmProfileResponse.
type RenewMdmProfileResponse struct {
	UdidsNotProcessed *Udids `json:"udidsNotProcessed,omitempty"`
}

// RestartDeviceCommand defines model for RestartDeviceCommand.
type RestartDeviceCommand struct {
	// Only used if RebuildKernelCache is true
	KextPaths          *[]string `json:"kextPaths,omitempty"`
	NotifyUser         *bool     `json:"notifyUser,omitempty"`
	RebuildKernelCache *bool     `json:"rebuildKernelCache,omitempty"`
}

// RetryPatchPolicyParams defines model for RetryPatchPolicyParams.
type RetryPatchPolicyParams struct {
	DeviceIds        *[]int `json:"deviceIds,omitempty"`
	IsRetryAllFailed *bool  `json:"isRetryAllFailed,omitempty"`
	PatchPolicyId    *int   `json:"patchPolicyId,omitempty"`
}

// SafelistedApps defines model for SafelistedApps.
type SafelistedApps []struct {
	BundleId *string `json:"bundleId,omitempty"`
	Name     *string `json:"name,omitempty"`
}

// Script defines model for Script.
type Script struct {
	CategoryId     *string         `json:"categoryId,omitempty"`
	CategoryName   *string         `json:"categoryName,omitempty"`
	Id             *string         `json:"id,omitempty"`
	Info           *string         `json:"info,omitempty"`
	Name           string          `json:"name"`
	Notes          *string         `json:"notes,omitempty"`
	OsRequirements *string         `json:"osRequirements,omitempty"`
	Parameter10    *string         `json:"parameter10,omitempty"`
	Parameter11    *string         `json:"parameter11,omitempty"`
	Parameter4     *string         `json:"parameter4,omitempty"`
	Parameter5     *string         `json:"parameter5,omitempty"`
	Parameter6     *string         `json:"parameter6,omitempty"`
	Parameter7     *string         `json:"parameter7,omitempty"`
	Parameter8     *string         `json:"parameter8,omitempty"`
	Parameter9     *string         `json:"parameter9,omitempty"`
	Priority       *ScriptPriority `json:"priority,omitempty"`
	ScriptContents *string         `json:"scriptContents,omitempty"`
}

// ScriptPriority defines model for Script.Priority.
type ScriptPriority string

// ScriptsSearchResults defines model for ScriptsSearchResults.
type ScriptsSearchResults struct {
	Results    *[]Script `json:"results,omitempty"`
	TotalCount *int      `json:"totalCount,omitempty"`
}

// SearchActivePatchHistoryParams defines model for SearchActivePatchHistoryParams.
type SearchActivePatchHistoryParams struct {
	Filter                       *[]Filter  `json:"filter,omitempty"`
	IsLoadToEnd                  *bool      `json:"isLoadToEnd,omitempty"`
	OrderBy                      *[]OrderBy `json:"orderBy,omitempty"`
	PageNumber                   *int       `json:"pageNumber,omitempty"`
	PageSize                     *int       `json:"pageSize,omitempty"`
	SoftwareTitleConfigurationID *int       `json:"softwareTitleConfigurationID,omitempty"`
	SoftwareTitleID              *int       `json:"softwareTitleID,omitempty"`
}

// SearchPatchPolicyLogParams defines model for SearchPatchPolicyLogParams.
type SearchPatchPolicyLogParams struct {
	Filter        *[]Filter  `json:"filter,omitempty"`
	IsLatest      *bool      `json:"isLatest,omitempty"`
	IsLoadToEnd   *bool      `json:"isLoadToEnd,omitempty"`
	OrderBy       *[]OrderBy `json:"orderBy,omitempty"`
	PageNumber    *int       `json:"pageNumber,omitempty"`
	PageSize      *int       `json:"pageSize,omitempty"`
	PatchPolicyId *int       `json:"patchPolicyId,omitempty"`
}

// Security defines model for Security.
type Security struct {
	HardwareEncryption             *int  `json:"hardwareEncryption,omitempty"`
	IsActivationLockEnabled        *bool `json:"isActivationLockEnabled,omitempty"`
	IsBlockLevelEncryptionCapable  *bool `json:"isBlockLevelEncryptionCapable,omitempty"`
	IsDataProtected                *bool `json:"isDataProtected,omitempty"`
	IsFileLevelEncryptionCapable   *bool `json:"isFileLevelEncryptionCapable,omitempty"`
	IsJailBreakDetected            *bool `json:"isJailBreakDetected,omitempty"`
	IsPasscodeCompliant            *bool `json:"isPasscodeCompliant,omitempty"`
	IsPasscodeCompliantWithProfile *bool `json:"isPasscodeCompliantWithProfile,omitempty"`
	IsPasscodePresent              *bool `json:"isPasscodePresent,omitempty"`
}

// SecurityV2 defines model for SecurityV2.
type SecurityV2 struct {
	ActivationLockEnabled        *bool `json:"activationLockEnabled,omitempty"`
	BlockLevelEncryptionCapable  *bool `json:"blockLevelEncryptionCapable,omitempty"`
	DataProtected                *bool `json:"dataProtected,omitempty"`
	FileLevelEncryptionCapable   *bool `json:"fileLevelEncryptionCapable,omitempty"`
	HardwareEncryption           *int  `json:"hardwareEncryption,omitempty"`
	JailBreakDetected            *bool `json:"jailBreakDetected,omitempty"`
	PasscodeCompliant            *bool `json:"passcodeCompliant,omitempty"`
	PasscodeCompliantWithProfile *bool `json:"passcodeCompliantWithProfile,omitempty"`
	PasscodePresent              *bool `json:"passcodePresent,omitempty"`
}

// object representation of Self Service settings regarding installation
type SelfServiceInstallSettings struct {
	// true if Self Service is insalled automatically, false if not
	InstallAutomatically *bool `json:"installAutomatically,omitempty"`

	// path at which Self Service is installed
	InstallLocation string `json:"installLocation"`
}

// object representation of Self Service settings regarding user interaction
type SelfServiceInteractionSettings struct {
	// whether users should be notified they need to approve organization's MDM profile
	AlertUserApprovedMdm *bool `json:"alertUserApprovedMdm,omitempty"`

	// renamed string for bookmarks if the admin wishes
	BookmarksName string `json:"bookmarksName"`

	// id for the default home category in Self Service
	DefaultHomeCategoryId *int32 `json:"defaultHomeCategoryId,omitempty"`

	// the default landing page in Self Service
	DefaultLandingPage *SelfServiceInteractionSettingsDefaultLandingPage `json:"defaultLandingPage,omitempty"`

	// global Self Service setting for if notifications are on or off
	NotificationsEnabled *bool `json:"notificationsEnabled,omitempty"`
}

// the default landing page in Self Service
type SelfServiceInteractionSettingsDefaultLandingPage string

// object representation of Self Service settings regarding login
type SelfServiceLoginSettings struct {
	// true if remember me functionality is allowed, false if not
	AllowRememberMe *bool `json:"allowRememberMe,omitempty"`

	// login type to be used when asking users to log in
	AuthType SelfServiceLoginSettingsAuthType `json:"authType"`

	// login setting to tell clients how to let users log in
	UserLoginLevel SelfServiceLoginSettingsUserLoginLevel `json:"userLoginLevel"`
}

// login type to be used when asking users to log in
type SelfServiceLoginSettingsAuthType string

// login setting to tell clients how to let users log in
type SelfServiceLoginSettingsUserLoginLevel string

// object representation of Self Service settings
type SelfServiceSettings struct {
	// object representation of Self Service settings regarding user interaction
	ConfigurationSettings *SelfServiceInteractionSettings `json:"configurationSettings,omitempty"`

	// object representation of Self Service settings regarding installation
	InstallSettings *SelfServiceInstallSettings `json:"installSettings,omitempty"`

	// object representation of Self Service settings regarding login
	LoginSettings *SelfServiceLoginSettings `json:"loginSettings,omitempty"`
}

// Session defines model for Session.
type Session struct {
	CurrentSiteId *int `json:"currentSiteId,omitempty"`
}

// Request to crate new remote session. Ultimately this allows connection between an admin and an end-user
type SessionCandidateRequest struct {
	// Session description. To be used for additional context on the reason of the session
	Description string `json:"description"`

	// Device identifier
	DeviceId string `json:"deviceId"`

	// Device type
	DeviceType SessionCandidateRequestDeviceType `json:"deviceType"`
}

// Device type
type SessionCandidateRequestDeviceType string

// Session details
type SessionDetails struct {
	// Sessions code
	Code *string `json:"code,omitempty"`

	// Session creation time
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// ID of session creator if session created by Jamf Pro local user, null otherwise
	CreatorId *string `json:"creatorId,omitempty"`

	// Username of the session creator
	CreatorName *string `json:"creatorName,omitempty"`

	// Session description. To be used for additional context on the reason of the session
	Description *string `json:"description,omitempty"`

	// Device identifier
	DeviceId *string `json:"deviceId,omitempty"`

	// Device name if found - null otherwise
	DeviceName *string `json:"deviceName,omitempty"`

	// Device type
	DeviceType *SessionDetailsDeviceType `json:"deviceType,omitempty"`

	// End user session URL
	EndUserLink *string `json:"endUserLink,omitempty"`

	// Session identifier
	Id *string `json:"id,omitempty"`

	// Session state
	State *SessionDetailsState `json:"state,omitempty"`

	// Supporter session URL
	SupporterLink *string `json:"supporterLink,omitempty"`
}

// Device type
type SessionDetailsDeviceType string

// Session state
type SessionDetailsState string

// Sessions search result
type SessionDetailsSearchResults struct {
	Results    *[]SessionDetails `json:"results,omitempty"`
	TotalCount *int              `json:"totalCount,omitempty"`
}

// Session status
type SessionStatus struct {
	// Defines if the end user is online
	Online *bool `json:"online,omitempty"`

	// Session state
	SessionState *SessionStatusSessionState `json:"sessionState,omitempty"`
}

// Session state
type SessionStatusSessionState string

// SetRecoveryLockCommand defines model for SetRecoveryLockCommand.
type SetRecoveryLockCommand struct {
	// The new password for Recovery Lock. Set as an empty string to clear the Recovery Lock password.
	NewPassword *string `json:"newPassword,omitempty"`
}

// SettingsCommand defines model for SettingsCommand.
type SettingsCommand struct {
	AppAnalytics              *AppAnalyticsSetting         `json:"appAnalytics,omitempty"`
	ApplicationAttributes     *ApplicationAttributes       `json:"applicationAttributes,omitempty"`
	ApplicationConfiguration  *ApplicationConfiguration    `json:"applicationConfiguration,omitempty"`
	Bluetooth                 *bool                        `json:"bluetooth,omitempty"`
	BootstrapTokenAllowed     *bool                        `json:"bootstrapTokenAllowed,omitempty"`
	DataRoaming               *DataRoamingSetting          `json:"dataRoaming,omitempty"`
	DeviceName                *string                      `json:"deviceName,omitempty"`
	DiagnosticSubmission      *DiagnosticSubmissionSetting `json:"diagnosticSubmission,omitempty"`
	MaximumResidentUsers      *int                         `json:"maximumResidentUsers,omitempty"`
	PersonalHotspot           *PersonalHotspotSetting      `json:"personalHotspot,omitempty"`
	SharedDeviceConfiguration *SharedDeviceConfiguration   `json:"sharedDeviceConfiguration,omitempty"`
	SoftwareUpdateSettings    *SoftwareUpdateSettings      `json:"softwareUpdateSettings,omitempty"`
	TimeZone                  *string                      `json:"timeZone,omitempty"`
	VoiceRoaming              *VoiceRoamingSetting         `json:"voiceRoaming,omitempty"`
}

// SharedDeviceConfiguration defines model for SharedDeviceConfiguration.
type SharedDeviceConfiguration struct {
	QuotaSize     *int `json:"quotaSize,omitempty"`
	ResidentUsers *int `json:"residentUsers,omitempty"`
}

// Signature defines model for Signature.
type Signature struct {
	Algorithm    *string `json:"algorithm,omitempty"`
	AlgorithmOid *string `json:"algorithmOid,omitempty"`
	Value        *string `json:"value,omitempty"`
}

// Site defines model for Site.
type Site struct {
	Id   *int    `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// SmartSearchCriterion defines model for SmartSearchCriterion.
type SmartSearchCriterion struct {
	AndOr        *string `json:"andOr,omitempty"`
	ClosingParen *bool   `json:"closingParen,omitempty"`
	Name         *string `json:"name,omitempty"`
	OpeningParen *bool   `json:"openingParen,omitempty"`
	Priority     *int    `json:"priority,omitempty"`
	SearchType   *string `json:"searchType,omitempty"`
	Value        *string `json:"value,omitempty"`
}

// SoftwareTitleConfiguration defines model for SoftwareTitleConfiguration.
type SoftwareTitleConfiguration struct {
	DisplayName *string `json:"displayName,omitempty"`
	Id          *int    `json:"id,omitempty"`
}

// SoftwareTitlePatchPolicySummaries defines model for SoftwareTitlePatchPolicySummaries.
type SoftwareTitlePatchPolicySummaries struct {
	Results    *[]PatchPolicySummary `json:"results,omitempty"`
	TotalCount *int                  `json:"totalCount,omitempty"`
}

// SoftwareUpdateSettings defines model for SoftwareUpdateSettings.
type SoftwareUpdateSettings struct {
	RecommendationCadence *SoftwareUpdateSettingsRecommendationCadence `json:"recommendationCadence,omitempty"`
}

// SoftwareUpdateSettingsRecommendationCadence defines model for SoftwareUpdateSettings.RecommendationCadence.
type SoftwareUpdateSettingsRecommendationCadence string

// SsoKeystore defines model for SsoKeystore.
type SsoKeystore struct {
	// Embedded struct due to allOf(#/components/schemas/SsoKeystoreParse)
	SsoKeystoreParse `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Key               string                        `json:"key"`
	Keys              *[]CertificateKey             `json:"keys,omitempty"`
	KeystoreSetupType *SsoKeystoreKeystoreSetupType `json:"keystoreSetupType,omitempty"`
	Password          string                        `json:"password"`
	Type              SsoKeystoreType               `json:"type"`
}

// SsoKeystoreKeystoreSetupType defines model for SsoKeystore.KeystoreSetupType.
type SsoKeystoreKeystoreSetupType string

// SsoKeystoreType defines model for SsoKeystore.Type.
type SsoKeystoreType string

// SsoKeystoreCertParseResponse defines model for SsoKeystoreCertParseResponse.
type SsoKeystoreCertParseResponse struct {
	Key               *string                                        `json:"key,omitempty"`
	Keys              *[]CertificateKey                              `json:"keys,omitempty"`
	KeystoreFile      *[][]byte                                      `json:"keystoreFile,omitempty"`
	KeystoreFileName  *string                                        `json:"keystoreFileName,omitempty"`
	KeystoreSetupType *SsoKeystoreCertParseResponseKeystoreSetupType `json:"keystoreSetupType,omitempty"`
	Type              *SsoKeystoreCertParseResponseType              `json:"type,omitempty"`
}

// SsoKeystoreCertParseResponseKeystoreSetupType defines model for SsoKeystoreCertParseResponse.KeystoreSetupType.
type SsoKeystoreCertParseResponseKeystoreSetupType string

// SsoKeystoreCertParseResponseType defines model for SsoKeystoreCertParseResponse.Type.
type SsoKeystoreCertParseResponseType string

// SsoKeystoreDetails defines model for SsoKeystoreDetails.
type SsoKeystoreDetails struct {
	Expiration   *string   `json:"expiration,omitempty"`
	Issuer       *string   `json:"issuer,omitempty"`
	Keys         *[]string `json:"keys,omitempty"`
	SerialNumber *int      `json:"serialNumber,omitempty"`
	Subject      *string   `json:"subject,omitempty"`
}

// SsoKeystoreParse defines model for SsoKeystoreParse.
type SsoKeystoreParse struct {
	KeystoreFile     []byte `json:"keystoreFile"`
	KeystoreFileName string `json:"keystoreFileName"`
	KeystorePassword string `json:"keystorePassword"`
}

// SsoKeystoreResponse defines model for SsoKeystoreResponse.
type SsoKeystoreResponse struct {
	Key               *string                               `json:"key,omitempty"`
	Keys              *[]CertificateKey                     `json:"keys,omitempty"`
	KeystoreFileName  *string                               `json:"keystoreFileName,omitempty"`
	KeystoreSetupType *SsoKeystoreResponseKeystoreSetupType `json:"keystoreSetupType,omitempty"`
	Type              *SsoKeystoreResponseType              `json:"type,omitempty"`
}

// SsoKeystoreResponseKeystoreSetupType defines model for SsoKeystoreResponse.KeystoreSetupType.
type SsoKeystoreResponseKeystoreSetupType string

// SsoKeystoreResponseType defines model for SsoKeystoreResponse.Type.
type SsoKeystoreResponseType string

// SsoKeystoreResponseWithDetails defines model for SsoKeystoreResponseWithDetails.
type SsoKeystoreResponseWithDetails struct {
	Keystore        *SsoKeystoreResponse `json:"keystore,omitempty"`
	KeystoreDetails *SsoKeystoreDetails  `json:"keystoreDetails,omitempty"`
}

// SsoKeystoreWithDetails defines model for SsoKeystoreWithDetails.
type SsoKeystoreWithDetails struct {
	Keystore        *SsoKeystore        `json:"keystore,omitempty"`
	KeystoreDetails *SsoKeystoreDetails `json:"keystoreDetails,omitempty"`
}

// SsoMetadataUrl defines model for SsoMetadataUrl.
type SsoMetadataUrl struct {
	IdpUrl string `json:"idpUrl"`
}

// SsoSettings defines model for SsoSettings.
type SsoSettings struct {
	EntityId                      string                     `json:"entityId"`
	FederationMetadataFile        *[]byte                    `json:"federationMetadataFile,omitempty"`
	GroupAttributeName            string                     `json:"groupAttributeName"`
	GroupEnrollmentAccessEnabled  bool                       `json:"groupEnrollmentAccessEnabled"`
	GroupEnrollmentAccessName     *string                    `json:"groupEnrollmentAccessName,omitempty"`
	GroupRdnKey                   string                     `json:"groupRdnKey"`
	IdpProviderType               SsoSettingsIdpProviderType `json:"idpProviderType"`
	IdpUrl                        *string                    `json:"idpUrl,omitempty"`
	MetadataFileName              *string                    `json:"metadataFileName,omitempty"`
	MetadataSource                SsoSettingsMetadataSource  `json:"metadataSource"`
	OtherProviderTypeName         *string                    `json:"otherProviderTypeName,omitempty"`
	SessionTimeout                *int32                     `json:"sessionTimeout,omitempty"`
	SsoBypassAllowed              bool                       `json:"ssoBypassAllowed"`
	SsoEnabled                    bool                       `json:"ssoEnabled"`
	SsoForEnrollmentEnabled       bool                       `json:"ssoForEnrollmentEnabled"`
	SsoForMacOsSelfServiceEnabled bool                       `json:"ssoForMacOsSelfServiceEnabled"`
	TokenExpirationDisabled       bool                       `json:"tokenExpirationDisabled"`
	UserAttributeEnabled          bool                       `json:"userAttributeEnabled"`
	UserAttributeName             *string                    `json:"userAttributeName,omitempty"`
	UserMapping                   SsoSettingsUserMapping     `json:"userMapping"`
}

// SsoSettingsIdpProviderType defines model for SsoSettings.IdpProviderType.
type SsoSettingsIdpProviderType string

// SsoSettingsMetadataSource defines model for SsoSettings.MetadataSource.
type SsoSettingsMetadataSource string

// SsoSettingsUserMapping defines model for SsoSettings.UserMapping.
type SsoSettingsUserMapping string

// StartupStatus defines model for StartupStatus.
type StartupStatus struct {
	Error        *string                   `json:"error,omitempty"`
	ErrorCode    *StartupStatusErrorCode   `json:"errorCode,omitempty"`
	Percentage   *int                      `json:"percentage,omitempty"`
	Step         *string                   `json:"step,omitempty"`
	StepCode     *StartupStatusStepCode    `json:"stepCode,omitempty"`
	StepParam    *string                   `json:"stepParam,omitempty"`
	Warning      *string                   `json:"warning,omitempty"`
	WarningCode  *StartupStatusWarningCode `json:"warningCode,omitempty"`
	WarningParam *string                   `json:"warningParam,omitempty"`
}

// StartupStatusErrorCode defines model for StartupStatus.ErrorCode.
type StartupStatusErrorCode string

// StartupStatusStepCode defines model for StartupStatus.StepCode.
type StartupStatusStepCode string

// StartupStatusWarningCode defines model for StartupStatus.WarningCode.
type StartupStatusWarningCode string

// StaticUserGroup defines model for StaticUserGroup.
type StaticUserGroup struct {
	Id   *int    `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// SupervisionIdentity defines model for SupervisionIdentity.
type SupervisionIdentity struct {
	CommonName     *string `json:"commonName,omitempty"`
	DisplayName    *string `json:"displayName,omitempty"`
	ExpirationDate *string `json:"expirationDate,omitempty"`
	Id             *int    `json:"id,omitempty"`
}

// SupervisionIdentityCertificateUpload defines model for SupervisionIdentityCertificateUpload.
type SupervisionIdentityCertificateUpload struct {
	// The base 64 encoded supervision identity certificate data
	CertificateData *[]byte `json:"certificateData,omitempty"`
	DisplayName     string  `json:"displayName"`
	Password        string  `json:"password"`
}

// SupervisionIdentityCreate defines model for SupervisionIdentityCreate.
type SupervisionIdentityCreate struct {
	DisplayName string `json:"displayName"`
	Password    string `json:"password"`
}

// SupervisionIdentitySearchResults defines model for SupervisionIdentitySearchResults.
type SupervisionIdentitySearchResults struct {
	Results    *[]SupervisionIdentity `json:"results,omitempty"`
	TotalCount *int                   `json:"totalCount,omitempty"`
}

// SupervisionIdentityUpdate defines model for SupervisionIdentityUpdate.
type SupervisionIdentityUpdate struct {
	DisplayName string `json:"displayName"`
}

// TeacherFeatures defines model for TeacherFeatures.
type TeacherFeatures struct {
	IsAllowAppLock         *bool `json:"isAllowAppLock,omitempty"`
	IsAllowAttentionScreen *bool `json:"isAllowAttentionScreen,omitempty"`
	IsAllowClearPasscode   *bool `json:"isAllowClearPasscode,omitempty"`
	IsAllowRestrictions    *bool `json:"isAllowRestrictions,omitempty"`
	IsAllowWebLock         *bool `json:"isAllowWebLock,omitempty"`
}

// TeacherSettingsRequest defines model for TeacherSettingsRequest.
type TeacherSettingsRequest struct {
	AutoClear                   *string         `json:"autoClear"`
	IsEnabled                   *bool           `json:"isEnabled,omitempty"`
	MaxRestrictionLengthSeconds *int            `json:"maxRestrictionLengthSeconds,omitempty"`
	SafelistedApps              *SafelistedApps `json:"safelistedApps,omitempty"`
	TimezoneId                  *string         `json:"timezoneId,omitempty"`
}

// TeacherSettingsResponse defines model for TeacherSettingsResponse.
type TeacherSettingsResponse struct {
	AutoClear                   *string          `json:"autoClear,omitempty"`
	DisplayNameType             *string          `json:"displayNameType,omitempty"`
	Features                    *TeacherFeatures `json:"features,omitempty"`
	IsEnabled                   *bool            `json:"isEnabled,omitempty"`
	MaxRestrictionLengthSeconds *int             `json:"maxRestrictionLengthSeconds,omitempty"`
	SafelistedApps              *SafelistedApps  `json:"safelistedApps,omitempty"`
	TimezoneId                  *string          `json:"timezoneId,omitempty"`
}

// TimeFrame defines model for TimeFrame.
type TimeFrame struct {
	BeginTime *string `json:"beginTime,omitempty"`
	EndTime   *string `json:"endTime,omitempty"`
}

// TimeZone defines model for TimeZone.
type TimeZone struct {
	DisplayName *string         `json:"displayName,omitempty"`
	Region      *TimeZoneRegion `json:"region,omitempty"`
	ZoneId      *string         `json:"zoneId,omitempty"`
}

// TimeZoneRegion defines model for TimeZone.Region.
type TimeZoneRegion string

// will be populated if the type is appleTv.
type TvOsDetails struct {
	AirplayPassword       *string                 `json:"airplayPassword,omitempty"`
	ConfigurationProfiles *[]ConfigurationProfile `json:"configurationProfiles,omitempty"`
	DeviceId              *string                 `json:"deviceId,omitempty"`
	Locales               *string                 `json:"locales,omitempty"`
	Model                 *string                 `json:"model,omitempty"`
	ModelIdentifier       *string                 `json:"modelIdentifier,omitempty"`
	ModelNumber           *string                 `json:"modelNumber,omitempty"`
	Purchasing            *PurchasingV2           `json:"purchasing,omitempty"`
	Supervised            *bool                   `json:"supervised,omitempty"`
}

// Udids defines model for Udids.
type Udids struct {
	Udids *[]string `json:"udids,omitempty"`
}

// UpdateAppleTv defines model for UpdateAppleTv.
type UpdateAppleTv struct {
	AirplayPassword *string     `json:"airplayPassword,omitempty"`
	Purchasing      *Purchasing `json:"purchasing,omitempty"`
}

// UpdateIos defines model for UpdateIos.
type UpdateIos struct {
	Purchasing *Purchasing `json:"purchasing,omitempty"`
}

// UpdateIosV2 defines model for UpdateIosV2.
type UpdateIosV2 struct {
	Purchasing *PurchasingV2 `json:"purchasing,omitempty"`
}

// UpdateMobileDevice defines model for UpdateMobileDevice.
type UpdateMobileDevice struct {
	AppleTv                    *UpdateAppleTv        `json:"appleTv,omitempty"`
	AssetTag                   *string               `json:"assetTag,omitempty"`
	Ios                        *UpdateIos            `json:"ios,omitempty"`
	Location                   *Location             `json:"location,omitempty"`
	Name                       *string               `json:"name,omitempty"`
	SiteId                     *int                  `json:"siteId,omitempty"`
	UpdatedExtensionAttributes *[]ExtensionAttribute `json:"updatedExtensionAttributes,omitempty"`
}

// UpdateMobileDeviceV2 defines model for UpdateMobileDeviceV2.
type UpdateMobileDeviceV2 struct {
	AssetTag *string `json:"assetTag,omitempty"`

	// Enforce the mobile device name. Device must be supervised. If set to true, Jamf Pro will revert the Mobile Device Name to the ‘name’ value each time the device checks in.
	EnforceName *bool        `json:"enforceName,omitempty"`
	Ios         *UpdateIosV2 `json:"ios,omitempty"`
	Location    *LocationV2  `json:"location,omitempty"`

	// Mobile Device Name. When updated, Jamf Pro sends an MDM settings command to the device (device must be supervised).
	Name   *string `json:"name,omitempty"`
	SiteId *string `json:"siteId,omitempty"`

	// IANA time zone database name
	TimeZone                   *string                 `json:"timeZone,omitempty"`
	Tvos                       *UpdateTvOs             `json:"tvos,omitempty"`
	UpdatedExtensionAttributes *[]ExtensionAttributeV2 `json:"updatedExtensionAttributes,omitempty"`
}

// UpdateTvOs defines model for UpdateTvOs.
type UpdateTvOs struct {
	AirplayPassword *string       `json:"airplayPassword,omitempty"`
	Purchasing      *PurchasingV2 `json:"purchasing,omitempty"`
}

// UserAttributes defines model for UserAttributes.
type UserAttributes struct {
	BuildingId   *string `json:"buildingId,omitempty"`
	DepartmentId *string `json:"departmentId,omitempty"`
	EmailAddress *string `json:"emailAddress,omitempty"`
	FullName     *string `json:"fullName,omitempty"`
	PhoneNumber  *string `json:"phoneNumber,omitempty"`
	Position     *string `json:"position,omitempty"`
	Room         *string `json:"room,omitempty"`
}

// Cloud Identity Provider user mappings configuration
type UserMappings struct {
	AdditionalSearchBase  *string                           `json:"additionalSearchBase,omitempty"`
	Building              string                            `json:"building"`
	Department            string                            `json:"department"`
	EmailAddress          string                            `json:"emailAddress"`
	ObjectClassLimitation UserMappingsObjectClassLimitation `json:"objectClassLimitation"`
	ObjectClasses         string                            `json:"objectClasses"`
	Phone                 string                            `json:"phone"`
	Position              string                            `json:"position"`
	RealName              string                            `json:"realName"`
	Room                  string                            `json:"room"`
	SearchBase            string                            `json:"searchBase"`
	SearchScope           UserMappingsSearchScope           `json:"searchScope"`
	UserID                string                            `json:"userID"`
	UserUuid              string                            `json:"userUuid"`
	Username              string                            `json:"username"`
}

// UserMappingsObjectClassLimitation defines model for UserMappings.ObjectClassLimitation.
type UserMappingsObjectClassLimitation string

// UserMappingsSearchScope defines model for UserMappings.SearchScope.
type UserMappingsSearchScope string

// Valid JSON of any client-desired structure
type UserPreferencesJson map[string]interface{}

// UserTestSearch defines model for UserTestSearch.
type UserTestSearch struct {
	Attributes        *UserAttributes `json:"attributes,omitempty"`
	DistinguishedName *string         `json:"distinguishedName,omitempty"`
	Id                *string         `json:"id,omitempty"`
	Name              *string         `json:"name,omitempty"`
	ServerId          *string         `json:"serverId,omitempty"`
	Uuid              *string         `json:"uuid,omitempty"`
}

// UserTestSearchRequest defines model for UserTestSearchRequest.
type UserTestSearchRequest struct {
	Username string `json:"username"`
}

// UserTestSearchResponse defines model for UserTestSearchResponse.
type UserTestSearchResponse struct {
	Results    *[]UserTestSearch `json:"results,omitempty"`
	TotalCount *int              `json:"totalCount,omitempty"`
}

// V1Site defines model for V1Site.
type V1Site struct {
	Id   *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// VenafiCaRecord defines model for VenafiCaRecord.
type VenafiCaRecord struct {
	ClientId               *string `json:"clientId,omitempty"`
	Id                     *int    `json:"id,omitempty"`
	Name                   string  `json:"name"`
	Password               *string `json:"password,omitempty"`
	PasswordConfigured     *bool   `json:"passwordConfigured,omitempty"`
	ProxyAddress           *string `json:"proxyAddress,omitempty"`
	RefreshToken           *string `json:"refreshToken,omitempty"`
	RefreshTokenConfigured *bool   `json:"refreshTokenConfigured,omitempty"`
	RevocationEnabled      *bool   `json:"revocationEnabled,omitempty"`
	Username               *string `json:"username,omitempty"`
}

// VenafiPkiPayloadRecord defines model for VenafiPkiPayloadRecord.
type VenafiPkiPayloadRecord struct {
	Name    *string `json:"name,omitempty"`
	UrlPath *string `json:"urlPath,omitempty"`
}

// VenafiPkiPayloadRecordSearchResults defines model for VenafiPkiPayloadRecordSearchResults.
type VenafiPkiPayloadRecordSearchResults struct {
	Results    *[]VenafiPkiPayloadRecord `json:"results,omitempty"`
	TotalCount *int                      `json:"totalCount,omitempty"`
}

// VenafiServiceStatus defines model for VenafiServiceStatus.
type VenafiServiceStatus struct {
	Status *string `json:"status,omitempty"`
}

// VerbosePackageDeploymentResponse defines model for VerbosePackageDeploymentResponse.
type VerbosePackageDeploymentResponse struct {
	Errors *[]struct {
		Device *int    `json:"device,omitempty"`
		Group  *int    `json:"group,omitempty"`
		Reason *string `json:"reason,omitempty"`
	} `json:"errors,omitempty"`
	QueuedCommands *[]struct {
		CommandUuid *string `json:"commandUuid,omitempty"`
		Device      *int    `json:"device,omitempty"`
	} `json:"queuedCommands,omitempty"`
}

// VoiceRoamingSetting defines model for VoiceRoamingSetting.
type VoiceRoamingSetting string

// VolumePurchasingContent defines model for VolumePurchasingContent.
type VolumePurchasingContent struct {
	AdamId               *string                               `json:"adamId,omitempty"`
	ContentType          *VolumePurchasingContentContentType   `json:"contentType,omitempty"`
	DeviceTypes          *[]VolumePurchasingContentDeviceTypes `json:"deviceTypes,omitempty"`
	IconUrl              *string                               `json:"iconUrl,omitempty"`
	LicenseCountInUse    *int                                  `json:"licenseCountInUse,omitempty"`
	LicenseCountReported *int                                  `json:"licenseCountReported,omitempty"`
	LicenseCountTotal    *int                                  `json:"licenseCountTotal,omitempty"`
	Name                 *string                               `json:"name,omitempty"`
	PricingParam         *VolumePurchasingContentPricingParam  `json:"pricingParam,omitempty"`
}

// VolumePurchasingContentContentType defines model for VolumePurchasingContent.ContentType.
type VolumePurchasingContentContentType string

// VolumePurchasingContentDeviceTypes defines model for VolumePurchasingContent.DeviceTypes.
type VolumePurchasingContentDeviceTypes string

// VolumePurchasingContentPricingParam defines model for VolumePurchasingContent.PricingParam.
type VolumePurchasingContentPricingParam string

// VolumePurchasingLocation defines model for VolumePurchasingLocation.
type VolumePurchasingLocation struct {
	// Embedded struct due to allOf(#/components/schemas/VolumePurchasingLocationListView)
	VolumePurchasingLocationListView `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Content *[]VolumePurchasingContent `json:"content,omitempty"`
}

// VolumePurchasingLocationListView defines model for VolumePurchasingLocationListView.
type VolumePurchasingLocationListView struct {
	AppleId                               *string `json:"appleId,omitempty"`
	AutoRegisterManagedUsers              *bool   `json:"autoRegisterManagedUsers,omitempty"`
	AutomaticallyPopulatePurchasedContent *bool   `json:"automaticallyPopulatePurchasedContent,omitempty"`

	// If this is "true", the clientContext used by this server does not match the clientContext returned by the Volume Purchasing API.
	ClientContextMismatch *bool `json:"clientContextMismatch,omitempty"`

	// The two-letter ISO 3166-1 code that designates the country where the Volume Purchasing account is located.
	CountryCode                          *string `json:"countryCode,omitempty"`
	Id                                   *string `json:"id,omitempty"`
	LocationName                         *string `json:"locationName,omitempty"`
	Name                                 *string `json:"name,omitempty"`
	OrganizationName                     *string `json:"organizationName,omitempty"`
	SendNotificationWhenNoLongerAssigned *bool   `json:"sendNotificationWhenNoLongerAssigned,omitempty"`
	SiteId                               *string `json:"siteId,omitempty"`
	TokenExpiration                      *string `json:"tokenExpiration,omitempty"`
	TotalPurchasedLicenses               *int    `json:"totalPurchasedLicenses,omitempty"`
	TotalUsedLicenses                    *int    `json:"totalUsedLicenses,omitempty"`
}

// VolumePurchasingLocationPatch defines model for VolumePurchasingLocationPatch.
type VolumePurchasingLocationPatch struct {
	AutoRegisterManagedUsers              *bool   `json:"autoRegisterManagedUsers,omitempty"`
	AutomaticallyPopulatePurchasedContent *bool   `json:"automaticallyPopulatePurchasedContent,omitempty"`
	Name                                  *string `json:"name,omitempty"`
	SendNotificationWhenNoLongerAssigned  *bool   `json:"sendNotificationWhenNoLongerAssigned,omitempty"`
	ServiceToken                          *string `json:"serviceToken,omitempty"`
	SiteId                                *string `json:"siteId,omitempty"`
}

// VolumePurchasingLocationPost defines model for VolumePurchasingLocationPost.
type VolumePurchasingLocationPost struct {
	AutoRegisterManagedUsers              *bool `json:"autoRegisterManagedUsers,omitempty"`
	AutomaticallyPopulatePurchasedContent *bool `json:"automaticallyPopulatePurchasedContent,omitempty"`

	// If no value is provided when creating a VolumePurchasingLocation object, the 'name' will default to the 'locationName' value
	Name                                 *string `json:"name,omitempty"`
	SendNotificationWhenNoLongerAssigned *bool   `json:"sendNotificationWhenNoLongerAssigned,omitempty"`
	ServiceToken                         string  `json:"serviceToken"`
	SiteId                               *string `json:"siteId,omitempty"`
}

// VolumePurchasingLocations defines model for VolumePurchasingLocations.
type VolumePurchasingLocations struct {
	Results    *[]VolumePurchasingLocationListView `json:"results,omitempty"`
	TotalCount *int                                `json:"totalCount,omitempty"`
}

// VolumePurchasingSubscription defines model for VolumePurchasingSubscription.
type VolumePurchasingSubscription struct {
	// Embedded struct due to allOf(#/components/schemas/VolumePurchasingSubscriptionBase)
	VolumePurchasingSubscriptionBase `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	Id *string `json:"id,omitempty"`
}

// VolumePurchasingSubscriptionBase defines model for VolumePurchasingSubscriptionBase.
type VolumePurchasingSubscriptionBase struct {
	Enabled            *bool                                       `json:"enabled,omitempty"`
	ExternalRecipients *[]ExternalRecipient                        `json:"externalRecipients,omitempty"`
	InternalRecipients *[]InternalRecipient                        `json:"internalRecipients,omitempty"`
	LocationIds        *[]string                                   `json:"locationIds,omitempty"`
	Name               string                                      `json:"name"`
	SiteId             *string                                     `json:"siteId,omitempty"`
	Triggers           *[]VolumePurchasingSubscriptionBaseTriggers `json:"triggers,omitempty"`
}

// VolumePurchasingSubscriptionBaseTriggers defines model for VolumePurchasingSubscriptionBase.Triggers.
type VolumePurchasingSubscriptionBaseTriggers string

// VolumePurchasingSubscriptions defines model for VolumePurchasingSubscriptions.
type VolumePurchasingSubscriptions struct {
	Results    *[]VolumePurchasingSubscription `json:"results,omitempty"`
	TotalCount *int                            `json:"totalCount,omitempty"`
}

// VppAdminAccount defines model for VppAdminAccount.
type VppAdminAccount struct {
	ExpirationDate   *string `json:"expirationDate,omitempty"`
	Id               *int    `json:"id,omitempty"`
	LicenseCount     *int    `json:"licenseCount,omitempty"`
	Location         *string `json:"location,omitempty"`
	Name             *string `json:"name,omitempty"`
	Site             *Site   `json:"site,omitempty"`
	UsedLicenseCount *int    `json:"usedLicenseCount,omitempty"`
}

// VppTokenSubscription defines model for VppTokenSubscription.
type VppTokenSubscription struct {
	AdminAccounts *[]AdminAccount `json:"adminAccounts,omitempty"`
	Enabled       *bool           `json:"enabled,omitempty"`
	Id            *int            `json:"id,omitempty"`
	Name          *string         `json:"name,omitempty"`
	Recipients    *Recipients     `json:"recipients,omitempty"`
	SiteID        *int            `json:"siteID,omitempty"`
	SiteName      *string         `json:"siteName,omitempty"`
}

// ExportFields defines model for export-fields.
type ExportFields []string

// ExportLabels defines model for export-labels.
type ExportLabels []string

// Page defines model for page.
type Page int

// PageSize defines model for page-size.
type PageSize int

// Pagesize defines model for pagesize.
type Pagesize int

// Size defines model for size.
type Size int

// Sort defines model for sort.
type Sort []string

// GetDevicesExtensionAttributesParams defines parameters for GetDevicesExtensionAttributes.
type GetDevicesExtensionAttributesParams struct {
	// Acceptable values currently include:
	// * name
	Select *string `json:"select,omitempty"`
}

// GetInventoryPreloadParams defines parameters for GetInventoryPreload.
type GetInventoryPreloadParams struct {
	Page     *Page                          `json:"page,omitempty"`
	Pagesize *Pagesize                      `json:"pagesize,omitempty"`
	Sort     *GetInventoryPreloadParamsSort `json:"sort,omitempty"`
	SortBy   *string                        `json:"sortBy,omitempty"`
}

// GetInventoryPreloadParamsSort defines parameters for GetInventoryPreload.
type GetInventoryPreloadParamsSort string

// PostInventoryPreloadJSONBody defines parameters for PostInventoryPreload.
type PostInventoryPreloadJSONBody InventoryPreloadRecord

// GetInventoryPreloadHistoryParams defines parameters for GetInventoryPreloadHistory.
type GetInventoryPreloadHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostInventoryPreloadHistoryNotesJSONBody defines parameters for PostInventoryPreloadHistoryNotes.
type PostInventoryPreloadHistoryNotesJSONBody ObjectHistoryNote

// PutInventoryPreloadIdJSONBody defines parameters for PutInventoryPreloadId.
type PutInventoryPreloadIdJSONBody InventoryPreloadRecord

// GetLdapGroupsParams defines parameters for GetLdapGroups.
type GetLdapGroupsParams struct {
	// Will perform a "contains" search on the names of access groups
	Q *string `json:"q,omitempty"`
}

// PutPatchObjIdJSONBody defines parameters for PutPatchObjId.
type PutPatchObjIdJSONBody ActivePatchSummary

// GetPatchPatchPoliciesParams defines parameters for GetPatchPatchPolicies.
type GetPatchPatchPoliciesParams struct {
	// Filters whether or not the patch policies are on the dashboard.
	OnDashboard *bool `json:"onDashboard,omitempty"`

	// Filters whether or not the patch policies are enabled.
	Enabled *bool `json:"enabled,omitempty"`
}

// GetPatchPatchPoliciesIdLogsParams defines parameters for GetPatchPatchPoliciesIdLogs.
type GetPatchPatchPoliciesIdLogsParams struct {
	// device id
	DeviceId *int `json:"device-id,omitempty"`
}

// PostPatchRetryPolicyJSONBody defines parameters for PostPatchRetryPolicy.
type PostPatchRetryPolicyJSONBody RetryPatchPolicyParams

// PostPatchSearchActivePatchHistoryJSONBody defines parameters for PostPatchSearchActivePatchHistory.
type PostPatchSearchActivePatchHistoryJSONBody SearchActivePatchHistoryParams

// PostPatchSearchPatchPolicyLogsJSONBody defines parameters for PostPatchSearchPatchPolicyLogs.
type PostPatchSearchPatchPolicyLogsJSONBody SearchPatchPolicyLogParams

// PostPatchSvcRetryPolicyJSONBody defines parameters for PostPatchSvcRetryPolicy.
type PostPatchSvcRetryPolicyJSONBody RetryPatchPolicyParams

// PutPatchIdJSONBody defines parameters for PutPatchId.
type PutPatchIdJSONBody ActivePatchSummary

// GetPreviewComputersParams defines parameters for GetPreviewComputers.
type GetPreviewComputersParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// GetPreviewEnrollmentAccessGroupsParams defines parameters for GetPreviewEnrollmentAccessGroups.
type GetPreviewEnrollmentAccessGroupsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: `property:asc/desc`. Default sort
	// is `name:asc`. Multiple sort criteria are supported and must be separated
	// with a comma. Example: `sort=date:desc,name:asc`.
	Sort *[]string `json:"sort,omitempty"`

	// Return "All LDAP Users" option on the first position if it is present in the current page
	AllUsersOptionFirst *bool `json:"all-users-option-first,omitempty"`
}

// PostPreviewEnrollmentAccessGroupsJSONBody defines parameters for PostPreviewEnrollmentAccessGroups.
type PostPreviewEnrollmentAccessGroupsJSONBody EnrollmentAccessGroupPreview

// PutPreviewEnrollmentAccessGroupsIdJSONBody defines parameters for PutPreviewEnrollmentAccessGroupsId.
type PutPreviewEnrollmentAccessGroupsIdJSONBody EnrollmentAccessGroupPreview

// PostPreviewMdmCommandsJSONBody defines parameters for PostPreviewMdmCommands.
type PostPreviewMdmCommandsJSONBody MdmCommandRequest

// GetPreviewRemoteAdministrationConfigurationsParams defines parameters for GetPreviewRemoteAdministrationConfigurations.
type GetPreviewRemoteAdministrationConfigurationsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`
}

// PostPreviewRemoteAdministrationConfigurationsTeamViewerJSONBody defines parameters for PostPreviewRemoteAdministrationConfigurationsTeamViewer.
type PostPreviewRemoteAdministrationConfigurationsTeamViewerJSONBody ConnectionConfigurationCandidateRequest

// GetPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessionsParams defines parameters for GetPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessions.
type GetPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessionsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Query in the RSQL format, allowing to filter sessions collection.
	// Default filter is empty query - returning all results for the requested page.
	//
	// Fields allowed in the query: `deviceId`, `deviceType`, `state`
	//
	// This param can be combined with paging.
	Filter *string `json:"filter,omitempty"`
}

// PostPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessionsJSONBody defines parameters for PostPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessions.
type PostPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessionsJSONBody SessionCandidateRequest

// PatchPreviewRemoteAdministrationConfigurationsTeamViewerIdJSONBody defines parameters for PatchPreviewRemoteAdministrationConfigurationsTeamViewerId.
type PatchPreviewRemoteAdministrationConfigurationsTeamViewerIdJSONBody ConnectionConfigurationUpdateRequest

// PutSettingsObjPolicyPropertiesJSONBody defines parameters for PutSettingsObjPolicyProperties.
type PutSettingsObjPolicyPropertiesJSONBody PolicyProperties

// PostSystemInitializeJSONBody defines parameters for PostSystemInitialize.
type PostSystemInitializeJSONBody Initialize

// PostSystemInitializeDatabaseConnectionJSONBody defines parameters for PostSystemInitializeDatabaseConnection.
type PostSystemInitializeDatabaseConnectionJSONBody DatabasePassword

// PutUserObjPreferenceKeyJSONBody defines parameters for PutUserObjPreferenceKey.
type PutUserObjPreferenceKeyJSONBody string

// PostUserUpdateSessionJSONBody defines parameters for PostUserUpdateSession.
type PostUserUpdateSessionJSONBody Session

// PostV1AdvancedMobileDeviceSearchesJSONBody defines parameters for PostV1AdvancedMobileDeviceSearches.
type PostV1AdvancedMobileDeviceSearchesJSONBody AdvancedSearch

// GetV1AdvancedMobileDeviceSearchesChoicesParams defines parameters for GetV1AdvancedMobileDeviceSearchesChoices.
type GetV1AdvancedMobileDeviceSearchesChoicesParams struct {
	Criteria string  `json:"criteria"`
	Site     *string `json:"site,omitempty"`
	Contains *string `json:"contains,omitempty"`
}

// PostV1AdvancedMobileDeviceSearchesDeleteMultipleJSONBody defines parameters for PostV1AdvancedMobileDeviceSearchesDeleteMultiple.
type PostV1AdvancedMobileDeviceSearchesDeleteMultipleJSONBody Ids

// PutV1AdvancedMobileDeviceSearchesIdJSONBody defines parameters for PutV1AdvancedMobileDeviceSearchesId.
type PutV1AdvancedMobileDeviceSearchesIdJSONBody AdvancedSearch

// PostV1AdvancedUserContentSearchesJSONBody defines parameters for PostV1AdvancedUserContentSearches.
type PostV1AdvancedUserContentSearchesJSONBody AdvancedUserContentSearch

// PutV1AdvancedUserContentSearchesIdJSONBody defines parameters for PutV1AdvancedUserContentSearchesId.
type PutV1AdvancedUserContentSearchesIdJSONBody AdvancedUserContentSearch

// PostV1AppRequestFormInputFieldsJSONBody defines parameters for PostV1AppRequestFormInputFields.
type PostV1AppRequestFormInputFieldsJSONBody AppRequestFormInputField

// PutV1AppRequestFormInputFieldsJSONBody defines parameters for PutV1AppRequestFormInputFields.
type PutV1AppRequestFormInputFieldsJSONBody []AppRequestFormInputField

// PutV1AppRequestFormInputFieldsIdJSONBody defines parameters for PutV1AppRequestFormInputFieldsId.
type PutV1AppRequestFormInputFieldsIdJSONBody AppRequestFormInputField

// PutV1AppRequestSettingsJSONBody defines parameters for PutV1AppRequestSettings.
type PutV1AppRequestSettingsJSONBody AppRequestSettings

// PostV1AzureAdMigrationReportsJSONBody defines parameters for PostV1AzureAdMigrationReports.
type PostV1AzureAdMigrationReportsJSONBody AzureAdMigrationReportRequest

// GetV1BuildingsParams defines parameters for GetV1Buildings.
type GetV1BuildingsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter buildings collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, streetAddress1, streetAddress2, city, stateProvince, zipPostalCode, country. This param can be combined with paging and sorting. Example: filter=city=="Chicago" and name=="*build*"
	Filter *string `json:"filter,omitempty"`
}

// PostV1BuildingsJSONBody defines parameters for PostV1Buildings.
type PostV1BuildingsJSONBody Building

// PostV1BuildingsDeleteMultipleJSONBody defines parameters for PostV1BuildingsDeleteMultiple.
type PostV1BuildingsDeleteMultipleJSONBody Ids

// PutV1BuildingsIdJSONBody defines parameters for PutV1BuildingsId.
type PutV1BuildingsIdJSONBody Building

// GetV1BuildingsIdHistoryParams defines parameters for GetV1BuildingsIdHistory.
type GetV1BuildingsIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV1BuildingsIdHistoryJSONBody defines parameters for PostV1BuildingsIdHistory.
type PostV1BuildingsIdHistoryJSONBody ObjectHistoryNote

// PutV1CacheSettingsJSONBody defines parameters for PutV1CacheSettings.
type PutV1CacheSettingsJSONBody CacheSettings

// GetV1CategoriesParams defines parameters for GetV1Categories.
type GetV1CategoriesParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter categories collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, priority. This param can be combined with paging and sorting. Example: filter=name=="Apps*" and priority>=5
	Filter *string `json:"filter,omitempty"`
}

// PostV1CategoriesJSONBody defines parameters for PostV1Categories.
type PostV1CategoriesJSONBody Category

// PostV1CategoriesDeleteMultipleJSONBody defines parameters for PostV1CategoriesDeleteMultiple.
type PostV1CategoriesDeleteMultipleJSONBody Ids

// PutV1CategoriesIdJSONBody defines parameters for PutV1CategoriesId.
type PutV1CategoriesIdJSONBody Category

// GetV1CategoriesIdHistoryParams defines parameters for GetV1CategoriesIdHistory.
type GetV1CategoriesIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV1CategoriesIdHistoryJSONBody defines parameters for PostV1CategoriesIdHistory.
type PostV1CategoriesIdHistoryJSONBody ObjectHistoryNote

// PostV1CloudAzureJSONBody defines parameters for PostV1CloudAzure.
type PostV1CloudAzureJSONBody AzureConfigurationRequest

// PutV1CloudAzureIdJSONBody defines parameters for PutV1CloudAzureId.
type PutV1CloudAzureIdJSONBody AzureConfigurationUpdate

// GetV1CloudIdpParams defines parameters for GetV1CloudIdp.
type GetV1CloudIdpParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1CloudIdpExportJSONBody defines parameters for PostV1CloudIdpExport.
type PostV1CloudIdpExportJSONBody ExportParameters

// PostV1CloudIdpExportParams defines parameters for PostV1CloudIdpExport.
type PostV1CloudIdpExportParams struct {
	// Export fields parameter, used to change default order or ignore some of the response properties. Default is empty array, which means that all fields of the response entity will be serialized. Example: export-fields=id,username
	ExportFields *ExportFields `json:"export-fields,omitempty"`

	// Export labels parameter, used to customize fieldnames/columns in the exported file. Default is empty array, which means that response properties names will be used. Number of the provided labels must match the number of export-fields Example: export-labels=identifier,name with matching: export-fields=id,username
	ExportLabels *ExportLabels `json:"export-labels,omitempty"`
	Page         *Page         `json:"page,omitempty"`
	PageSize     *PageSize     `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be seperated with a comma. Example: sort=id:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name=="*department*"
	Filter *string `json:"filter,omitempty"`
}

// GetV1CloudIdpIdHistoryParams defines parameters for GetV1CloudIdpIdHistory.
type GetV1CloudIdpIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1CloudIdpIdHistoryJSONBody defines parameters for PostV1CloudIdpIdHistory.
type PostV1CloudIdpIdHistoryJSONBody ObjectHistoryNote

// PostV1CloudIdpIdTestGroupJSONBody defines parameters for PostV1CloudIdpIdTestGroup.
type PostV1CloudIdpIdTestGroupJSONBody GroupTestSearchRequest

// PostV1CloudIdpIdTestUserJSONBody defines parameters for PostV1CloudIdpIdTestUser.
type PostV1CloudIdpIdTestUserJSONBody UserTestSearchRequest

// PostV1CloudIdpIdTestUserMembershipJSONBody defines parameters for PostV1CloudIdpIdTestUserMembership.
type PostV1CloudIdpIdTestUserMembershipJSONBody MembershipTestSearchRequest

// GetV1CloudLdapsParams defines parameters for GetV1CloudLdaps.
type GetV1CloudLdapsParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1CloudLdapsJSONBody defines parameters for PostV1CloudLdaps.
type PostV1CloudLdapsJSONBody DeprecatedConfigurationRequest

// PutV1CloudLdapsIdJSONBody defines parameters for PutV1CloudLdapsId.
type PutV1CloudLdapsIdJSONBody DeprecatedConfigurationUpdate

// GetV1CloudLdapsIdHistoryParams defines parameters for GetV1CloudLdapsIdHistory.
type GetV1CloudLdapsIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1CloudLdapsIdHistoryJSONBody defines parameters for PostV1CloudLdapsIdHistory.
type PostV1CloudLdapsIdHistoryJSONBody ObjectHistoryNote

// PutV1CloudLdapsIdMappingsJSONBody defines parameters for PutV1CloudLdapsIdMappings.
type PutV1CloudLdapsIdMappingsJSONBody CloudLdapMappingsRequest

// PostV1CloudLdapsIdTestGroupJSONBody defines parameters for PostV1CloudLdapsIdTestGroup.
type PostV1CloudLdapsIdTestGroupJSONBody GroupTestSearchRequest

// PostV1CloudLdapsIdTestUserJSONBody defines parameters for PostV1CloudLdapsIdTestUser.
type PostV1CloudLdapsIdTestUserJSONBody UserTestSearchRequest

// PostV1CloudLdapsIdTestUserMembershipJSONBody defines parameters for PostV1CloudLdapsIdTestUserMembership.
type PostV1CloudLdapsIdTestUserMembershipJSONBody MembershipTestSearchRequest

// PatchV1ComputerInventoryCollectionSettingsJSONBody defines parameters for PatchV1ComputerInventoryCollectionSettings.
type PatchV1ComputerInventoryCollectionSettingsJSONBody ComputerInventoryCollectionSettings

// PostV1ComputerInventoryCollectionSettingsCustomPathJSONBody defines parameters for PostV1ComputerInventoryCollectionSettingsCustomPath.
type PostV1ComputerInventoryCollectionSettingsCustomPathJSONBody CreatePath

// GetV1ComputerPrestagesParams defines parameters for GetV1ComputerPrestages.
type GetV1ComputerPrestagesParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1ComputerPrestagesJSONBody defines parameters for PostV1ComputerPrestages.
type PostV1ComputerPrestagesJSONBody ComputerPrestage

// PutV1ComputerPrestagesIdJSONBody defines parameters for PutV1ComputerPrestagesId.
type PutV1ComputerPrestagesIdJSONBody PutComputerPrestage

// DeleteV1ComputerPrestagesIdScopeJSONBody defines parameters for DeleteV1ComputerPrestagesIdScope.
type DeleteV1ComputerPrestagesIdScopeJSONBody PrestageScopeUpdate

// PostV1ComputerPrestagesIdScopeJSONBody defines parameters for PostV1ComputerPrestagesIdScope.
type PostV1ComputerPrestagesIdScopeJSONBody PrestageScopeUpdate

// PutV1ComputerPrestagesIdScopeJSONBody defines parameters for PutV1ComputerPrestagesIdScope.
type PutV1ComputerPrestagesIdScopeJSONBody PrestageScopeUpdate

// GetV1ComputersInventoryParams defines parameters for GetV1ComputersInventory.
type GetV1ComputersInventoryParams struct {
	// section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=GENERAL&section=HARDWARE
	Section  *[]ComputerSection `json:"section,omitempty"`
	Page     *Page              `json:"page,omitempty"`
	PageSize *PageSize          `json:"page-size,omitempty"`

	// Sorting criteria in the format: `property:asc/desc`. Default sort
	// is `general.name:asc`. Multiple sort criteria are supported and must be separated with
	// a comma.
	//
	// Fields allowed in the sort: `general.name`, `udid`, `id`, `general.assetTag`,
	// `general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,
	// `general.reportDate`, `general.remoteManagement.managementUsername`,
	// `general.mdmCertificateExpiration`, `general.platform`,
	// `hardware.make`, `hardware.model`,
	// `operatingSystem.build`, `operatingSystem.name`, `operatingSystem.version`,
	// `userAndLocation.realname`,
	// `purchasing.lifeExpectancy`, `purchasing.warrantyDate`
	//
	// Example: `sort=udid:desc,general.name:asc`.
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter computer inventory collection.
	// Default filter is empty query - returning all results for the requested page.
	//
	// Fields allowed in the query: `general.name`, `udid`, `id`, `general.assetTag`, `general.barcode1`, `general.barcode2`,
	// `general.enrolledViaAutomatedDeviceEnrollment`, `general.lastIpAddress`, `general.itunesStoreAccountActive`,
	// `general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,
	// `general.reportDate`, `general.lastReportedIp`, `general.remoteManagement.managed`, `general.remoteManagement.managementUsername`,
	// `general.mdmCapable.capable`, `general.mdmCertificateExpiration`, `general.platform`, `general.supervised`, `general.userApprovedMdm`,
	// `hardware.bleCapable`, `hardware.macAddress`, `hardware.make`, `hardware.model`, `hardware.modelIdentifier`, `hardware.serialNumber`,
	// `hardware.supportsIosAppInstalls`,`hardware.isAppleSilicon`, `operatingSystem.activeDirectoryStatus`, `operatingSystem.fileVault2Status`,
	// `operatingSystem.build`, `operatingSystem.name`, `operatingSystem.version`, `operatingSystem.softwareUpdateDeviceId`, `security.activationLockEnabled`,
	// `security.recoveryLockEnabled`,`security.firewallEnabled`,`userAndLocation.buildingId`, `userAndLocation.departmentId`, `userAndLocation.email`, `userAndLocation.realname`,
	// `userAndLocation.phone`, `userAndLocation.position`,`userAndLocation.room`, `userAndLocation.username`,
	// `purchasing.appleCareId`, `purchasing.lifeExpectancy`, `purchasing.purchased`, `purchasing.leased`, `purchasing.vendor`, `purchasing.warrantyDate`,
	//
	// This param can be combined with paging and sorting.
	// Example: `filter=general.name=="Orchard"`
	Filter *string `json:"filter,omitempty"`
}

// PatchV1ComputersInventoryDetailIdJSONBody defines parameters for PatchV1ComputersInventoryDetailId.
type PatchV1ComputersInventoryDetailIdJSONBody ComputerInventoryUpdateRequest

// GetV1ComputersInventoryIdParams defines parameters for GetV1ComputersInventoryId.
type GetV1ComputersInventoryIdParams struct {
	// section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=general&section=hardware
	Section *[]ComputerSection `json:"section,omitempty"`
}

// PostV1CsaTokenJSONBody defines parameters for PostV1CsaToken.
type PostV1CsaTokenJSONBody JamfNationCredentials

// PutV1CsaTokenJSONBody defines parameters for PutV1CsaToken.
type PutV1CsaTokenJSONBody JamfNationCredentials

// GetV1DepartmentsParams defines parameters for GetV1Departments.
type GetV1DepartmentsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter department collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. Example: name=="*department*"
	Filter *string `json:"filter,omitempty"`
}

// PostV1DepartmentsJSONBody defines parameters for PostV1Departments.
type PostV1DepartmentsJSONBody Department

// PostV1DepartmentsDeleteMultipleJSONBody defines parameters for PostV1DepartmentsDeleteMultiple.
type PostV1DepartmentsDeleteMultipleJSONBody Ids

// PutV1DepartmentsIdJSONBody defines parameters for PutV1DepartmentsId.
type PutV1DepartmentsIdJSONBody Department

// GetV1DepartmentsIdHistoryParams defines parameters for GetV1DepartmentsIdHistory.
type GetV1DepartmentsIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV1DepartmentsIdHistoryJSONBody defines parameters for PostV1DepartmentsIdHistory.
type PostV1DepartmentsIdHistoryJSONBody ObjectHistoryNote

// PostV1DeployPackageJSONBody defines parameters for PostV1DeployPackage.
type PostV1DeployPackageJSONBody InstallPackage

// PostV1DeployPackageParams defines parameters for PostV1DeployPackage.
type PostV1DeployPackageParams struct {
	// Enables the 'verbose' response, which includes information about the commands queued as well as information about commands that failed to queue.
	Verbose *bool `json:"verbose,omitempty"`
}

// PutV1DeviceCommunicationSettingsJSONBody defines parameters for PutV1DeviceCommunicationSettings.
type PutV1DeviceCommunicationSettingsJSONBody DeviceCommunicationSettings

// GetV1DeviceCommunicationSettingsHistoryParams defines parameters for GetV1DeviceCommunicationSettingsHistory.
type GetV1DeviceCommunicationSettingsHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV1DeviceCommunicationSettingsHistoryJSONBody defines parameters for PostV1DeviceCommunicationSettingsHistory.
type PostV1DeviceCommunicationSettingsHistoryJSONBody ObjectHistoryNote

// GetV1DeviceEnrollmentsParams defines parameters for GetV1DeviceEnrollments.
type GetV1DeviceEnrollmentsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1DeviceEnrollmentsUploadTokenJSONBody defines parameters for PostV1DeviceEnrollmentsUploadToken.
type PostV1DeviceEnrollmentsUploadTokenJSONBody DeviceEnrollmentToken

// PutV1DeviceEnrollmentsIdJSONBody defines parameters for PutV1DeviceEnrollmentsId.
type PutV1DeviceEnrollmentsIdJSONBody DeviceEnrollmentInstance

// PostV1DeviceEnrollmentsIdDisownJSONBody defines parameters for PostV1DeviceEnrollmentsIdDisown.
type PostV1DeviceEnrollmentsIdDisownJSONBody DeviceEnrollmentDisownBody

// GetV1DeviceEnrollmentsIdHistoryParams defines parameters for GetV1DeviceEnrollmentsIdHistory.
type GetV1DeviceEnrollmentsIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV1DeviceEnrollmentsIdHistoryJSONBody defines parameters for PostV1DeviceEnrollmentsIdHistory.
type PostV1DeviceEnrollmentsIdHistoryJSONBody ObjectHistoryNote

// PutV1DeviceEnrollmentsIdUploadTokenJSONBody defines parameters for PutV1DeviceEnrollmentsIdUploadToken.
type PutV1DeviceEnrollmentsIdUploadTokenJSONBody DeviceEnrollmentToken

// GetV1EbooksParams defines parameters for GetV1Ebooks.
type GetV1EbooksParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PutV1EngageJSONBody defines parameters for PutV1Engage.
type PutV1EngageJSONBody Engage

// GetV1EngageHistoryParams defines parameters for GetV1EngageHistory.
type GetV1EngageHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15
	Search *string `json:"search,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV1EngageHistoryJSONBody defines parameters for PostV1EngageHistory.
type PostV1EngageHistoryJSONBody ObjectHistoryNote

// PutV1EnrollmentJSONBody defines parameters for PutV1Enrollment.
type PutV1EnrollmentJSONBody EnrollmentSettings

// GetV1EnrollmentCustomizationParams defines parameters for GetV1EnrollmentCustomization.
type GetV1EnrollmentCustomizationParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1EnrollmentCustomizationJSONBody defines parameters for PostV1EnrollmentCustomization.
type PostV1EnrollmentCustomizationJSONBody EnrollmentCustomization

// PostV1EnrollmentCustomizationParseMarkdownJSONBody defines parameters for PostV1EnrollmentCustomizationParseMarkdown.
type PostV1EnrollmentCustomizationParseMarkdownJSONBody Markdown

// PutV1EnrollmentCustomizationIdJSONBody defines parameters for PutV1EnrollmentCustomizationId.
type PutV1EnrollmentCustomizationIdJSONBody EnrollmentCustomization

// GetV1EnrollmentCustomizationIdHistoryParams defines parameters for GetV1EnrollmentCustomizationIdHistory.
type GetV1EnrollmentCustomizationIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1EnrollmentCustomizationIdHistoryJSONBody defines parameters for PostV1EnrollmentCustomizationIdHistory.
type PostV1EnrollmentCustomizationIdHistoryJSONBody ObjectHistoryNote

// PostV1EnrollmentCustomizationIdLdapJSONBody defines parameters for PostV1EnrollmentCustomizationIdLdap.
type PostV1EnrollmentCustomizationIdLdapJSONBody EnrollmentCustomizationPanelLdapAuth

// PutV1EnrollmentCustomizationIdLdapPanelIdJSONBody defines parameters for PutV1EnrollmentCustomizationIdLdapPanelId.
type PutV1EnrollmentCustomizationIdLdapPanelIdJSONBody EnrollmentCustomizationPanelLdapAuth

// PostV1EnrollmentCustomizationIdSsoJSONBody defines parameters for PostV1EnrollmentCustomizationIdSso.
type PostV1EnrollmentCustomizationIdSsoJSONBody EnrollmentCustomizationPanelSsoAuth

// PutV1EnrollmentCustomizationIdSsoPanelIdJSONBody defines parameters for PutV1EnrollmentCustomizationIdSsoPanelId.
type PutV1EnrollmentCustomizationIdSsoPanelIdJSONBody EnrollmentCustomizationPanelSsoAuth

// PostV1EnrollmentCustomizationIdTextJSONBody defines parameters for PostV1EnrollmentCustomizationIdText.
type PostV1EnrollmentCustomizationIdTextJSONBody EnrollmentCustomizationPanelText

// PutV1EnrollmentCustomizationIdTextPanelIdJSONBody defines parameters for PutV1EnrollmentCustomizationIdTextPanelId.
type PutV1EnrollmentCustomizationIdTextPanelIdJSONBody EnrollmentCustomizationPanelText

// GetV1EnrollmentAccessGroupsParams defines parameters for GetV1EnrollmentAccessGroups.
type GetV1EnrollmentAccessGroupsParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PutV1EnrollmentAccessGroupsGroupKeyJSONBody defines parameters for PutV1EnrollmentAccessGroupsGroupKey.
type PutV1EnrollmentAccessGroupsGroupKeyJSONBody EnrollmentAccessGroup

// GetV1EnrollmentHistoryParams defines parameters for GetV1EnrollmentHistory.
type GetV1EnrollmentHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1EnrollmentHistoryJSONBody defines parameters for PostV1EnrollmentHistory.
type PostV1EnrollmentHistoryJSONBody ObjectHistoryNote

// GetV1EnrollmentLanguagesParams defines parameters for GetV1EnrollmentLanguages.
type GetV1EnrollmentLanguagesParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is languageCode:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PutV1EnrollmentLanguagesLanguageJSONBody defines parameters for PutV1EnrollmentLanguagesLanguage.
type PutV1EnrollmentLanguagesLanguageJSONBody EnrollmentProcessTextObject

// GetV1InventoryPreloadParams defines parameters for GetV1InventoryPreload.
type GetV1InventoryPreloadParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1InventoryPreloadJSONBody defines parameters for PostV1InventoryPreload.
type PostV1InventoryPreloadJSONBody InventoryPreloadRecord

// GetV1InventoryPreloadHistoryParams defines parameters for GetV1InventoryPreloadHistory.
type GetV1InventoryPreloadHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1InventoryPreloadHistoryJSONBody defines parameters for PostV1InventoryPreloadHistory.
type PostV1InventoryPreloadHistoryJSONBody ObjectHistoryNote

// PutV1InventoryPreloadIdJSONBody defines parameters for PutV1InventoryPreloadId.
type PutV1InventoryPreloadIdJSONBody InventoryPreloadRecord

// GetV1JamfConnectConfigProfilesParams defines parameters for GetV1JamfConnectConfigProfiles.
type GetV1JamfConnectConfigProfilesParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is not duplicated for each sort criterion, e.g., ...&sort=name:asc,date:desc. Fields that can be sorted: status, updated
	Sort *Sort `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *Filter `json:"filter,omitempty"`
}

// PutV1JamfConnectConfigProfilesIdJSONBody defines parameters for PutV1JamfConnectConfigProfilesId.
type PutV1JamfConnectConfigProfilesIdJSONBody LinkedConnectProfile

// GetV1JamfConnectDeploymentsIdTasksParams defines parameters for GetV1JamfConnectDeploymentsIdTasks.
type GetV1JamfConnectDeploymentsIdTasksParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is not duplicated for each sort criterion, e.g., ...&sort=name:asc,date:desc. Fields that can be sorted: status, updated
	Sort *Sort `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *Filter `json:"filter,omitempty"`
}

// PostV1JamfConnectDeploymentsIdTasksRetryJSONBody defines parameters for PostV1JamfConnectDeploymentsIdTasksRetry.
type PostV1JamfConnectDeploymentsIdTasksRetryJSONBody Ids

// GetV1JamfConnectHistoryParams defines parameters for GetV1JamfConnectHistory.
type GetV1JamfConnectHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is not duplicated for each sort criterion, e.g., ...&sort=name:asc,date:desc. Fields that can be sorted: status, updated
	Sort *Sort `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *Filter `json:"filter,omitempty"`
}

// PostV1JamfConnectHistoryJSONBody defines parameters for PostV1JamfConnectHistory.
type PostV1JamfConnectHistoryJSONBody ObjectHistoryNote

// GetV1JamfPackageParams defines parameters for GetV1JamfPackage.
type GetV1JamfPackageParams struct {
	// The Jamf Application key. The only supported values are protect and connect.
	Application string `json:"application"`
}

// PutV1JamfProServerUrlJSONBody defines parameters for PutV1JamfProServerUrl.
type PutV1JamfProServerUrlJSONBody JamfProServerUrl

// GetV1JamfProServerUrlHistoryParams defines parameters for GetV1JamfProServerUrlHistory.
type GetV1JamfProServerUrlHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1JamfProServerUrlHistoryJSONBody defines parameters for PostV1JamfProServerUrlHistory.
type PostV1JamfProServerUrlHistoryJSONBody ObjectHistoryNote

// PutV1JamfProtectJSONBody defines parameters for PutV1JamfProtect.
type PutV1JamfProtectJSONBody ProtectUpdatableSettingsRequest

// GetV1JamfProtectDeploymentsIdTasksParams defines parameters for GetV1JamfProtectDeploymentsIdTasks.
type GetV1JamfProtectDeploymentsIdTasksParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is not duplicated for each sort criterion, e.g., ...&sort=name:asc,date:desc. Fields that can be sorted: status, updated
	Sort *Sort `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *Filter `json:"filter,omitempty"`
}

// PostV1JamfProtectDeploymentsIdTasksRetryJSONBody defines parameters for PostV1JamfProtectDeploymentsIdTasksRetry.
type PostV1JamfProtectDeploymentsIdTasksRetryJSONBody Ids

// GetV1JamfProtectHistoryParams defines parameters for GetV1JamfProtectHistory.
type GetV1JamfProtectHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is not duplicated for each sort criterion, e.g., ...&sort=name:asc,date:desc. Fields that can be sorted: status, updated
	Sort *Sort `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *Filter `json:"filter,omitempty"`
}

// PostV1JamfProtectHistoryJSONBody defines parameters for PostV1JamfProtectHistory.
type PostV1JamfProtectHistoryJSONBody ObjectHistoryNote

// GetV1JamfProtectPlansParams defines parameters for GetV1JamfProtectPlans.
type GetV1JamfProtectPlansParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is not duplicated for each sort criterion, e.g., ...&sort=name:asc,date:desc. Fields that can be sorted: status, updated
	Sort *Sort `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *Filter `json:"filter,omitempty"`
}

// PostV1JamfProtectRegisterJSONBody defines parameters for PostV1JamfProtectRegister.
type PostV1JamfProtectRegisterJSONBody ProtectRegistrationRequest

// PostV1LdapKeystoreVerifyJSONBody defines parameters for PostV1LdapKeystoreVerify.
type PostV1LdapKeystoreVerifyJSONBody CloudLdapKeystoreFile

// GetV1LdapGroupsParams defines parameters for GetV1LdapGroups.
type GetV1LdapGroupsParams struct {
	// Will perform a "contains" search on the names of access groups
	Q *string `json:"q,omitempty"`
}

// PostV1MacosManagedSoftwareUpdatesSendUpdatesJSONBody defines parameters for PostV1MacosManagedSoftwareUpdatesSendUpdates.
type PostV1MacosManagedSoftwareUpdatesSendUpdatesJSONBody MacOsManagedSoftwareUpdate

// GetV1MdmCommandsParams defines parameters for GetV1MdmCommands.
type GetV1MdmCommandsParams struct {
	// A list of the UUIDs of the commands being searched for.  Limited to 40 UUIDs in length.
	Uuids []string `json:"uuids"`
}

// PostV1MdmRenewProfileJSONBody defines parameters for PostV1MdmRenewProfile.
type PostV1MdmRenewProfileJSONBody Udids

// GetV1MobileDevicePrestagesParams defines parameters for GetV1MobileDevicePrestages.
type GetV1MobileDevicePrestagesParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1MobileDevicePrestagesJSONBody defines parameters for PostV1MobileDevicePrestages.
type PostV1MobileDevicePrestagesJSONBody MobileDevicePrestage

// PutV1MobileDevicePrestagesIdJSONBody defines parameters for PutV1MobileDevicePrestagesId.
type PutV1MobileDevicePrestagesIdJSONBody PutMobileDevicePrestage

// DeleteV1MobileDevicePrestagesIdAttachmentsJSONBody defines parameters for DeleteV1MobileDevicePrestagesIdAttachments.
type DeleteV1MobileDevicePrestagesIdAttachmentsJSONBody FileAttachmentDelete

// GetV1MobileDevicePrestagesIdHistoryParams defines parameters for GetV1MobileDevicePrestagesIdHistory.
type GetV1MobileDevicePrestagesIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1MobileDevicePrestagesIdHistoryJSONBody defines parameters for PostV1MobileDevicePrestagesIdHistory.
type PostV1MobileDevicePrestagesIdHistoryJSONBody ObjectHistoryNote

// DeleteV1MobileDevicePrestagesIdScopeJSONBody defines parameters for DeleteV1MobileDevicePrestagesIdScope.
type DeleteV1MobileDevicePrestagesIdScopeJSONBody PrestageScopeUpdate

// PostV1MobileDevicePrestagesIdScopeJSONBody defines parameters for PostV1MobileDevicePrestagesIdScope.
type PostV1MobileDevicePrestagesIdScopeJSONBody PrestageScopeUpdate

// PutV1MobileDevicePrestagesIdScopeJSONBody defines parameters for PutV1MobileDevicePrestagesIdScope.
type PutV1MobileDevicePrestagesIdScopeJSONBody PrestageScopeUpdate

// PatchV1MobileDevicesIdJSONBody defines parameters for PatchV1MobileDevicesId.
type PatchV1MobileDevicesIdJSONBody UpdateMobileDevice

// PutV1ParentAppJSONBody defines parameters for PutV1ParentApp.
type PutV1ParentAppJSONBody ParentApp

// GetV1ParentAppHistoryParams defines parameters for GetV1ParentAppHistory.
type GetV1ParentAppHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *Filter `json:"filter,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1ParentAppHistoryJSONBody defines parameters for PostV1ParentAppHistory.
type PostV1ParentAppHistoryJSONBody ObjectHistoryNote

// PostV1PkiVenafiJSONBody defines parameters for PostV1PkiVenafi.
type PostV1PkiVenafiJSONBody VenafiCaRecord

// PatchV1PkiVenafiIdJSONBody defines parameters for PatchV1PkiVenafiId.
type PatchV1PkiVenafiIdJSONBody VenafiCaRecord

// GetV1PkiVenafiIdHistoryParams defines parameters for GetV1PkiVenafiIdHistory.
type GetV1PkiVenafiIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV1PkiVenafiIdHistoryJSONBody defines parameters for PostV1PkiVenafiIdHistory.
type PostV1PkiVenafiIdHistoryJSONBody ObjectHistoryNote

// PutV1PolicyPropertiesJSONBody defines parameters for PutV1PolicyProperties.
type PutV1PolicyPropertiesJSONBody PolicyPropertiesV1

// PutV1ReenrollmentJSONBody defines parameters for PutV1Reenrollment.
type PutV1ReenrollmentJSONBody Reenrollment

// GetV1ReenrollmentHistoryParams defines parameters for GetV1ReenrollmentHistory.
type GetV1ReenrollmentHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1ReenrollmentHistoryJSONBody defines parameters for PostV1ReenrollmentHistory.
type PostV1ReenrollmentHistoryJSONBody ObjectHistoryNote

// GetV1ScriptsParams defines parameters for GetV1Scripts.
type GetV1ScriptsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter scripts collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. This param can be combined with paging and sorting. Example: filter=categoryName=="Category" and name=="*script name*"
	Filter *string `json:"filter,omitempty"`
}

// PostV1ScriptsJSONBody defines parameters for PostV1Scripts.
type PostV1ScriptsJSONBody Script

// PutV1ScriptsIdJSONBody defines parameters for PutV1ScriptsId.
type PutV1ScriptsIdJSONBody Script

// GetV1ScriptsIdHistoryParams defines parameters for GetV1ScriptsIdHistory.
type GetV1ScriptsIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV1ScriptsIdHistoryJSONBody defines parameters for PostV1ScriptsIdHistory.
type PostV1ScriptsIdHistoryJSONBody ObjectHistoryNote

// PostV1SearchMobileDevicesJSONBody defines parameters for PostV1SearchMobileDevices.
type PostV1SearchMobileDevicesJSONBody MobileDeviceSearchParams

// GetV1SelfServiceBrandingIosParams defines parameters for GetV1SelfServiceBrandingIos.
type GetV1SelfServiceBrandingIosParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1SelfServiceBrandingIosJSONBody defines parameters for PostV1SelfServiceBrandingIos.
type PostV1SelfServiceBrandingIosJSONBody IosBrandingConfiguration

// PutV1SelfServiceBrandingIosIdJSONBody defines parameters for PutV1SelfServiceBrandingIosId.
type PutV1SelfServiceBrandingIosIdJSONBody IosBrandingConfiguration

// GetV1SelfServiceBrandingMacosParams defines parameters for GetV1SelfServiceBrandingMacos.
type GetV1SelfServiceBrandingMacosParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1SelfServiceBrandingMacosJSONBody defines parameters for PostV1SelfServiceBrandingMacos.
type PostV1SelfServiceBrandingMacosJSONBody MacOsBrandingConfiguration

// PutV1SelfServiceBrandingMacosIdJSONBody defines parameters for PutV1SelfServiceBrandingMacosId.
type PutV1SelfServiceBrandingMacosIdJSONBody MacOsBrandingConfiguration

// PutV1SelfServiceSettingsJSONBody defines parameters for PutV1SelfServiceSettings.
type PutV1SelfServiceSettingsJSONBody SelfServiceSettings

// PutV1SsoJSONBody defines parameters for PutV1Sso.
type PutV1SsoJSONBody SsoSettings

// PutV1SsoCertJSONBody defines parameters for PutV1SsoCert.
type PutV1SsoCertJSONBody SsoKeystore

// PostV1SsoCertParseJSONBody defines parameters for PostV1SsoCertParse.
type PostV1SsoCertParseJSONBody SsoKeystoreParse

// GetV1SsoHistoryParams defines parameters for GetV1SsoHistory.
type GetV1SsoHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV1SsoHistoryJSONBody defines parameters for PostV1SsoHistory.
type PostV1SsoHistoryJSONBody ObjectHistoryNote

// PostV1SsoValidateJSONBody defines parameters for PostV1SsoValidate.
type PostV1SsoValidateJSONBody SsoMetadataUrl

// GetV1SupervisionIdentitiesParams defines parameters for GetV1SupervisionIdentities.
type GetV1SupervisionIdentitiesParams struct {
	Page     *Page     `json:"page,omitempty"`
	Size     *Size     `json:"size,omitempty"`
	Pagesize *Pagesize `json:"pagesize,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *string `json:"sort,omitempty"`
}

// PostV1SupervisionIdentitiesJSONBody defines parameters for PostV1SupervisionIdentities.
type PostV1SupervisionIdentitiesJSONBody SupervisionIdentityCreate

// PostV1SupervisionIdentitiesUploadJSONBody defines parameters for PostV1SupervisionIdentitiesUpload.
type PostV1SupervisionIdentitiesUploadJSONBody SupervisionIdentityCertificateUpload

// PutV1SupervisionIdentitiesIdJSONBody defines parameters for PutV1SupervisionIdentitiesId.
type PutV1SupervisionIdentitiesIdJSONBody SupervisionIdentityUpdate

// PostV1SystemInitializeJSONBody defines parameters for PostV1SystemInitialize.
type PostV1SystemInitializeJSONBody InitializeV1

// PostV1SystemInitializeDatabaseConnectionJSONBody defines parameters for PostV1SystemInitializeDatabaseConnection.
type PostV1SystemInitializeDatabaseConnectionJSONBody DatabasePassword

// PutV1TeacherAppJSONBody defines parameters for PutV1TeacherApp.
type PutV1TeacherAppJSONBody TeacherSettingsRequest

// GetV1TeacherAppHistoryParams defines parameters for GetV1TeacherAppHistory.
type GetV1TeacherAppHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is not duplicated for each sort criterion, e.g., ...&sort=name:asc,date:desc. Fields that can be sorted: status, updated
	Sort *Sort `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *Filter `json:"filter,omitempty"`
}

// PostV1TeacherAppHistoryJSONBody defines parameters for PostV1TeacherAppHistory.
type PostV1TeacherAppHistoryJSONBody ObjectHistoryNote

// PutV1UserPreferencesKeyIdJSONBody defines parameters for PutV1UserPreferencesKeyId.
type PutV1UserPreferencesKeyIdJSONBody map[string]interface{}

// GetV1VolumePurchasingLocationsParams defines parameters for GetV1VolumePurchasingLocations.
type GetV1VolumePurchasingLocationsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma.
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter Volume Purchasing Location collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name, appleId, organizationName, tokenExpiration, countryCode, locationName, automaticallyPopulatePurchasedContent, and sendNotificationWhenNoLongerAssigned. This param can be combined with paging and sorting.
	Filter *string `json:"filter,omitempty"`
}

// PostV1VolumePurchasingLocationsJSONBody defines parameters for PostV1VolumePurchasingLocations.
type PostV1VolumePurchasingLocationsJSONBody VolumePurchasingLocationPost

// GetV1VolumePurchasingLocationsIdHistoryParams defines parameters for GetV1VolumePurchasingLocationsIdHistory.
type GetV1VolumePurchasingLocationsIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma.
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// GetV1VolumePurchasingSubscriptionsParams defines parameters for GetV1VolumePurchasingSubscriptions.
type GetV1VolumePurchasingSubscriptionsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Allowable properties are id, name, and enabled.
	Sort *[]string `json:"sort,omitempty"`
}

// PostV1VolumePurchasingSubscriptionsJSONBody defines parameters for PostV1VolumePurchasingSubscriptions.
type PostV1VolumePurchasingSubscriptionsJSONBody VolumePurchasingSubscriptionBase

// PutV1VolumePurchasingSubscriptionsIdJSONBody defines parameters for PutV1VolumePurchasingSubscriptionsId.
type PutV1VolumePurchasingSubscriptionsIdJSONBody VolumePurchasingSubscriptionBase

// PutV2CheckInJSONBody defines parameters for PutV2CheckIn.
type PutV2CheckInJSONBody ClientCheckInV2

// GetV2CheckInHistoryParams defines parameters for GetV2CheckInHistory.
type GetV2CheckInHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV2CheckInHistoryJSONBody defines parameters for PostV2CheckInHistory.
type PostV2CheckInHistoryJSONBody ObjectHistoryNote

// PostV2CloudLdapsJSONBody defines parameters for PostV2CloudLdaps.
type PostV2CloudLdapsJSONBody LdapConfigurationRequest

// PutV2CloudLdapsIdJSONBody defines parameters for PutV2CloudLdapsId.
type PutV2CloudLdapsIdJSONBody LdapConfigurationUpdate

// PutV2CloudLdapsIdMappingsJSONBody defines parameters for PutV2CloudLdapsIdMappings.
type PutV2CloudLdapsIdMappingsJSONBody CloudLdapMappingsRequest

// GetV2ComputerPrestagesParams defines parameters for GetV2ComputerPrestages.
type GetV2ComputerPrestagesParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV2ComputerPrestagesJSONBody defines parameters for PostV2ComputerPrestages.
type PostV2ComputerPrestagesJSONBody PostComputerPrestageV2

// PutV2ComputerPrestagesIdJSONBody defines parameters for PutV2ComputerPrestagesId.
type PutV2ComputerPrestagesIdJSONBody PutComputerPrestageV2

// PostV2ComputerPrestagesIdScopeJSONBody defines parameters for PostV2ComputerPrestagesIdScope.
type PostV2ComputerPrestagesIdScopeJSONBody PrestageScopeUpdate

// PutV2ComputerPrestagesIdScopeJSONBody defines parameters for PutV2ComputerPrestagesIdScope.
type PutV2ComputerPrestagesIdScopeJSONBody PrestageScopeUpdate

// PostV2ComputerPrestagesIdScopeDeleteMultipleJSONBody defines parameters for PostV2ComputerPrestagesIdScopeDeleteMultiple.
type PostV2ComputerPrestagesIdScopeDeleteMultipleJSONBody PrestageScopeUpdate

// PutV2EnrollmentJSONBody defines parameters for PutV2Enrollment.
type PutV2EnrollmentJSONBody EnrollmentSettingsV2

// GetV2EnrollmentCustomizationsParams defines parameters for GetV2EnrollmentCustomizations.
type GetV2EnrollmentCustomizationsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV2EnrollmentCustomizationsJSONBody defines parameters for PostV2EnrollmentCustomizations.
type PostV2EnrollmentCustomizationsJSONBody EnrollmentCustomizationV2

// PutV2EnrollmentCustomizationsIdJSONBody defines parameters for PutV2EnrollmentCustomizationsId.
type PutV2EnrollmentCustomizationsIdJSONBody EnrollmentCustomizationV2

// GetV2EnrollmentCustomizationsIdHistoryParams defines parameters for GetV2EnrollmentCustomizationsIdHistory.
type GetV2EnrollmentCustomizationsIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV2EnrollmentCustomizationsIdHistoryJSONBody defines parameters for PostV2EnrollmentCustomizationsIdHistory.
type PostV2EnrollmentCustomizationsIdHistoryJSONBody ObjectHistoryNote

// GetV2EnrollmentAccessGroupsParams defines parameters for GetV2EnrollmentAccessGroups.
type GetV2EnrollmentAccessGroupsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: `property:asc/desc`. Default sort
	// is `name:asc`. Multiple sort criteria are supported and must be separated
	// with a comma. Example: `sort=date:desc,name:asc`.
	Sort *[]string `json:"sort,omitempty"`

	// Return "All LDAP Users" option on the first position if it is present in the current page
	AllUsersOptionFirst *bool `json:"all-users-option-first,omitempty"`
}

// PostV2EnrollmentAccessGroupsJSONBody defines parameters for PostV2EnrollmentAccessGroups.
type PostV2EnrollmentAccessGroupsJSONBody EnrollmentAccessGroupV2

// PutV2EnrollmentAccessGroupsServerIdGroupIdJSONBody defines parameters for PutV2EnrollmentAccessGroupsServerIdGroupId.
type PutV2EnrollmentAccessGroupsServerIdGroupIdJSONBody EnrollmentAccessGroupV2

// GetV2EnrollmentHistoryParams defines parameters for GetV2EnrollmentHistory.
type GetV2EnrollmentHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: `property:asc/desc`. Default sort
	// is `date:desc`. Multiple sort criteria are supported and must be separated
	// with a comma. Example: `sort=date:desc,name:asc`.
	Sort *[]string `json:"sort,omitempty"`
}

// PostV2EnrollmentHistoryJSONBody defines parameters for PostV2EnrollmentHistory.
type PostV2EnrollmentHistoryJSONBody ObjectHistoryNote

// GetV2EnrollmentLanguagesParams defines parameters for GetV2EnrollmentLanguages.
type GetV2EnrollmentLanguagesParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort
	// is `languageCode:asc`. Multiple sort criteria are supported and must be separated
	// with a comma. Example: `sort=date:desc,name:asc`.
	Sort *[]string `json:"sort,omitempty"`
}

// PutV2EnrollmentLanguagesLanguageIdJSONBody defines parameters for PutV2EnrollmentLanguagesLanguageId.
type PutV2EnrollmentLanguagesLanguageIdJSONBody EnrollmentProcessTextObject

// PostV2InventoryPreloadExportJSONBody defines parameters for PostV2InventoryPreloadExport.
type PostV2InventoryPreloadExportJSONBody ExportParameters

// PostV2InventoryPreloadExportParams defines parameters for PostV2InventoryPreloadExport.
type PostV2InventoryPreloadExportParams struct {
	// Export fields parameter, used to change default order or ignore some of the response properties. Default is empty array, which means that all fields of the response entity will be serialized. Example: export-fields=id,username
	ExportFields *ExportFields `json:"export-fields,omitempty"`

	// Export labels parameter, used to customize fieldnames/columns in the exported file. Default is empty array, which means that response properties names will be used. Number of the provided labels must match the number of export-fields Example: export-labels=identifier,name with matching: export-fields=id,username
	ExportLabels *ExportLabels `json:"export-labels,omitempty"`
	Page         *Page         `json:"page,omitempty"`
	PageSize     *PageSize     `json:"page-size,omitempty"`

	// Sorting criteria in the format: `property:asc/desc`. Default sort
	// is `id:asc`. Multiple sort criteria are supported and must be separated with
	// a comma. All inventory preload fields are supported, however fields added by
	// extension attributes are not supported. If sorting by deviceType, use `0` for
	// Computer and `1` for Mobile Device.
	//
	// Example: `sort=date:desc,name:asc`.
	Sort *[]string `json:"sort,omitempty"`

	// Allowing to filter inventory preload records.
	// Default search is empty query - returning all results for the requested page.
	// All inventory preload fields are supported, however fields added by extension
	// attributes are not supported. If filtering by deviceType, use `0` for Computer
	// and `1` for Mobile Device.
	//
	// Query in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.
	//
	// Example: `filter=categoryName=="Category"`
	Filter *string `json:"filter,omitempty"`
}

// GetV2InventoryPreloadHistoryParams defines parameters for GetV2InventoryPreloadHistory.
type GetV2InventoryPreloadHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: `property:asc/desc`. Default sort
	// is `date:desc`. Multiple sort criteria are supported and must be separated
	// with a comma.
	//
	// Example: `sort=date:desc,name:asc`.
	Sort *[]string `json:"sort,omitempty"`

	// Allows filtering inventory preload history records.
	// Default search is empty query - returning all results for the requested page.
	// All inventory preload history fields are supported.
	//
	// Query in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.
	//
	// Example: `filter=username=="admin"`
	Filter *string `json:"filter,omitempty"`
}

// PostV2InventoryPreloadHistoryJSONBody defines parameters for PostV2InventoryPreloadHistory.
type PostV2InventoryPreloadHistoryJSONBody ObjectHistoryNote

// GetV2InventoryPreloadRecordsParams defines parameters for GetV2InventoryPreloadRecords.
type GetV2InventoryPreloadRecordsParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: `property:asc/desc`. Default sort
	// is `id:asc`. Multiple sort criteria are supported and must be separated with
	// a comma. All inventory preload fields are supported, however fields added by
	// extension attributes are not supported. If sorting by deviceType, use `0` for
	// Computer and `1` for Mobile Device.
	//
	// Example: `sort=date:desc,name:asc`.
	Sort *[]string `json:"sort,omitempty"`

	// Allowing to filter inventory preload records.
	// Default search is empty query - returning all results for the requested page.
	// All inventory preload fields are supported, however fields added by extension
	// attributes are not supported. If filtering by deviceType, use `0` for Computer
	// and `1` for Mobile Device.
	//
	// Query in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.
	//
	// Example: `filter=categoryName=="Category"`
	Filter *string `json:"filter,omitempty"`
}

// PostV2InventoryPreloadRecordsJSONBody defines parameters for PostV2InventoryPreloadRecords.
type PostV2InventoryPreloadRecordsJSONBody InventoryPreloadRecordV2

// PutV2InventoryPreloadRecordsIdJSONBody defines parameters for PutV2InventoryPreloadRecordsId.
type PutV2InventoryPreloadRecordsIdJSONBody InventoryPreloadRecordV2

// GetV2JamfPackageParams defines parameters for GetV2JamfPackage.
type GetV2JamfPackageParams struct {
	// The Jamf Application key. The only supported values are protect and connect.
	Application string `json:"application"`
}

// GetV2MobileDevicePrestagesParams defines parameters for GetV2MobileDevicePrestages.
type GetV2MobileDevicePrestagesParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV2MobileDevicePrestagesJSONBody defines parameters for PostV2MobileDevicePrestages.
type PostV2MobileDevicePrestagesJSONBody MobileDevicePrestageV2

// PutV2MobileDevicePrestagesIdJSONBody defines parameters for PutV2MobileDevicePrestagesId.
type PutV2MobileDevicePrestagesIdJSONBody PutMobileDevicePrestageV2

// PostV2MobileDevicePrestagesIdAttachmentsDeleteMultipleJSONBody defines parameters for PostV2MobileDevicePrestagesIdAttachmentsDeleteMultiple.
type PostV2MobileDevicePrestagesIdAttachmentsDeleteMultipleJSONBody Ids

// GetV2MobileDevicePrestagesIdHistoryParams defines parameters for GetV2MobileDevicePrestagesIdHistory.
type GetV2MobileDevicePrestagesIdHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc
	Sort *[]string `json:"sort,omitempty"`
}

// PostV2MobileDevicePrestagesIdHistoryJSONBody defines parameters for PostV2MobileDevicePrestagesIdHistory.
type PostV2MobileDevicePrestagesIdHistoryJSONBody ObjectHistoryNote

// PostV2MobileDevicePrestagesIdScopeJSONBody defines parameters for PostV2MobileDevicePrestagesIdScope.
type PostV2MobileDevicePrestagesIdScopeJSONBody PrestageScopeUpdate

// PutV2MobileDevicePrestagesIdScopeJSONBody defines parameters for PutV2MobileDevicePrestagesIdScope.
type PutV2MobileDevicePrestagesIdScopeJSONBody PrestageScopeUpdate

// PostV2MobileDevicePrestagesIdScopeDeleteMultipleJSONBody defines parameters for PostV2MobileDevicePrestagesIdScopeDeleteMultiple.
type PostV2MobileDevicePrestagesIdScopeDeleteMultipleJSONBody PrestageScopeUpdate

// GetV2MobileDevicesParams defines parameters for GetV2MobileDevices.
type GetV2MobileDevicesParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc
	Sort *[]string `json:"sort,omitempty"`
}

// PatchV2MobileDevicesIdJSONBody defines parameters for PatchV2MobileDevicesId.
type PatchV2MobileDevicesIdJSONBody UpdateMobileDeviceV2

// PutV2SsoCertJSONBody defines parameters for PutV2SsoCert.
type PutV2SsoCertJSONBody SsoKeystore

// PostV2SsoCertParseJSONBody defines parameters for PostV2SsoCertParse.
type PostV2SsoCertParseJSONBody SsoKeystoreParse

// PutV3CheckInJSONBody defines parameters for PutV3CheckIn.
type PutV3CheckInJSONBody ClientCheckInV3

// GetV3CheckInHistoryParams defines parameters for GetV3CheckInHistory.
type GetV3CheckInHistoryParams struct {
	Page     *Page     `json:"page,omitempty"`
	PageSize *PageSize `json:"page-size,omitempty"`

	// Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc
	Sort *[]string `json:"sort,omitempty"`

	// Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15
	Filter *string `json:"filter,omitempty"`
}

// PostV3CheckInHistoryJSONBody defines parameters for PostV3CheckInHistory.
type PostV3CheckInHistoryJSONBody ObjectHistoryNote

// PostInventoryPreloadJSONRequestBody defines body for PostInventoryPreload for application/json ContentType.
type PostInventoryPreloadJSONRequestBody PostInventoryPreloadJSONBody

// PostInventoryPreloadHistoryNotesJSONRequestBody defines body for PostInventoryPreloadHistoryNotes for application/json ContentType.
type PostInventoryPreloadHistoryNotesJSONRequestBody PostInventoryPreloadHistoryNotesJSONBody

// PutInventoryPreloadIdJSONRequestBody defines body for PutInventoryPreloadId for application/json ContentType.
type PutInventoryPreloadIdJSONRequestBody PutInventoryPreloadIdJSONBody

// PutPatchObjIdJSONRequestBody defines body for PutPatchObjId for application/json ContentType.
type PutPatchObjIdJSONRequestBody PutPatchObjIdJSONBody

// PostPatchRetryPolicyJSONRequestBody defines body for PostPatchRetryPolicy for application/json ContentType.
type PostPatchRetryPolicyJSONRequestBody PostPatchRetryPolicyJSONBody

// PostPatchSearchActivePatchHistoryJSONRequestBody defines body for PostPatchSearchActivePatchHistory for application/json ContentType.
type PostPatchSearchActivePatchHistoryJSONRequestBody PostPatchSearchActivePatchHistoryJSONBody

// PostPatchSearchPatchPolicyLogsJSONRequestBody defines body for PostPatchSearchPatchPolicyLogs for application/json ContentType.
type PostPatchSearchPatchPolicyLogsJSONRequestBody PostPatchSearchPatchPolicyLogsJSONBody

// PostPatchSvcRetryPolicyJSONRequestBody defines body for PostPatchSvcRetryPolicy for application/json ContentType.
type PostPatchSvcRetryPolicyJSONRequestBody PostPatchSvcRetryPolicyJSONBody

// PutPatchIdJSONRequestBody defines body for PutPatchId for application/json ContentType.
type PutPatchIdJSONRequestBody PutPatchIdJSONBody

// PostPreviewEnrollmentAccessGroupsJSONRequestBody defines body for PostPreviewEnrollmentAccessGroups for application/json ContentType.
type PostPreviewEnrollmentAccessGroupsJSONRequestBody PostPreviewEnrollmentAccessGroupsJSONBody

// PutPreviewEnrollmentAccessGroupsIdJSONRequestBody defines body for PutPreviewEnrollmentAccessGroupsId for application/json ContentType.
type PutPreviewEnrollmentAccessGroupsIdJSONRequestBody PutPreviewEnrollmentAccessGroupsIdJSONBody

// PostPreviewMdmCommandsJSONRequestBody defines body for PostPreviewMdmCommands for application/json ContentType.
type PostPreviewMdmCommandsJSONRequestBody PostPreviewMdmCommandsJSONBody

// PostPreviewRemoteAdministrationConfigurationsTeamViewerJSONRequestBody defines body for PostPreviewRemoteAdministrationConfigurationsTeamViewer for application/json ContentType.
type PostPreviewRemoteAdministrationConfigurationsTeamViewerJSONRequestBody PostPreviewRemoteAdministrationConfigurationsTeamViewerJSONBody

// PostPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessionsJSONRequestBody defines body for PostPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessions for application/json ContentType.
type PostPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessionsJSONRequestBody PostPreviewRemoteAdministrationConfigurationsTeamViewerConfigurationIdSessionsJSONBody

// PatchPreviewRemoteAdministrationConfigurationsTeamViewerIdJSONRequestBody defines body for PatchPreviewRemoteAdministrationConfigurationsTeamViewerId for application/json ContentType.
type PatchPreviewRemoteAdministrationConfigurationsTeamViewerIdJSONRequestBody PatchPreviewRemoteAdministrationConfigurationsTeamViewerIdJSONBody

// PutSettingsObjPolicyPropertiesJSONRequestBody defines body for PutSettingsObjPolicyProperties for application/json ContentType.
type PutSettingsObjPolicyPropertiesJSONRequestBody PutSettingsObjPolicyPropertiesJSONBody

// PostSystemInitializeJSONRequestBody defines body for PostSystemInitialize for application/json ContentType.
type PostSystemInitializeJSONRequestBody PostSystemInitializeJSONBody

// PostSystemInitializeDatabaseConnectionJSONRequestBody defines body for PostSystemInitializeDatabaseConnection for application/json ContentType.
type PostSystemInitializeDatabaseConnectionJSONRequestBody PostSystemInitializeDatabaseConnectionJSONBody

// PutUserObjPreferenceKeyJSONRequestBody defines body for PutUserObjPreferenceKey for application/json ContentType.
type PutUserObjPreferenceKeyJSONRequestBody PutUserObjPreferenceKeyJSONBody

// PostUserUpdateSessionJSONRequestBody defines body for PostUserUpdateSession for application/json ContentType.
type PostUserUpdateSessionJSONRequestBody PostUserUpdateSessionJSONBody

// PostV1AdvancedMobileDeviceSearchesJSONRequestBody defines body for PostV1AdvancedMobileDeviceSearches for application/json ContentType.
type PostV1AdvancedMobileDeviceSearchesJSONRequestBody PostV1AdvancedMobileDeviceSearchesJSONBody

// PostV1AdvancedMobileDeviceSearchesDeleteMultipleJSONRequestBody defines body for PostV1AdvancedMobileDeviceSearchesDeleteMultiple for application/json ContentType.
type PostV1AdvancedMobileDeviceSearchesDeleteMultipleJSONRequestBody PostV1AdvancedMobileDeviceSearchesDeleteMultipleJSONBody

// PutV1AdvancedMobileDeviceSearchesIdJSONRequestBody defines body for PutV1AdvancedMobileDeviceSearchesId for application/json ContentType.
type PutV1AdvancedMobileDeviceSearchesIdJSONRequestBody PutV1AdvancedMobileDeviceSearchesIdJSONBody

// PostV1AdvancedUserContentSearchesJSONRequestBody defines body for PostV1AdvancedUserContentSearches for application/json ContentType.
type PostV1AdvancedUserContentSearchesJSONRequestBody PostV1AdvancedUserContentSearchesJSONBody

// PutV1AdvancedUserContentSearchesIdJSONRequestBody defines body for PutV1AdvancedUserContentSearchesId for application/json ContentType.
type PutV1AdvancedUserContentSearchesIdJSONRequestBody PutV1AdvancedUserContentSearchesIdJSONBody

// PostV1AppRequestFormInputFieldsJSONRequestBody defines body for PostV1AppRequestFormInputFields for application/json ContentType.
type PostV1AppRequestFormInputFieldsJSONRequestBody PostV1AppRequestFormInputFieldsJSONBody

// PutV1AppRequestFormInputFieldsJSONRequestBody defines body for PutV1AppRequestFormInputFields for application/json ContentType.
type PutV1AppRequestFormInputFieldsJSONRequestBody PutV1AppRequestFormInputFieldsJSONBody

// PutV1AppRequestFormInputFieldsIdJSONRequestBody defines body for PutV1AppRequestFormInputFieldsId for application/json ContentType.
type PutV1AppRequestFormInputFieldsIdJSONRequestBody PutV1AppRequestFormInputFieldsIdJSONBody

// PutV1AppRequestSettingsJSONRequestBody defines body for PutV1AppRequestSettings for application/json ContentType.
type PutV1AppRequestSettingsJSONRequestBody PutV1AppRequestSettingsJSONBody

// PostV1AzureAdMigrationReportsJSONRequestBody defines body for PostV1AzureAdMigrationReports for application/json ContentType.
type PostV1AzureAdMigrationReportsJSONRequestBody PostV1AzureAdMigrationReportsJSONBody

// PostV1BuildingsJSONRequestBody defines body for PostV1Buildings for application/json ContentType.
type PostV1BuildingsJSONRequestBody PostV1BuildingsJSONBody

// PostV1BuildingsDeleteMultipleJSONRequestBody defines body for PostV1BuildingsDeleteMultiple for application/json ContentType.
type PostV1BuildingsDeleteMultipleJSONRequestBody PostV1BuildingsDeleteMultipleJSONBody

// PutV1BuildingsIdJSONRequestBody defines body for PutV1BuildingsId for application/json ContentType.
type PutV1BuildingsIdJSONRequestBody PutV1BuildingsIdJSONBody

// PostV1BuildingsIdHistoryJSONRequestBody defines body for PostV1BuildingsIdHistory for application/json ContentType.
type PostV1BuildingsIdHistoryJSONRequestBody PostV1BuildingsIdHistoryJSONBody

// PutV1CacheSettingsJSONRequestBody defines body for PutV1CacheSettings for application/json ContentType.
type PutV1CacheSettingsJSONRequestBody PutV1CacheSettingsJSONBody

// PostV1CategoriesJSONRequestBody defines body for PostV1Categories for application/json ContentType.
type PostV1CategoriesJSONRequestBody PostV1CategoriesJSONBody

// PostV1CategoriesDeleteMultipleJSONRequestBody defines body for PostV1CategoriesDeleteMultiple for application/json ContentType.
type PostV1CategoriesDeleteMultipleJSONRequestBody PostV1CategoriesDeleteMultipleJSONBody

// PutV1CategoriesIdJSONRequestBody defines body for PutV1CategoriesId for application/json ContentType.
type PutV1CategoriesIdJSONRequestBody PutV1CategoriesIdJSONBody

// PostV1CategoriesIdHistoryJSONRequestBody defines body for PostV1CategoriesIdHistory for application/json ContentType.
type PostV1CategoriesIdHistoryJSONRequestBody PostV1CategoriesIdHistoryJSONBody

// PostV1CloudAzureJSONRequestBody defines body for PostV1CloudAzure for application/json ContentType.
type PostV1CloudAzureJSONRequestBody PostV1CloudAzureJSONBody

// PutV1CloudAzureIdJSONRequestBody defines body for PutV1CloudAzureId for application/json ContentType.
type PutV1CloudAzureIdJSONRequestBody PutV1CloudAzureIdJSONBody

// PostV1CloudIdpExportJSONRequestBody defines body for PostV1CloudIdpExport for application/json ContentType.
type PostV1CloudIdpExportJSONRequestBody PostV1CloudIdpExportJSONBody

// PostV1CloudIdpIdHistoryJSONRequestBody defines body for PostV1CloudIdpIdHistory for application/json ContentType.
type PostV1CloudIdpIdHistoryJSONRequestBody PostV1CloudIdpIdHistoryJSONBody

// PostV1CloudIdpIdTestGroupJSONRequestBody defines body for PostV1CloudIdpIdTestGroup for application/json ContentType.
type PostV1CloudIdpIdTestGroupJSONRequestBody PostV1CloudIdpIdTestGroupJSONBody

// PostV1CloudIdpIdTestUserJSONRequestBody defines body for PostV1CloudIdpIdTestUser for application/json ContentType.
type PostV1CloudIdpIdTestUserJSONRequestBody PostV1CloudIdpIdTestUserJSONBody

// PostV1CloudIdpIdTestUserMembershipJSONRequestBody defines body for PostV1CloudIdpIdTestUserMembership for application/json ContentType.
type PostV1CloudIdpIdTestUserMembershipJSONRequestBody PostV1CloudIdpIdTestUserMembershipJSONBody

// PostV1CloudLdapsJSONRequestBody defines body for PostV1CloudLdaps for application/json ContentType.
type PostV1CloudLdapsJSONRequestBody PostV1CloudLdapsJSONBody

// PutV1CloudLdapsIdJSONRequestBody defines body for PutV1CloudLdapsId for application/json ContentType.
type PutV1CloudLdapsIdJSONRequestBody PutV1CloudLdapsIdJSONBody

// PostV1CloudLdapsIdHistoryJSONRequestBody defines body for PostV1CloudLdapsIdHistory for application/json ContentType.
type PostV1CloudLdapsIdHistoryJSONRequestBody PostV1CloudLdapsIdHistoryJSONBody

// PutV1CloudLdapsIdMappingsJSONRequestBody defines body for PutV1CloudLdapsIdMappings for application/json ContentType.
type PutV1CloudLdapsIdMappingsJSONRequestBody PutV1CloudLdapsIdMappingsJSONBody

// PostV1CloudLdapsIdTestGroupJSONRequestBody defines body for PostV1CloudLdapsIdTestGroup for application/json ContentType.
type PostV1CloudLdapsIdTestGroupJSONRequestBody PostV1CloudLdapsIdTestGroupJSONBody

// PostV1CloudLdapsIdTestUserJSONRequestBody defines body for PostV1CloudLdapsIdTestUser for application/json ContentType.
type PostV1CloudLdapsIdTestUserJSONRequestBody PostV1CloudLdapsIdTestUserJSONBody

// PostV1CloudLdapsIdTestUserMembershipJSONRequestBody defines body for PostV1CloudLdapsIdTestUserMembership for application/json ContentType.
type PostV1CloudLdapsIdTestUserMembershipJSONRequestBody PostV1CloudLdapsIdTestUserMembershipJSONBody

// PatchV1ComputerInventoryCollectionSettingsJSONRequestBody defines body for PatchV1ComputerInventoryCollectionSettings for application/json ContentType.
type PatchV1ComputerInventoryCollectionSettingsJSONRequestBody PatchV1ComputerInventoryCollectionSettingsJSONBody

// PostV1ComputerInventoryCollectionSettingsCustomPathJSONRequestBody defines body for PostV1ComputerInventoryCollectionSettingsCustomPath for application/json ContentType.
type PostV1ComputerInventoryCollectionSettingsCustomPathJSONRequestBody PostV1ComputerInventoryCollectionSettingsCustomPathJSONBody

// PostV1ComputerPrestagesJSONRequestBody defines body for PostV1ComputerPrestages for application/json ContentType.
type PostV1ComputerPrestagesJSONRequestBody PostV1ComputerPrestagesJSONBody

// PutV1ComputerPrestagesIdJSONRequestBody defines body for PutV1ComputerPrestagesId for application/json ContentType.
type PutV1ComputerPrestagesIdJSONRequestBody PutV1ComputerPrestagesIdJSONBody

// DeleteV1ComputerPrestagesIdScopeJSONRequestBody defines body for DeleteV1ComputerPrestagesIdScope for application/json ContentType.
type DeleteV1ComputerPrestagesIdScopeJSONRequestBody DeleteV1ComputerPrestagesIdScopeJSONBody

// PostV1ComputerPrestagesIdScopeJSONRequestBody defines body for PostV1ComputerPrestagesIdScope for application/json ContentType.
type PostV1ComputerPrestagesIdScopeJSONRequestBody PostV1ComputerPrestagesIdScopeJSONBody

// PutV1ComputerPrestagesIdScopeJSONRequestBody defines body for PutV1ComputerPrestagesIdScope for application/json ContentType.
type PutV1ComputerPrestagesIdScopeJSONRequestBody PutV1ComputerPrestagesIdScopeJSONBody

// PatchV1ComputersInventoryDetailIdJSONRequestBody defines body for PatchV1ComputersInventoryDetailId for application/json ContentType.
type PatchV1ComputersInventoryDetailIdJSONRequestBody PatchV1ComputersInventoryDetailIdJSONBody

// PostV1CsaTokenJSONRequestBody defines body for PostV1CsaToken for application/json ContentType.
type PostV1CsaTokenJSONRequestBody PostV1CsaTokenJSONBody

// PutV1CsaTokenJSONRequestBody defines body for PutV1CsaToken for application/json ContentType.
type PutV1CsaTokenJSONRequestBody PutV1CsaTokenJSONBody

// PostV1DepartmentsJSONRequestBody defines body for PostV1Departments for application/json ContentType.
type PostV1DepartmentsJSONRequestBody PostV1DepartmentsJSONBody

// PostV1DepartmentsDeleteMultipleJSONRequestBody defines body for PostV1DepartmentsDeleteMultiple for application/json ContentType.
type PostV1DepartmentsDeleteMultipleJSONRequestBody PostV1DepartmentsDeleteMultipleJSONBody

// PutV1DepartmentsIdJSONRequestBody defines body for PutV1DepartmentsId for application/json ContentType.
type PutV1DepartmentsIdJSONRequestBody PutV1DepartmentsIdJSONBody

// PostV1DepartmentsIdHistoryJSONRequestBody defines body for PostV1DepartmentsIdHistory for application/json ContentType.
type PostV1DepartmentsIdHistoryJSONRequestBody PostV1DepartmentsIdHistoryJSONBody

// PostV1DeployPackageJSONRequestBody defines body for PostV1DeployPackage for application/json ContentType.
type PostV1DeployPackageJSONRequestBody PostV1DeployPackageJSONBody

// PutV1DeviceCommunicationSettingsJSONRequestBody defines body for PutV1DeviceCommunicationSettings for application/json ContentType.
type PutV1DeviceCommunicationSettingsJSONRequestBody PutV1DeviceCommunicationSettingsJSONBody

// PostV1DeviceCommunicationSettingsHistoryJSONRequestBody defines body for PostV1DeviceCommunicationSettingsHistory for application/json ContentType.
type PostV1DeviceCommunicationSettingsHistoryJSONRequestBody PostV1DeviceCommunicationSettingsHistoryJSONBody

// PostV1DeviceEnrollmentsUploadTokenJSONRequestBody defines body for PostV1DeviceEnrollmentsUploadToken for application/json ContentType.
type PostV1DeviceEnrollmentsUploadTokenJSONRequestBody PostV1DeviceEnrollmentsUploadTokenJSONBody

// PutV1DeviceEnrollmentsIdJSONRequestBody defines body for PutV1DeviceEnrollmentsId for application/json ContentType.
type PutV1DeviceEnrollmentsIdJSONRequestBody PutV1DeviceEnrollmentsIdJSONBody

// PostV1DeviceEnrollmentsIdDisownJSONRequestBody defines body for PostV1DeviceEnrollmentsIdDisown for application/json ContentType.
type PostV1DeviceEnrollmentsIdDisownJSONRequestBody PostV1DeviceEnrollmentsIdDisownJSONBody

// PostV1DeviceEnrollmentsIdHistoryJSONRequestBody defines body for PostV1DeviceEnrollmentsIdHistory for application/json ContentType.
type PostV1DeviceEnrollmentsIdHistoryJSONRequestBody PostV1DeviceEnrollmentsIdHistoryJSONBody

// PutV1DeviceEnrollmentsIdUploadTokenJSONRequestBody defines body for PutV1DeviceEnrollmentsIdUploadToken for application/json ContentType.
type PutV1DeviceEnrollmentsIdUploadTokenJSONRequestBody PutV1DeviceEnrollmentsIdUploadTokenJSONBody

// PutV1EngageJSONRequestBody defines body for PutV1Engage for application/json ContentType.
type PutV1EngageJSONRequestBody PutV1EngageJSONBody

// PostV1EngageHistoryJSONRequestBody defines body for PostV1EngageHistory for application/json ContentType.
type PostV1EngageHistoryJSONRequestBody PostV1EngageHistoryJSONBody

// PutV1EnrollmentJSONRequestBody defines body for PutV1Enrollment for application/json ContentType.
type PutV1EnrollmentJSONRequestBody PutV1EnrollmentJSONBody

// PostV1EnrollmentCustomizationJSONRequestBody defines body for PostV1EnrollmentCustomization for application/json ContentType.
type PostV1EnrollmentCustomizationJSONRequestBody PostV1EnrollmentCustomizationJSONBody

// PostV1EnrollmentCustomizationParseMarkdownJSONRequestBody defines body for PostV1EnrollmentCustomizationParseMarkdown for application/json ContentType.
type PostV1EnrollmentCustomizationParseMarkdownJSONRequestBody PostV1EnrollmentCustomizationParseMarkdownJSONBody

// PutV1EnrollmentCustomizationIdJSONRequestBody defines body for PutV1EnrollmentCustomizationId for application/json ContentType.
type PutV1EnrollmentCustomizationIdJSONRequestBody PutV1EnrollmentCustomizationIdJSONBody

// PostV1EnrollmentCustomizationIdHistoryJSONRequestBody defines body for PostV1EnrollmentCustomizationIdHistory for application/json ContentType.
type PostV1EnrollmentCustomizationIdHistoryJSONRequestBody PostV1EnrollmentCustomizationIdHistoryJSONBody

// PostV1EnrollmentCustomizationIdLdapJSONRequestBody defines body for PostV1EnrollmentCustomizationIdLdap for application/json ContentType.
type PostV1EnrollmentCustomizationIdLdapJSONRequestBody PostV1EnrollmentCustomizationIdLdapJSONBody

// PutV1EnrollmentCustomizationIdLdapPanelIdJSONRequestBody defines body for PutV1EnrollmentCustomizationIdLdapPanelId for application/json ContentType.
type PutV1EnrollmentCustomizationIdLdapPanelIdJSONRequestBody PutV1EnrollmentCustomizationIdLdapPanelIdJSONBody

// PostV1EnrollmentCustomizationIdSsoJSONRequestBody defines body for PostV1EnrollmentCustomizationIdSso for application/json ContentType.
type PostV1EnrollmentCustomizationIdSsoJSONRequestBody PostV1EnrollmentCustomizationIdSsoJSONBody

// PutV1EnrollmentCustomizationIdSsoPanelIdJSONRequestBody defines body for PutV1EnrollmentCustomizationIdSsoPanelId for application/json ContentType.
type PutV1EnrollmentCustomizationIdSsoPanelIdJSONRequestBody PutV1EnrollmentCustomizationIdSsoPanelIdJSONBody

// PostV1EnrollmentCustomizationIdTextJSONRequestBody defines body for PostV1EnrollmentCustomizationIdText for application/json ContentType.
type PostV1EnrollmentCustomizationIdTextJSONRequestBody PostV1EnrollmentCustomizationIdTextJSONBody

// PutV1EnrollmentCustomizationIdTextPanelIdJSONRequestBody defines body for PutV1EnrollmentCustomizationIdTextPanelId for application/json ContentType.
type PutV1EnrollmentCustomizationIdTextPanelIdJSONRequestBody PutV1EnrollmentCustomizationIdTextPanelIdJSONBody

// PutV1EnrollmentAccessGroupsGroupKeyJSONRequestBody defines body for PutV1EnrollmentAccessGroupsGroupKey for application/json ContentType.
type PutV1EnrollmentAccessGroupsGroupKeyJSONRequestBody PutV1EnrollmentAccessGroupsGroupKeyJSONBody

// PostV1EnrollmentHistoryJSONRequestBody defines body for PostV1EnrollmentHistory for application/json ContentType.
type PostV1EnrollmentHistoryJSONRequestBody PostV1EnrollmentHistoryJSONBody

// PutV1EnrollmentLanguagesLanguageJSONRequestBody defines body for PutV1EnrollmentLanguagesLanguage for application/json ContentType.
type PutV1EnrollmentLanguagesLanguageJSONRequestBody PutV1EnrollmentLanguagesLanguageJSONBody

// PostV1InventoryPreloadJSONRequestBody defines body for PostV1InventoryPreload for application/json ContentType.
type PostV1InventoryPreloadJSONRequestBody PostV1InventoryPreloadJSONBody

// PostV1InventoryPreloadHistoryJSONRequestBody defines body for PostV1InventoryPreloadHistory for application/json ContentType.
type PostV1InventoryPreloadHistoryJSONRequestBody PostV1InventoryPreloadHistoryJSONBody

// PutV1InventoryPreloadIdJSONRequestBody defines body for PutV1InventoryPreloadId for application/json ContentType.
type PutV1InventoryPreloadIdJSONRequestBody PutV1InventoryPreloadIdJSONBody

// PutV1JamfConnectConfigProfilesIdJSONRequestBody defines body for PutV1JamfConnectConfigProfilesId for application/json ContentType.
type PutV1JamfConnectConfigProfilesIdJSONRequestBody PutV1JamfConnectConfigProfilesIdJSONBody

// PostV1JamfConnectDeploymentsIdTasksRetryJSONRequestBody defines body for PostV1JamfConnectDeploymentsIdTasksRetry for application/json ContentType.
type PostV1JamfConnectDeploymentsIdTasksRetryJSONRequestBody PostV1JamfConnectDeploymentsIdTasksRetryJSONBody

// PostV1JamfConnectHistoryJSONRequestBody defines body for PostV1JamfConnectHistory for application/json ContentType.
type PostV1JamfConnectHistoryJSONRequestBody PostV1JamfConnectHistoryJSONBody

// PutV1JamfProServerUrlJSONRequestBody defines body for PutV1JamfProServerUrl for application/json ContentType.
type PutV1JamfProServerUrlJSONRequestBody PutV1JamfProServerUrlJSONBody

// PostV1JamfProServerUrlHistoryJSONRequestBody defines body for PostV1JamfProServerUrlHistory for application/json ContentType.
type PostV1JamfProServerUrlHistoryJSONRequestBody PostV1JamfProServerUrlHistoryJSONBody

// PutV1JamfProtectJSONRequestBody defines body for PutV1JamfProtect for application/json ContentType.
type PutV1JamfProtectJSONRequestBody PutV1JamfProtectJSONBody

// PostV1JamfProtectDeploymentsIdTasksRetryJSONRequestBody defines body for PostV1JamfProtectDeploymentsIdTasksRetry for application/json ContentType.
type PostV1JamfProtectDeploymentsIdTasksRetryJSONRequestBody PostV1JamfProtectDeploymentsIdTasksRetryJSONBody

// PostV1JamfProtectHistoryJSONRequestBody defines body for PostV1JamfProtectHistory for application/json ContentType.
type PostV1JamfProtectHistoryJSONRequestBody PostV1JamfProtectHistoryJSONBody

// PostV1JamfProtectRegisterJSONRequestBody defines body for PostV1JamfProtectRegister for application/json ContentType.
type PostV1JamfProtectRegisterJSONRequestBody PostV1JamfProtectRegisterJSONBody

// PostV1LdapKeystoreVerifyJSONRequestBody defines body for PostV1LdapKeystoreVerify for application/json ContentType.
type PostV1LdapKeystoreVerifyJSONRequestBody PostV1LdapKeystoreVerifyJSONBody

// PostV1MacosManagedSoftwareUpdatesSendUpdatesJSONRequestBody defines body for PostV1MacosManagedSoftwareUpdatesSendUpdates for application/json ContentType.
type PostV1MacosManagedSoftwareUpdatesSendUpdatesJSONRequestBody PostV1MacosManagedSoftwareUpdatesSendUpdatesJSONBody

// PostV1MdmRenewProfileJSONRequestBody defines body for PostV1MdmRenewProfile for application/json ContentType.
type PostV1MdmRenewProfileJSONRequestBody PostV1MdmRenewProfileJSONBody

// PostV1MobileDevicePrestagesJSONRequestBody defines body for PostV1MobileDevicePrestages for application/json ContentType.
type PostV1MobileDevicePrestagesJSONRequestBody PostV1MobileDevicePrestagesJSONBody

// PutV1MobileDevicePrestagesIdJSONRequestBody defines body for PutV1MobileDevicePrestagesId for application/json ContentType.
type PutV1MobileDevicePrestagesIdJSONRequestBody PutV1MobileDevicePrestagesIdJSONBody

// DeleteV1MobileDevicePrestagesIdAttachmentsJSONRequestBody defines body for DeleteV1MobileDevicePrestagesIdAttachments for application/json ContentType.
type DeleteV1MobileDevicePrestagesIdAttachmentsJSONRequestBody DeleteV1MobileDevicePrestagesIdAttachmentsJSONBody

// PostV1MobileDevicePrestagesIdHistoryJSONRequestBody defines body for PostV1MobileDevicePrestagesIdHistory for application/json ContentType.
type PostV1MobileDevicePrestagesIdHistoryJSONRequestBody PostV1MobileDevicePrestagesIdHistoryJSONBody

// DeleteV1MobileDevicePrestagesIdScopeJSONRequestBody defines body for DeleteV1MobileDevicePrestagesIdScope for application/json ContentType.
type DeleteV1MobileDevicePrestagesIdScopeJSONRequestBody DeleteV1MobileDevicePrestagesIdScopeJSONBody

// PostV1MobileDevicePrestagesIdScopeJSONRequestBody defines body for PostV1MobileDevicePrestagesIdScope for application/json ContentType.
type PostV1MobileDevicePrestagesIdScopeJSONRequestBody PostV1MobileDevicePrestagesIdScopeJSONBody

// PutV1MobileDevicePrestagesIdScopeJSONRequestBody defines body for PutV1MobileDevicePrestagesIdScope for application/json ContentType.
type PutV1MobileDevicePrestagesIdScopeJSONRequestBody PutV1MobileDevicePrestagesIdScopeJSONBody

// PatchV1MobileDevicesIdJSONRequestBody defines body for PatchV1MobileDevicesId for application/json ContentType.
type PatchV1MobileDevicesIdJSONRequestBody PatchV1MobileDevicesIdJSONBody

// PutV1ParentAppJSONRequestBody defines body for PutV1ParentApp for application/json ContentType.
type PutV1ParentAppJSONRequestBody PutV1ParentAppJSONBody

// PostV1ParentAppHistoryJSONRequestBody defines body for PostV1ParentAppHistory for application/json ContentType.
type PostV1ParentAppHistoryJSONRequestBody PostV1ParentAppHistoryJSONBody

// PostV1PkiVenafiJSONRequestBody defines body for PostV1PkiVenafi for application/json ContentType.
type PostV1PkiVenafiJSONRequestBody PostV1PkiVenafiJSONBody

// PatchV1PkiVenafiIdJSONRequestBody defines body for PatchV1PkiVenafiId for application/json ContentType.
type PatchV1PkiVenafiIdJSONRequestBody PatchV1PkiVenafiIdJSONBody

// PostV1PkiVenafiIdHistoryJSONRequestBody defines body for PostV1PkiVenafiIdHistory for application/json ContentType.
type PostV1PkiVenafiIdHistoryJSONRequestBody PostV1PkiVenafiIdHistoryJSONBody

// PutV1PolicyPropertiesJSONRequestBody defines body for PutV1PolicyProperties for application/json ContentType.
type PutV1PolicyPropertiesJSONRequestBody PutV1PolicyPropertiesJSONBody

// PutV1ReenrollmentJSONRequestBody defines body for PutV1Reenrollment for application/json ContentType.
type PutV1ReenrollmentJSONRequestBody PutV1ReenrollmentJSONBody

// PostV1ReenrollmentHistoryJSONRequestBody defines body for PostV1ReenrollmentHistory for application/json ContentType.
type PostV1ReenrollmentHistoryJSONRequestBody PostV1ReenrollmentHistoryJSONBody

// PostV1ScriptsJSONRequestBody defines body for PostV1Scripts for application/json ContentType.
type PostV1ScriptsJSONRequestBody PostV1ScriptsJSONBody

// PutV1ScriptsIdJSONRequestBody defines body for PutV1ScriptsId for application/json ContentType.
type PutV1ScriptsIdJSONRequestBody PutV1ScriptsIdJSONBody

// PostV1ScriptsIdHistoryJSONRequestBody defines body for PostV1ScriptsIdHistory for application/json ContentType.
type PostV1ScriptsIdHistoryJSONRequestBody PostV1ScriptsIdHistoryJSONBody

// PostV1SearchMobileDevicesJSONRequestBody defines body for PostV1SearchMobileDevices for application/json ContentType.
type PostV1SearchMobileDevicesJSONRequestBody PostV1SearchMobileDevicesJSONBody

// PostV1SelfServiceBrandingIosJSONRequestBody defines body for PostV1SelfServiceBrandingIos for application/json ContentType.
type PostV1SelfServiceBrandingIosJSONRequestBody PostV1SelfServiceBrandingIosJSONBody

// PutV1SelfServiceBrandingIosIdJSONRequestBody defines body for PutV1SelfServiceBrandingIosId for application/json ContentType.
type PutV1SelfServiceBrandingIosIdJSONRequestBody PutV1SelfServiceBrandingIosIdJSONBody

// PostV1SelfServiceBrandingMacosJSONRequestBody defines body for PostV1SelfServiceBrandingMacos for application/json ContentType.
type PostV1SelfServiceBrandingMacosJSONRequestBody PostV1SelfServiceBrandingMacosJSONBody

// PutV1SelfServiceBrandingMacosIdJSONRequestBody defines body for PutV1SelfServiceBrandingMacosId for application/json ContentType.
type PutV1SelfServiceBrandingMacosIdJSONRequestBody PutV1SelfServiceBrandingMacosIdJSONBody

// PutV1SelfServiceSettingsJSONRequestBody defines body for PutV1SelfServiceSettings for application/json ContentType.
type PutV1SelfServiceSettingsJSONRequestBody PutV1SelfServiceSettingsJSONBody

// PutV1SsoJSONRequestBody defines body for PutV1Sso for application/json ContentType.
type PutV1SsoJSONRequestBody PutV1SsoJSONBody

// PutV1SsoCertJSONRequestBody defines body for PutV1SsoCert for application/json ContentType.
type PutV1SsoCertJSONRequestBody PutV1SsoCertJSONBody

// PostV1SsoCertParseJSONRequestBody defines body for PostV1SsoCertParse for application/json ContentType.
type PostV1SsoCertParseJSONRequestBody PostV1SsoCertParseJSONBody

// PostV1SsoHistoryJSONRequestBody defines body for PostV1SsoHistory for application/json ContentType.
type PostV1SsoHistoryJSONRequestBody PostV1SsoHistoryJSONBody

// PostV1SsoValidateJSONRequestBody defines body for PostV1SsoValidate for application/json ContentType.
type PostV1SsoValidateJSONRequestBody PostV1SsoValidateJSONBody

// PostV1SupervisionIdentitiesJSONRequestBody defines body for PostV1SupervisionIdentities for application/json ContentType.
type PostV1SupervisionIdentitiesJSONRequestBody PostV1SupervisionIdentitiesJSONBody

// PostV1SupervisionIdentitiesUploadJSONRequestBody defines body for PostV1SupervisionIdentitiesUpload for application/json ContentType.
type PostV1SupervisionIdentitiesUploadJSONRequestBody PostV1SupervisionIdentitiesUploadJSONBody

// PutV1SupervisionIdentitiesIdJSONRequestBody defines body for PutV1SupervisionIdentitiesId for application/json ContentType.
type PutV1SupervisionIdentitiesIdJSONRequestBody PutV1SupervisionIdentitiesIdJSONBody

// PostV1SystemInitializeJSONRequestBody defines body for PostV1SystemInitialize for application/json ContentType.
type PostV1SystemInitializeJSONRequestBody PostV1SystemInitializeJSONBody

// PostV1SystemInitializeDatabaseConnectionJSONRequestBody defines body for PostV1SystemInitializeDatabaseConnection for application/json ContentType.
type PostV1SystemInitializeDatabaseConnectionJSONRequestBody PostV1SystemInitializeDatabaseConnectionJSONBody

// PutV1TeacherAppJSONRequestBody defines body for PutV1TeacherApp for application/json ContentType.
type PutV1TeacherAppJSONRequestBody PutV1TeacherAppJSONBody

// PostV1TeacherAppHistoryJSONRequestBody defines body for PostV1TeacherAppHistory for application/json ContentType.
type PostV1TeacherAppHistoryJSONRequestBody PostV1TeacherAppHistoryJSONBody

// PutV1UserPreferencesKeyIdJSONRequestBody defines body for PutV1UserPreferencesKeyId for application/json ContentType.
type PutV1UserPreferencesKeyIdJSONRequestBody PutV1UserPreferencesKeyIdJSONBody

// PostV1VolumePurchasingLocationsJSONRequestBody defines body for PostV1VolumePurchasingLocations for application/json ContentType.
type PostV1VolumePurchasingLocationsJSONRequestBody PostV1VolumePurchasingLocationsJSONBody

// PostV1VolumePurchasingSubscriptionsJSONRequestBody defines body for PostV1VolumePurchasingSubscriptions for application/json ContentType.
type PostV1VolumePurchasingSubscriptionsJSONRequestBody PostV1VolumePurchasingSubscriptionsJSONBody

// PutV1VolumePurchasingSubscriptionsIdJSONRequestBody defines body for PutV1VolumePurchasingSubscriptionsId for application/json ContentType.
type PutV1VolumePurchasingSubscriptionsIdJSONRequestBody PutV1VolumePurchasingSubscriptionsIdJSONBody

// PutV2CheckInJSONRequestBody defines body for PutV2CheckIn for application/json ContentType.
type PutV2CheckInJSONRequestBody PutV2CheckInJSONBody

// PostV2CheckInHistoryJSONRequestBody defines body for PostV2CheckInHistory for application/json ContentType.
type PostV2CheckInHistoryJSONRequestBody PostV2CheckInHistoryJSONBody

// PostV2CloudLdapsJSONRequestBody defines body for PostV2CloudLdaps for application/json ContentType.
type PostV2CloudLdapsJSONRequestBody PostV2CloudLdapsJSONBody

// PutV2CloudLdapsIdJSONRequestBody defines body for PutV2CloudLdapsId for application/json ContentType.
type PutV2CloudLdapsIdJSONRequestBody PutV2CloudLdapsIdJSONBody

// PutV2CloudLdapsIdMappingsJSONRequestBody defines body for PutV2CloudLdapsIdMappings for application/json ContentType.
type PutV2CloudLdapsIdMappingsJSONRequestBody PutV2CloudLdapsIdMappingsJSONBody

// PostV2ComputerPrestagesJSONRequestBody defines body for PostV2ComputerPrestages for application/json ContentType.
type PostV2ComputerPrestagesJSONRequestBody PostV2ComputerPrestagesJSONBody

// PutV2ComputerPrestagesIdJSONRequestBody defines body for PutV2ComputerPrestagesId for application/json ContentType.
type PutV2ComputerPrestagesIdJSONRequestBody PutV2ComputerPrestagesIdJSONBody

// PostV2ComputerPrestagesIdScopeJSONRequestBody defines body for PostV2ComputerPrestagesIdScope for application/json ContentType.
type PostV2ComputerPrestagesIdScopeJSONRequestBody PostV2ComputerPrestagesIdScopeJSONBody

// PutV2ComputerPrestagesIdScopeJSONRequestBody defines body for PutV2ComputerPrestagesIdScope for application/json ContentType.
type PutV2ComputerPrestagesIdScopeJSONRequestBody PutV2ComputerPrestagesIdScopeJSONBody

// PostV2ComputerPrestagesIdScopeDeleteMultipleJSONRequestBody defines body for PostV2ComputerPrestagesIdScopeDeleteMultiple for application/json ContentType.
type PostV2ComputerPrestagesIdScopeDeleteMultipleJSONRequestBody PostV2ComputerPrestagesIdScopeDeleteMultipleJSONBody

// PutV2EnrollmentJSONRequestBody defines body for PutV2Enrollment for application/json ContentType.
type PutV2EnrollmentJSONRequestBody PutV2EnrollmentJSONBody

// PostV2EnrollmentCustomizationsJSONRequestBody defines body for PostV2EnrollmentCustomizations for application/json ContentType.
type PostV2EnrollmentCustomizationsJSONRequestBody PostV2EnrollmentCustomizationsJSONBody

// PutV2EnrollmentCustomizationsIdJSONRequestBody defines body for PutV2EnrollmentCustomizationsId for application/json ContentType.
type PutV2EnrollmentCustomizationsIdJSONRequestBody PutV2EnrollmentCustomizationsIdJSONBody

// PostV2EnrollmentCustomizationsIdHistoryJSONRequestBody defines body for PostV2EnrollmentCustomizationsIdHistory for application/json ContentType.
type PostV2EnrollmentCustomizationsIdHistoryJSONRequestBody PostV2EnrollmentCustomizationsIdHistoryJSONBody

// PostV2EnrollmentAccessGroupsJSONRequestBody defines body for PostV2EnrollmentAccessGroups for application/json ContentType.
type PostV2EnrollmentAccessGroupsJSONRequestBody PostV2EnrollmentAccessGroupsJSONBody

// PutV2EnrollmentAccessGroupsServerIdGroupIdJSONRequestBody defines body for PutV2EnrollmentAccessGroupsServerIdGroupId for application/json ContentType.
type PutV2EnrollmentAccessGroupsServerIdGroupIdJSONRequestBody PutV2EnrollmentAccessGroupsServerIdGroupIdJSONBody

// PostV2EnrollmentHistoryJSONRequestBody defines body for PostV2EnrollmentHistory for application/json ContentType.
type PostV2EnrollmentHistoryJSONRequestBody PostV2EnrollmentHistoryJSONBody

// PutV2EnrollmentLanguagesLanguageIdJSONRequestBody defines body for PutV2EnrollmentLanguagesLanguageId for application/json ContentType.
type PutV2EnrollmentLanguagesLanguageIdJSONRequestBody PutV2EnrollmentLanguagesLanguageIdJSONBody

// PostV2InventoryPreloadExportJSONRequestBody defines body for PostV2InventoryPreloadExport for application/json ContentType.
type PostV2InventoryPreloadExportJSONRequestBody PostV2InventoryPreloadExportJSONBody

// PostV2InventoryPreloadHistoryJSONRequestBody defines body for PostV2InventoryPreloadHistory for application/json ContentType.
type PostV2InventoryPreloadHistoryJSONRequestBody PostV2InventoryPreloadHistoryJSONBody

// PostV2InventoryPreloadRecordsJSONRequestBody defines body for PostV2InventoryPreloadRecords for application/json ContentType.
type PostV2InventoryPreloadRecordsJSONRequestBody PostV2InventoryPreloadRecordsJSONBody

// PutV2InventoryPreloadRecordsIdJSONRequestBody defines body for PutV2InventoryPreloadRecordsId for application/json ContentType.
type PutV2InventoryPreloadRecordsIdJSONRequestBody PutV2InventoryPreloadRecordsIdJSONBody

// PostV2MobileDevicePrestagesJSONRequestBody defines body for PostV2MobileDevicePrestages for application/json ContentType.
type PostV2MobileDevicePrestagesJSONRequestBody PostV2MobileDevicePrestagesJSONBody

// PutV2MobileDevicePrestagesIdJSONRequestBody defines body for PutV2MobileDevicePrestagesId for application/json ContentType.
type PutV2MobileDevicePrestagesIdJSONRequestBody PutV2MobileDevicePrestagesIdJSONBody

// PostV2MobileDevicePrestagesIdAttachmentsDeleteMultipleJSONRequestBody defines body for PostV2MobileDevicePrestagesIdAttachmentsDeleteMultiple for application/json ContentType.
type PostV2MobileDevicePrestagesIdAttachmentsDeleteMultipleJSONRequestBody PostV2MobileDevicePrestagesIdAttachmentsDeleteMultipleJSONBody

// PostV2MobileDevicePrestagesIdHistoryJSONRequestBody defines body for PostV2MobileDevicePrestagesIdHistory for application/json ContentType.
type PostV2MobileDevicePrestagesIdHistoryJSONRequestBody PostV2MobileDevicePrestagesIdHistoryJSONBody

// PostV2MobileDevicePrestagesIdScopeJSONRequestBody defines body for PostV2MobileDevicePrestagesIdScope for application/json ContentType.
type PostV2MobileDevicePrestagesIdScopeJSONRequestBody PostV2MobileDevicePrestagesIdScopeJSONBody

// PutV2MobileDevicePrestagesIdScopeJSONRequestBody defines body for PutV2MobileDevicePrestagesIdScope for application/json ContentType.
type PutV2MobileDevicePrestagesIdScopeJSONRequestBody PutV2MobileDevicePrestagesIdScopeJSONBody

// PostV2MobileDevicePrestagesIdScopeDeleteMultipleJSONRequestBody defines body for PostV2MobileDevicePrestagesIdScopeDeleteMultiple for application/json ContentType.
type PostV2MobileDevicePrestagesIdScopeDeleteMultipleJSONRequestBody PostV2MobileDevicePrestagesIdScopeDeleteMultipleJSONBody

// PatchV2MobileDevicesIdJSONRequestBody defines body for PatchV2MobileDevicesId for application/json ContentType.
type PatchV2MobileDevicesIdJSONRequestBody PatchV2MobileDevicesIdJSONBody

// PutV2SsoCertJSONRequestBody defines body for PutV2SsoCert for application/json ContentType.
type PutV2SsoCertJSONRequestBody PutV2SsoCertJSONBody

// PostV2SsoCertParseJSONRequestBody defines body for PostV2SsoCertParse for application/json ContentType.
type PostV2SsoCertParseJSONRequestBody PostV2SsoCertParseJSONBody

// PutV3CheckInJSONRequestBody defines body for PutV3CheckIn for application/json ContentType.
type PutV3CheckInJSONRequestBody PutV3CheckInJSONBody

// PostV3CheckInHistoryJSONRequestBody defines body for PostV3CheckInHistory for application/json ContentType.
type PostV3CheckInHistoryJSONRequestBody PostV3CheckInHistoryJSONBody

// Getter for additional properties for Account_PrivilegesBySite. Returns the specified
// element and whether it was found
func (a Account_PrivilegesBySite) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Account_PrivilegesBySite
func (a *Account_PrivilegesBySite) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Account_PrivilegesBySite to handle AdditionalProperties
func (a *Account_PrivilegesBySite) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Account_PrivilegesBySite to handle AdditionalProperties
func (a Account_PrivilegesBySite) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for AuthAccount_PrivilegesBySite. Returns the specified
// element and whether it was found
func (a AuthAccount_PrivilegesBySite) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AuthAccount_PrivilegesBySite
func (a *AuthAccount_PrivilegesBySite) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AuthAccount_PrivilegesBySite to handle AdditionalProperties
func (a *AuthAccount_PrivilegesBySite) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AuthAccount_PrivilegesBySite to handle AdditionalProperties
func (a AuthAccount_PrivilegesBySite) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for AuthAccountV1_PrivilegesBySite. Returns the specified
// element and whether it was found
func (a AuthAccountV1_PrivilegesBySite) Get(fieldName string) (value []string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for AuthAccountV1_PrivilegesBySite
func (a *AuthAccountV1_PrivilegesBySite) Set(fieldName string, value []string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string][]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for AuthAccountV1_PrivilegesBySite to handle AdditionalProperties
func (a *AuthAccountV1_PrivilegesBySite) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string][]string)
		for fieldName, fieldBuf := range object {
			var fieldVal []string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for AuthAccountV1_PrivilegesBySite to handle AdditionalProperties
func (a AuthAccountV1_PrivilegesBySite) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceEnrollmentDisownResponse_Devices. Returns the specified
// element and whether it was found
func (a DeviceEnrollmentDisownResponse_Devices) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceEnrollmentDisownResponse_Devices
func (a *DeviceEnrollmentDisownResponse_Devices) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceEnrollmentDisownResponse_Devices to handle AdditionalProperties
func (a *DeviceEnrollmentDisownResponse_Devices) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceEnrollmentDisownResponse_Devices to handle AdditionalProperties
func (a DeviceEnrollmentDisownResponse_Devices) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceEnrollmentPrestage_SkipSetupItems. Returns the specified
// element and whether it was found
func (a DeviceEnrollmentPrestage_SkipSetupItems) Get(fieldName string) (value bool, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceEnrollmentPrestage_SkipSetupItems
func (a *DeviceEnrollmentPrestage_SkipSetupItems) Set(fieldName string, value bool) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]bool)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceEnrollmentPrestage_SkipSetupItems to handle AdditionalProperties
func (a *DeviceEnrollmentPrestage_SkipSetupItems) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]bool)
		for fieldName, fieldBuf := range object {
			var fieldVal bool
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceEnrollmentPrestage_SkipSetupItems to handle AdditionalProperties
func (a DeviceEnrollmentPrestage_SkipSetupItems) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for DeviceEnrollmentPrestageV2_SkipSetupItems. Returns the specified
// element and whether it was found
func (a DeviceEnrollmentPrestageV2_SkipSetupItems) Get(fieldName string) (value bool, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for DeviceEnrollmentPrestageV2_SkipSetupItems
func (a *DeviceEnrollmentPrestageV2_SkipSetupItems) Set(fieldName string, value bool) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]bool)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for DeviceEnrollmentPrestageV2_SkipSetupItems to handle AdditionalProperties
func (a *DeviceEnrollmentPrestageV2_SkipSetupItems) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]bool)
		for fieldName, fieldBuf := range object {
			var fieldVal bool
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for DeviceEnrollmentPrestageV2_SkipSetupItems to handle AdditionalProperties
func (a DeviceEnrollmentPrestageV2_SkipSetupItems) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for Notification_Params. Returns the specified
// element and whether it was found
func (a Notification_Params) Get(fieldName string) (value map[string]interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for Notification_Params
func (a *Notification_Params) Set(fieldName string, value map[string]interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for Notification_Params to handle AdditionalProperties
func (a *Notification_Params) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal map[string]interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for Notification_Params to handle AdditionalProperties
func (a Notification_Params) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for NotificationV1_Params. Returns the specified
// element and whether it was found
func (a NotificationV1_Params) Get(fieldName string) (value map[string]interface{}, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for NotificationV1_Params
func (a *NotificationV1_Params) Set(fieldName string, value map[string]interface{}) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]map[string]interface{})
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for NotificationV1_Params to handle AdditionalProperties
func (a *NotificationV1_Params) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]map[string]interface{})
		for fieldName, fieldBuf := range object {
			var fieldVal map[string]interface{}
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for NotificationV1_Params to handle AdditionalProperties
func (a NotificationV1_Params) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for ParentApp_RestrictedTimes. Returns the specified
// element and whether it was found
func (a ParentApp_RestrictedTimes) Get(fieldName string) (value TimeFrame, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for ParentApp_RestrictedTimes
func (a *ParentApp_RestrictedTimes) Set(fieldName string, value TimeFrame) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]TimeFrame)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for ParentApp_RestrictedTimes to handle AdditionalProperties
func (a *ParentApp_RestrictedTimes) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if raw, found := object["key"]; found {
		err = json.Unmarshal(raw, &a.Key)
		if err != nil {
			return fmt.Errorf("error reading 'key': %w", err)
		}
		delete(object, "key")
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]TimeFrame)
		for fieldName, fieldBuf := range object {
			var fieldVal TimeFrame
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for ParentApp_RestrictedTimes to handle AdditionalProperties
func (a ParentApp_RestrictedTimes) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	if a.Key != nil {
		object["key"], err = json.Marshal(a.Key)
		if err != nil {
			return nil, fmt.Errorf("error marshaling 'key': %w", err)
		}
	}

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PrestageScope_SerialsByPrestageId. Returns the specified
// element and whether it was found
func (a PrestageScope_SerialsByPrestageId) Get(fieldName string) (value int, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PrestageScope_SerialsByPrestageId
func (a *PrestageScope_SerialsByPrestageId) Set(fieldName string, value int) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]int)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PrestageScope_SerialsByPrestageId to handle AdditionalProperties
func (a *PrestageScope_SerialsByPrestageId) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]int)
		for fieldName, fieldBuf := range object {
			var fieldVal int
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PrestageScope_SerialsByPrestageId to handle AdditionalProperties
func (a PrestageScope_SerialsByPrestageId) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}

// Getter for additional properties for PrestageScopeV2_SerialsByPrestageId. Returns the specified
// element and whether it was found
func (a PrestageScopeV2_SerialsByPrestageId) Get(fieldName string) (value string, found bool) {
	if a.AdditionalProperties != nil {
		value, found = a.AdditionalProperties[fieldName]
	}
	return
}

// Setter for additional properties for PrestageScopeV2_SerialsByPrestageId
func (a *PrestageScopeV2_SerialsByPrestageId) Set(fieldName string, value string) {
	if a.AdditionalProperties == nil {
		a.AdditionalProperties = make(map[string]string)
	}
	a.AdditionalProperties[fieldName] = value
}

// Override default JSON handling for PrestageScopeV2_SerialsByPrestageId to handle AdditionalProperties
func (a *PrestageScopeV2_SerialsByPrestageId) UnmarshalJSON(b []byte) error {
	object := make(map[string]json.RawMessage)
	err := json.Unmarshal(b, &object)
	if err != nil {
		return err
	}

	if len(object) != 0 {
		a.AdditionalProperties = make(map[string]string)
		for fieldName, fieldBuf := range object {
			var fieldVal string
			err := json.Unmarshal(fieldBuf, &fieldVal)
			if err != nil {
				return fmt.Errorf("error unmarshaling field %s: %w", fieldName, err)
			}
			a.AdditionalProperties[fieldName] = fieldVal
		}
	}
	return nil
}

// Override default JSON handling for PrestageScopeV2_SerialsByPrestageId to handle AdditionalProperties
func (a PrestageScopeV2_SerialsByPrestageId) MarshalJSON() ([]byte, error) {
	var err error
	object := make(map[string]json.RawMessage)

	for fieldName, field := range a.AdditionalProperties {
		object[fieldName], err = json.Marshal(field)
		if err != nil {
			return nil, fmt.Errorf("error marshaling '%s': %w", fieldName, err)
		}
	}
	return json.Marshal(object)
}
